# Parser.
# This file was generated by SableCC (http://www.sablecc.org/).
module parser is generated, no_warning("missing-doc", "unread-variable")

intrude import parser_prod
intrude import parser_work
private import tables

redef class Parser
	redef fun build_reduce_table
	do
		var reduce_table = new Array[ReduceAction].with_capacity(1117)
		reduce_table.add new ReduceAction0(0)
		reduce_table.add new ReduceAction1(0)
		reduce_table.add new ReduceAction2(0)
		reduce_table.add new ReduceAction3(0)
		reduce_table.add new ReduceAction4(0)
		reduce_table.add new ReduceAction5(0)
		reduce_table.add new ReduceAction6(0)
		reduce_table.add new ReduceAction7(0)
		reduce_table.add new ReduceAction8(0)
		reduce_table.add new ReduceAction9(0)
		reduce_table.add new ReduceAction10(0)
		reduce_table.add new ReduceAction11(0)
		reduce_table.add new ReduceAction12(0)
		reduce_table.add new ReduceAction13(0)
		reduce_table.add new ReduceAction14(0)
		reduce_table.add new ReduceAction15(0)
		reduce_table.add new ReduceAction16(1)
		reduce_table.add new ReduceAction17(2)
		reduce_table.add new ReduceAction18(2)
		reduce_table.add new ReduceAction19(3)
		reduce_table.add new ReduceAction20(3)
		reduce_table.add new ReduceAction21(4)
		reduce_table.add new ReduceAction22(4)
		reduce_table.add new ReduceAction23(4)
		reduce_table.add new ReduceAction24(5)
		reduce_table.add new ReduceAction24(5)
		reduce_table.add new ReduceAction26(6)
		reduce_table.add new ReduceAction27(6)
		reduce_table.add new ReduceAction28(6)
		reduce_table.add new ReduceAction29(6)
		reduce_table.add new ReduceAction22(7)
		reduce_table.add new ReduceAction31(7)
		reduce_table.add new ReduceAction32(8)
		reduce_table.add new ReduceAction33(8)
		reduce_table.add new ReduceAction34(8)
		reduce_table.add new ReduceAction35(8)
		reduce_table.add new ReduceAction36(8)
		reduce_table.add new ReduceAction37(9)
		reduce_table.add new ReduceAction38(9)
		reduce_table.add new ReduceAction39(9)
		reduce_table.add new ReduceAction40(10)
		reduce_table.add new ReduceAction41(11)
		reduce_table.add new ReduceAction42(11)
		reduce_table.add new ReduceAction43(12)
		reduce_table.add new ReduceAction44(13)
		reduce_table.add new ReduceAction45(13)
		reduce_table.add new ReduceAction46(13)
		reduce_table.add new ReduceAction47(14)
		reduce_table.add new ReduceAction48(15)
		reduce_table.add new ReduceAction49(15)
		reduce_table.add new ReduceAction50(15)
		reduce_table.add new ReduceAction51(15)
		reduce_table.add new ReduceAction52(15)
		reduce_table.add new ReduceAction53(15)
		reduce_table.add new ReduceAction54(15)
		reduce_table.add new ReduceAction55(15)
		reduce_table.add new ReduceAction56(15)
		reduce_table.add new ReduceAction57(15)
		reduce_table.add new ReduceAction58(15)
		reduce_table.add new ReduceAction59(15)
		reduce_table.add new ReduceAction60(15)
		reduce_table.add new ReduceAction61(15)
		reduce_table.add new ReduceAction62(15)
		reduce_table.add new ReduceAction63(15)
		reduce_table.add new ReduceAction64(15)
		reduce_table.add new ReduceAction65(15)
		reduce_table.add new ReduceAction66(15)
		reduce_table.add new ReduceAction67(15)
		reduce_table.add new ReduceAction68(15)
		reduce_table.add new ReduceAction69(15)
		reduce_table.add new ReduceAction70(15)
		reduce_table.add new ReduceAction71(15)
		reduce_table.add new ReduceAction72(15)
		reduce_table.add new ReduceAction73(15)
		reduce_table.add new ReduceAction74(15)
		reduce_table.add new ReduceAction74(15)
		reduce_table.add new ReduceAction76(16)
		reduce_table.add new ReduceAction77(16)
		reduce_table.add new ReduceAction22(16)
		reduce_table.add new ReduceAction76(17)
		reduce_table.add new ReduceAction80(17)
		reduce_table.add new ReduceAction81(18)
		reduce_table.add new ReduceAction82(18)
		reduce_table.add new ReduceAction83(18)
		reduce_table.add new ReduceAction84(18)
		reduce_table.add new ReduceAction85(18)
		reduce_table.add new ReduceAction86(19)
		reduce_table.add new ReduceAction87(19)
		reduce_table.add new ReduceAction88(19)
		reduce_table.add new ReduceAction89(19)
		reduce_table.add new ReduceAction90(19)
		reduce_table.add new ReduceAction91(19)
		reduce_table.add new ReduceAction92(19)
		reduce_table.add new ReduceAction93(19)
		reduce_table.add new ReduceAction94(19)
		reduce_table.add new ReduceAction95(19)
		reduce_table.add new ReduceAction96(19)
		reduce_table.add new ReduceAction97(19)
		reduce_table.add new ReduceAction98(19)
		reduce_table.add new ReduceAction99(19)
		reduce_table.add new ReduceAction100(19)
		reduce_table.add new ReduceAction101(19)
		reduce_table.add new ReduceAction102(19)
		reduce_table.add new ReduceAction103(19)
		reduce_table.add new ReduceAction104(19)
		reduce_table.add new ReduceAction105(19)
		reduce_table.add new ReduceAction106(19)
		reduce_table.add new ReduceAction107(19)
		reduce_table.add new ReduceAction108(19)
		reduce_table.add new ReduceAction109(20)
		reduce_table.add new ReduceAction110(20)
		reduce_table.add new ReduceAction111(20)
		reduce_table.add new ReduceAction112(20)
		reduce_table.add new ReduceAction113(21)
		reduce_table.add new ReduceAction114(21)
		reduce_table.add new ReduceAction39(21)
		reduce_table.add new ReduceAction116(22)
		reduce_table.add new ReduceAction117(23)
		reduce_table.add new ReduceAction118(23)
		reduce_table.add new ReduceAction119(23)
		reduce_table.add new ReduceAction120(23)
		reduce_table.add new ReduceAction121(23)
		reduce_table.add new ReduceAction122(24)
		reduce_table.add new ReduceAction123(24)
		reduce_table.add new ReduceAction22(24)
		reduce_table.add new ReduceAction125(25)
		reduce_table.add new ReduceAction126(26)
		reduce_table.add new ReduceAction126(26)
		reduce_table.add new ReduceAction128(26)
		reduce_table.add new ReduceAction129(27)
		reduce_table.add new ReduceAction130(27)
		reduce_table.add new ReduceAction131(27)
		reduce_table.add new ReduceAction132(28)
		reduce_table.add new ReduceAction133(28)
		reduce_table.add new ReduceAction134(28)
		reduce_table.add new ReduceAction135(28)
		reduce_table.add new ReduceAction136(28)
		reduce_table.add new ReduceAction137(28)
		reduce_table.add new ReduceAction22(29)
		reduce_table.add new ReduceAction139(29)
		reduce_table.add new ReduceAction140(30)
		reduce_table.add new ReduceAction141(31)
		reduce_table.add new ReduceAction142(31)
		reduce_table.add new ReduceAction143(32)
		reduce_table.add new ReduceAction22(32)
		reduce_table.add new ReduceAction145(33)
		reduce_table.add new ReduceAction146(34)
		reduce_table.add new ReduceAction147(34)
		reduce_table.add new ReduceAction146(35)
		reduce_table.add new ReduceAction149(35)
		reduce_table.add new ReduceAction150(36)
		reduce_table.add new ReduceAction151(36)
		reduce_table.add new ReduceAction152(36)
		reduce_table.add new ReduceAction153(36)
		reduce_table.add new ReduceAction154(37)
		reduce_table.add new ReduceAction155(37)
		reduce_table.add new ReduceAction156(38)
		reduce_table.add new ReduceAction156(39)
		reduce_table.add new ReduceAction156(40)
		reduce_table.add new ReduceAction22(40)
		reduce_table.add new ReduceAction160(41)
		reduce_table.add new ReduceAction161(41)
		reduce_table.add new ReduceAction162(41)
		reduce_table.add new ReduceAction163(41)
		reduce_table.add new ReduceAction164(42)
		reduce_table.add new ReduceAction165(42)
		reduce_table.add new ReduceAction166(43)
		reduce_table.add new ReduceAction167(43)
		reduce_table.add new ReduceAction168(44)
		reduce_table.add new ReduceAction169(44)
		reduce_table.add new ReduceAction160(45)
		reduce_table.add new ReduceAction163(46)
		reduce_table.add new ReduceAction163(46)
		reduce_table.add new ReduceAction173(46)
		reduce_table.add new ReduceAction174(46)
		reduce_table.add new ReduceAction175(46)
		reduce_table.add new ReduceAction176(46)
		reduce_table.add new ReduceAction177(46)
		reduce_table.add new ReduceAction178(46)
		reduce_table.add new ReduceAction179(46)
		reduce_table.add new ReduceAction180(46)
		reduce_table.add new ReduceAction163(46)
		reduce_table.add new ReduceAction163(46)
		reduce_table.add new ReduceAction163(46)
		reduce_table.add new ReduceAction163(46)
		reduce_table.add new ReduceAction163(46)
		reduce_table.add new ReduceAction163(46)
		reduce_table.add new ReduceAction163(46)
		reduce_table.add new ReduceAction188(46)
		reduce_table.add new ReduceAction189(46)
		reduce_table.add new ReduceAction190(46)
		reduce_table.add new ReduceAction191(46)
		reduce_table.add new ReduceAction192(46)
		reduce_table.add new ReduceAction193(46)
		reduce_table.add new ReduceAction194(46)
		reduce_table.add new ReduceAction195(46)
		reduce_table.add new ReduceAction196(46)
		reduce_table.add new ReduceAction197(46)
		reduce_table.add new ReduceAction198(46)
		reduce_table.add new ReduceAction199(46)
		reduce_table.add new ReduceAction200(46)
		reduce_table.add new ReduceAction199(46)
		reduce_table.add new ReduceAction202(46)
		reduce_table.add new ReduceAction203(46)
		reduce_table.add new ReduceAction202(46)
		reduce_table.add new ReduceAction205(46)
		reduce_table.add new ReduceAction206(47)
		reduce_table.add new ReduceAction207(47)
		reduce_table.add new ReduceAction208(48)
		reduce_table.add new ReduceAction209(48)
		reduce_table.add new ReduceAction210(48)
		reduce_table.add new ReduceAction211(48)
		reduce_table.add new ReduceAction212(49)
		reduce_table.add new ReduceAction213(49)
		reduce_table.add new ReduceAction214(49)
		reduce_table.add new ReduceAction215(49)
		reduce_table.add new ReduceAction216(49)
		reduce_table.add new ReduceAction217(49)
		reduce_table.add new ReduceAction218(49)
		reduce_table.add new ReduceAction219(49)
		reduce_table.add new ReduceAction220(49)
		reduce_table.add new ReduceAction221(49)
		reduce_table.add new ReduceAction222(49)
		reduce_table.add new ReduceAction223(49)
		reduce_table.add new ReduceAction224(49)
		reduce_table.add new ReduceAction225(49)
		reduce_table.add new ReduceAction226(49)
		reduce_table.add new ReduceAction227(49)
		reduce_table.add new ReduceAction228(49)
		reduce_table.add new ReduceAction229(49)
		reduce_table.add new ReduceAction230(49)
		reduce_table.add new ReduceAction231(49)
		reduce_table.add new ReduceAction232(49)
		reduce_table.add new ReduceAction233(49)
		reduce_table.add new ReduceAction234(49)
		reduce_table.add new ReduceAction235(49)
		reduce_table.add new ReduceAction236(49)
		reduce_table.add new ReduceAction237(49)
		reduce_table.add new ReduceAction238(49)
		reduce_table.add new ReduceAction239(49)
		reduce_table.add new ReduceAction240(49)
		reduce_table.add new ReduceAction241(49)
		reduce_table.add new ReduceAction242(49)
		reduce_table.add new ReduceAction243(49)
		reduce_table.add new ReduceAction244(49)
		reduce_table.add new ReduceAction245(49)
		reduce_table.add new ReduceAction246(49)
		reduce_table.add new ReduceAction247(49)
		reduce_table.add new ReduceAction248(49)
		reduce_table.add new ReduceAction249(49)
		reduce_table.add new ReduceAction250(50)
		reduce_table.add new ReduceAction251(50)
		reduce_table.add new ReduceAction252(50)
		reduce_table.add new ReduceAction253(50)
		reduce_table.add new ReduceAction254(50)
		reduce_table.add new ReduceAction255(50)
		reduce_table.add new ReduceAction256(50)
		reduce_table.add new ReduceAction257(50)
		reduce_table.add new ReduceAction258(50)
		reduce_table.add new ReduceAction259(50)
		reduce_table.add new ReduceAction260(50)
		reduce_table.add new ReduceAction261(51)
		reduce_table.add new ReduceAction262(51)
		reduce_table.add new ReduceAction263(51)
		reduce_table.add new ReduceAction264(52)
		reduce_table.add new ReduceAction265(52)
		reduce_table.add new ReduceAction266(52)
		reduce_table.add new ReduceAction267(52)
		reduce_table.add new ReduceAction268(52)
		reduce_table.add new ReduceAction269(52)
		reduce_table.add new ReduceAction270(52)
		reduce_table.add new ReduceAction271(52)
		reduce_table.add new ReduceAction162(53)
		reduce_table.add new ReduceAction273(54)
		reduce_table.add new ReduceAction274(54)
		reduce_table.add new ReduceAction275(55)
		reduce_table.add new ReduceAction276(55)
		reduce_table.add new ReduceAction277(56)
		reduce_table.add new ReduceAction278(56)
		reduce_table.add new ReduceAction279(57)
		reduce_table.add new ReduceAction280(57)
		reduce_table.add new ReduceAction281(58)
		reduce_table.add new ReduceAction282(59)
		reduce_table.add new ReduceAction283(59)
		reduce_table.add new ReduceAction284(60)
		reduce_table.add new ReduceAction285(60)
		reduce_table.add new ReduceAction163(60)
		reduce_table.add new ReduceAction287(61)
		reduce_table.add new ReduceAction288(61)
		reduce_table.add new ReduceAction289(61)
		reduce_table.add new ReduceAction290(61)
		reduce_table.add new ReduceAction291(62)
		reduce_table.add new ReduceAction163(63)
		reduce_table.add new ReduceAction293(63)
		reduce_table.add new ReduceAction163(64)
		reduce_table.add new ReduceAction295(64)
		reduce_table.add new ReduceAction296(64)
		reduce_table.add new ReduceAction297(64)
		reduce_table.add new ReduceAction298(64)
		reduce_table.add new ReduceAction163(65)
		reduce_table.add new ReduceAction300(65)
		reduce_table.add new ReduceAction163(66)
		reduce_table.add new ReduceAction302(66)
		reduce_table.add new ReduceAction303(66)
		reduce_table.add new ReduceAction304(66)
		reduce_table.add new ReduceAction305(66)
		reduce_table.add new ReduceAction306(66)
		reduce_table.add new ReduceAction307(66)
		reduce_table.add new ReduceAction308(66)
		reduce_table.add new ReduceAction309(66)
		reduce_table.add new ReduceAction163(67)
		reduce_table.add new ReduceAction311(67)
		reduce_table.add new ReduceAction163(68)
		reduce_table.add new ReduceAction313(68)
		reduce_table.add new ReduceAction163(69)
		reduce_table.add new ReduceAction315(69)
		reduce_table.add new ReduceAction163(70)
		reduce_table.add new ReduceAction317(70)
		reduce_table.add new ReduceAction318(70)
		reduce_table.add new ReduceAction163(71)
		reduce_table.add new ReduceAction320(71)
		reduce_table.add new ReduceAction321(71)
		reduce_table.add new ReduceAction163(72)
		reduce_table.add new ReduceAction323(72)
		reduce_table.add new ReduceAction324(72)
		reduce_table.add new ReduceAction325(72)
		reduce_table.add new ReduceAction163(73)
		reduce_table.add new ReduceAction327(73)
		reduce_table.add new ReduceAction163(74)
		reduce_table.add new ReduceAction329(74)
		reduce_table.add new ReduceAction330(74)
		reduce_table.add new ReduceAction331(74)
		reduce_table.add new ReduceAction332(74)
		reduce_table.add new ReduceAction163(75)
		reduce_table.add new ReduceAction334(75)
		reduce_table.add new ReduceAction335(75)
		reduce_table.add new ReduceAction336(75)
		reduce_table.add new ReduceAction337(75)
		reduce_table.add new ReduceAction163(76)
		reduce_table.add new ReduceAction339(76)
		reduce_table.add new ReduceAction340(76)
		reduce_table.add new ReduceAction188(76)
		reduce_table.add new ReduceAction342(76)
		reduce_table.add new ReduceAction189(76)
		reduce_table.add new ReduceAction344(76)
		reduce_table.add new ReduceAction190(76)
		reduce_table.add new ReduceAction346(76)
		reduce_table.add new ReduceAction191(76)
		reduce_table.add new ReduceAction348(76)
		reduce_table.add new ReduceAction192(76)
		reduce_table.add new ReduceAction350(76)
		reduce_table.add new ReduceAction193(76)
		reduce_table.add new ReduceAction352(76)
		reduce_table.add new ReduceAction194(76)
		reduce_table.add new ReduceAction354(76)
		reduce_table.add new ReduceAction195(76)
		reduce_table.add new ReduceAction356(76)
		reduce_table.add new ReduceAction196(76)
		reduce_table.add new ReduceAction358(76)
		reduce_table.add new ReduceAction197(76)
		reduce_table.add new ReduceAction360(76)
		reduce_table.add new ReduceAction198(76)
		reduce_table.add new ReduceAction362(76)
		reduce_table.add new ReduceAction363(76)
		reduce_table.add new ReduceAction364(76)
		reduce_table.add new ReduceAction365(76)
		reduce_table.add new ReduceAction366(76)
		reduce_table.add new ReduceAction367(76)
		reduce_table.add new ReduceAction368(76)
		reduce_table.add new ReduceAction369(76)
		reduce_table.add new ReduceAction370(76)
		reduce_table.add new ReduceAction371(76)
		reduce_table.add new ReduceAction372(76)
		reduce_table.add new ReduceAction373(76)
		reduce_table.add new ReduceAction374(76)
		reduce_table.add new ReduceAction163(77)
		reduce_table.add new ReduceAction376(77)
		reduce_table.add new ReduceAction377(77)
		reduce_table.add new ReduceAction378(78)
		reduce_table.add new ReduceAction379(78)
		reduce_table.add new ReduceAction380(78)
		reduce_table.add new ReduceAction381(78)
		reduce_table.add new ReduceAction382(78)
		reduce_table.add new ReduceAction383(78)
		reduce_table.add new ReduceAction384(78)
		reduce_table.add new ReduceAction385(78)
		reduce_table.add new ReduceAction163(78)
		reduce_table.add new ReduceAction163(78)
		reduce_table.add new ReduceAction388(78)
		reduce_table.add new ReduceAction389(78)
		reduce_table.add new ReduceAction390(78)
		reduce_table.add new ReduceAction391(79)
		reduce_table.add new ReduceAction391(79)
		reduce_table.add new ReduceAction393(80)
		reduce_table.add new ReduceAction394(81)
		reduce_table.add new ReduceAction395(82)
		reduce_table.add new ReduceAction396(82)
		reduce_table.add new ReduceAction394(83)
		reduce_table.add new ReduceAction398(84)
		reduce_table.add new ReduceAction278(84)
		reduce_table.add new ReduceAction400(84)
		reduce_table.add new ReduceAction401(85)
		reduce_table.add new ReduceAction402(85)
		reduce_table.add new ReduceAction403(86)
		reduce_table.add new ReduceAction404(86)
		reduce_table.add new ReduceAction405(87)
		reduce_table.add new ReduceAction403(88)
		reduce_table.add new ReduceAction404(88)
		reduce_table.add new ReduceAction408(89)
		reduce_table.add new ReduceAction409(90)
		reduce_table.add new ReduceAction410(91)
		reduce_table.add new ReduceAction411(91)
		reduce_table.add new ReduceAction412(92)
		reduce_table.add new ReduceAction22(92)
		reduce_table.add new ReduceAction414(93)
		reduce_table.add new ReduceAction415(93)
		reduce_table.add new ReduceAction416(94)
		reduce_table.add new ReduceAction417(94)
		reduce_table.add new ReduceAction414(95)
		reduce_table.add new ReduceAction415(95)
		reduce_table.add new ReduceAction420(95)
		reduce_table.add new ReduceAction163(96)
		reduce_table.add new ReduceAction422(97)
		reduce_table.add new ReduceAction423(98)
		reduce_table.add new ReduceAction424(98)
		reduce_table.add new ReduceAction425(98)
		reduce_table.add new ReduceAction426(98)
		reduce_table.add new ReduceAction427(98)
		reduce_table.add new ReduceAction428(99)
		reduce_table.add new ReduceAction429(99)
		reduce_table.add new ReduceAction430(99)
		reduce_table.add new ReduceAction431(99)
		reduce_table.add new ReduceAction432(99)
		reduce_table.add new ReduceAction395(100)
		reduce_table.add new ReduceAction396(100)
		reduce_table.add new ReduceAction394(101)
		reduce_table.add new ReduceAction436(102)
		reduce_table.add new ReduceAction163(102)
		reduce_table.add new ReduceAction163(102)
		reduce_table.add new ReduceAction439(102)
		reduce_table.add new ReduceAction440(102)
		reduce_table.add new ReduceAction441(102)
		reduce_table.add new ReduceAction442(103)
		reduce_table.add new ReduceAction443(103)
		reduce_table.add new ReduceAction444(103)
		reduce_table.add new ReduceAction445(104)
		reduce_table.add new ReduceAction446(104)
		reduce_table.add new ReduceAction445(105)
		reduce_table.add new ReduceAction448(105)
		reduce_table.add new ReduceAction446(105)
		reduce_table.add new ReduceAction450(105)
		reduce_table.add new ReduceAction451(106)
		reduce_table.add new ReduceAction404(107)
		reduce_table.add new ReduceAction453(107)
		reduce_table.add new ReduceAction454(108)
		reduce_table.add new ReduceAction455(109)
		reduce_table.add new ReduceAction456(109)
		reduce_table.add new ReduceAction457(110)
		reduce_table.add new ReduceAction458(110)
		reduce_table.add new ReduceAction459(111)
		reduce_table.add new ReduceAction460(111)
		reduce_table.add new ReduceAction461(111)
		reduce_table.add new ReduceAction462(111)
		reduce_table.add new ReduceAction463(112)
		reduce_table.add new ReduceAction464(112)
		reduce_table.add new ReduceAction465(112)
		reduce_table.add new ReduceAction22(112)
		reduce_table.add new ReduceAction467(113)
		reduce_table.add new ReduceAction468(113)
		reduce_table.add new ReduceAction469(113)
		reduce_table.add new ReduceAction470(113)
		reduce_table.add new ReduceAction471(114)
		reduce_table.add new ReduceAction472(114)
		reduce_table.add new ReduceAction473(114)
		reduce_table.add new ReduceAction472(114)
		reduce_table.add new ReduceAction475(115)
		reduce_table.add new ReduceAction476(116)
		reduce_table.add new ReduceAction22(117)
		reduce_table.add new ReduceAction478(117)
		reduce_table.add new ReduceAction479(118)
		reduce_table.add new ReduceAction479(118)
		reduce_table.add new ReduceAction479(118)
		reduce_table.add new ReduceAction482(119)
		reduce_table.add new ReduceAction483(119)
		reduce_table.add new ReduceAction23(119)
		reduce_table.add new ReduceAction23(119)
		reduce_table.add new ReduceAction486(119)
		reduce_table.add new ReduceAction486(119)
		reduce_table.add new ReduceAction488(119)
		reduce_table.add new ReduceAction489(119)
		reduce_table.add new ReduceAction490(119)
		reduce_table.add new ReduceAction490(119)
		reduce_table.add new ReduceAction492(119)
		reduce_table.add new ReduceAction22(120)
		reduce_table.add new ReduceAction494(120)
		reduce_table.add new ReduceAction495(121)
		reduce_table.add new ReduceAction479(121)
		reduce_table.add new ReduceAction479(122)
		reduce_table.add new ReduceAction498(122)
		reduce_table.add new ReduceAction48(123)
		reduce_table.add new ReduceAction49(123)
		reduce_table.add new ReduceAction50(123)
		reduce_table.add new ReduceAction57(123)
		reduce_table.add new ReduceAction58(123)
		reduce_table.add new ReduceAction76(124)
		reduce_table.add new ReduceAction77(124)
		reduce_table.add new ReduceAction86(125)
		reduce_table.add new ReduceAction87(125)
		reduce_table.add new ReduceAction88(125)
		reduce_table.add new ReduceAction89(125)
		reduce_table.add new ReduceAction90(125)
		reduce_table.add new ReduceAction91(125)
		reduce_table.add new ReduceAction92(125)
		reduce_table.add new ReduceAction93(125)
		reduce_table.add new ReduceAction94(125)
		reduce_table.add new ReduceAction95(125)
		reduce_table.add new ReduceAction96(125)
		reduce_table.add new ReduceAction97(125)
		reduce_table.add new ReduceAction98(125)
		reduce_table.add new ReduceAction99(125)
		reduce_table.add new ReduceAction100(125)
		reduce_table.add new ReduceAction101(125)
		reduce_table.add new ReduceAction102(125)
		reduce_table.add new ReduceAction103(125)
		reduce_table.add new ReduceAction104(125)
		reduce_table.add new ReduceAction105(125)
		reduce_table.add new ReduceAction106(125)
		reduce_table.add new ReduceAction107(125)
		reduce_table.add new ReduceAction471(126)
		reduce_table.add new ReduceAction472(126)
		reduce_table.add new ReduceAction473(126)
		reduce_table.add new ReduceAction472(126)
		reduce_table.add new ReduceAction146(127)
		reduce_table.add new ReduceAction147(127)
		reduce_table.add new ReduceAction146(128)
		reduce_table.add new ReduceAction149(128)
		reduce_table.add new ReduceAction150(129)
		reduce_table.add new ReduceAction151(129)
		reduce_table.add new ReduceAction163(130)
		reduce_table.add new ReduceAction293(130)
		reduce_table.add new ReduceAction163(131)
		reduce_table.add new ReduceAction295(131)
		reduce_table.add new ReduceAction296(131)
		reduce_table.add new ReduceAction297(131)
		reduce_table.add new ReduceAction298(131)
		reduce_table.add new ReduceAction163(132)
		reduce_table.add new ReduceAction300(132)
		reduce_table.add new ReduceAction163(133)
		reduce_table.add new ReduceAction302(133)
		reduce_table.add new ReduceAction303(133)
		reduce_table.add new ReduceAction304(133)
		reduce_table.add new ReduceAction305(133)
		reduce_table.add new ReduceAction306(133)
		reduce_table.add new ReduceAction307(133)
		reduce_table.add new ReduceAction308(133)
		reduce_table.add new ReduceAction309(133)
		reduce_table.add new ReduceAction163(134)
		reduce_table.add new ReduceAction311(134)
		reduce_table.add new ReduceAction163(135)
		reduce_table.add new ReduceAction313(135)
		reduce_table.add new ReduceAction163(136)
		reduce_table.add new ReduceAction315(136)
		reduce_table.add new ReduceAction163(137)
		reduce_table.add new ReduceAction317(137)
		reduce_table.add new ReduceAction318(137)
		reduce_table.add new ReduceAction163(138)
		reduce_table.add new ReduceAction320(138)
		reduce_table.add new ReduceAction321(138)
		reduce_table.add new ReduceAction163(139)
		reduce_table.add new ReduceAction323(139)
		reduce_table.add new ReduceAction324(139)
		reduce_table.add new ReduceAction325(139)
		reduce_table.add new ReduceAction163(140)
		reduce_table.add new ReduceAction327(140)
		reduce_table.add new ReduceAction163(141)
		reduce_table.add new ReduceAction329(141)
		reduce_table.add new ReduceAction330(141)
		reduce_table.add new ReduceAction331(141)
		reduce_table.add new ReduceAction332(141)
		reduce_table.add new ReduceAction163(142)
		reduce_table.add new ReduceAction334(142)
		reduce_table.add new ReduceAction335(142)
		reduce_table.add new ReduceAction336(142)
		reduce_table.add new ReduceAction337(142)
		reduce_table.add new ReduceAction163(143)
		reduce_table.add new ReduceAction339(143)
		reduce_table.add new ReduceAction340(143)
		reduce_table.add new ReduceAction188(143)
		reduce_table.add new ReduceAction192(143)
		reduce_table.add new ReduceAction342(143)
		reduce_table.add new ReduceAction350(143)
		reduce_table.add new ReduceAction189(143)
		reduce_table.add new ReduceAction193(143)
		reduce_table.add new ReduceAction344(143)
		reduce_table.add new ReduceAction352(143)
		reduce_table.add new ReduceAction190(143)
		reduce_table.add new ReduceAction194(143)
		reduce_table.add new ReduceAction346(143)
		reduce_table.add new ReduceAction354(143)
		reduce_table.add new ReduceAction191(143)
		reduce_table.add new ReduceAction195(143)
		reduce_table.add new ReduceAction348(143)
		reduce_table.add new ReduceAction356(143)
		reduce_table.add new ReduceAction196(143)
		reduce_table.add new ReduceAction358(143)
		reduce_table.add new ReduceAction197(143)
		reduce_table.add new ReduceAction198(143)
		reduce_table.add new ReduceAction360(143)
		reduce_table.add new ReduceAction362(143)
		reduce_table.add new ReduceAction364(143)
		reduce_table.add new ReduceAction365(143)
		reduce_table.add new ReduceAction366(143)
		reduce_table.add new ReduceAction367(143)
		reduce_table.add new ReduceAction368(143)
		reduce_table.add new ReduceAction369(143)
		reduce_table.add new ReduceAction370(143)
		reduce_table.add new ReduceAction371(143)
		reduce_table.add new ReduceAction372(143)
		reduce_table.add new ReduceAction373(143)
		reduce_table.add new ReduceAction374(143)
		reduce_table.add new ReduceAction163(144)
		reduce_table.add new ReduceAction376(144)
		reduce_table.add new ReduceAction377(144)
		reduce_table.add new ReduceAction378(145)
		reduce_table.add new ReduceAction379(145)
		reduce_table.add new ReduceAction380(145)
		reduce_table.add new ReduceAction381(145)
		reduce_table.add new ReduceAction382(145)
		reduce_table.add new ReduceAction383(145)
		reduce_table.add new ReduceAction384(145)
		reduce_table.add new ReduceAction385(145)
		reduce_table.add new ReduceAction163(145)
		reduce_table.add new ReduceAction163(145)
		reduce_table.add new ReduceAction146(146)
		reduce_table.add new ReduceAction147(146)
		reduce_table.add new ReduceAction146(147)
		reduce_table.add new ReduceAction149(147)
		reduce_table.add new ReduceAction150(148)
		reduce_table.add new ReduceAction151(148)
		reduce_table.add new ReduceAction152(148)
		reduce_table.add new ReduceAction153(148)
		reduce_table.add new ReduceAction163(149)
		reduce_table.add new ReduceAction163(149)
		reduce_table.add new ReduceAction173(149)
		reduce_table.add new ReduceAction174(149)
		reduce_table.add new ReduceAction175(149)
		reduce_table.add new ReduceAction176(149)
		reduce_table.add new ReduceAction177(149)
		reduce_table.add new ReduceAction178(149)
		reduce_table.add new ReduceAction179(149)
		reduce_table.add new ReduceAction180(149)
		reduce_table.add new ReduceAction163(149)
		reduce_table.add new ReduceAction163(149)
		reduce_table.add new ReduceAction163(149)
		reduce_table.add new ReduceAction163(149)
		reduce_table.add new ReduceAction163(149)
		reduce_table.add new ReduceAction163(149)
		reduce_table.add new ReduceAction163(149)
		reduce_table.add new ReduceAction188(149)
		reduce_table.add new ReduceAction189(149)
		reduce_table.add new ReduceAction190(149)
		reduce_table.add new ReduceAction191(149)
		reduce_table.add new ReduceAction192(149)
		reduce_table.add new ReduceAction193(149)
		reduce_table.add new ReduceAction194(149)
		reduce_table.add new ReduceAction195(149)
		reduce_table.add new ReduceAction196(149)
		reduce_table.add new ReduceAction197(149)
		reduce_table.add new ReduceAction198(149)
		reduce_table.add new ReduceAction199(149)
		reduce_table.add new ReduceAction200(149)
		reduce_table.add new ReduceAction199(149)
		reduce_table.add new ReduceAction202(149)
		reduce_table.add new ReduceAction203(149)
		reduce_table.add new ReduceAction202(149)
		reduce_table.add new ReduceAction205(149)
		reduce_table.add new ReduceAction212(150)
		reduce_table.add new ReduceAction213(150)
		reduce_table.add new ReduceAction214(150)
		reduce_table.add new ReduceAction215(150)
		reduce_table.add new ReduceAction216(150)
		reduce_table.add new ReduceAction217(150)
		reduce_table.add new ReduceAction218(150)
		reduce_table.add new ReduceAction219(150)
		reduce_table.add new ReduceAction220(150)
		reduce_table.add new ReduceAction221(150)
		reduce_table.add new ReduceAction222(150)
		reduce_table.add new ReduceAction223(150)
		reduce_table.add new ReduceAction224(150)
		reduce_table.add new ReduceAction225(150)
		reduce_table.add new ReduceAction226(150)
		reduce_table.add new ReduceAction227(150)
		reduce_table.add new ReduceAction228(150)
		reduce_table.add new ReduceAction229(150)
		reduce_table.add new ReduceAction230(150)
		reduce_table.add new ReduceAction231(150)
		reduce_table.add new ReduceAction232(150)
		reduce_table.add new ReduceAction233(150)
		reduce_table.add new ReduceAction234(150)
		reduce_table.add new ReduceAction235(150)
		reduce_table.add new ReduceAction236(150)
		reduce_table.add new ReduceAction237(150)
		reduce_table.add new ReduceAction238(150)
		reduce_table.add new ReduceAction239(150)
		reduce_table.add new ReduceAction240(150)
		reduce_table.add new ReduceAction241(150)
		reduce_table.add new ReduceAction242(150)
		reduce_table.add new ReduceAction243(150)
		reduce_table.add new ReduceAction244(150)
		reduce_table.add new ReduceAction245(150)
		reduce_table.add new ReduceAction246(150)
		reduce_table.add new ReduceAction247(150)
		reduce_table.add new ReduceAction248(150)
		reduce_table.add new ReduceAction249(150)
		reduce_table.add new ReduceAction163(151)
		reduce_table.add new ReduceAction293(151)
		reduce_table.add new ReduceAction163(152)
		reduce_table.add new ReduceAction295(152)
		reduce_table.add new ReduceAction296(152)
		reduce_table.add new ReduceAction297(152)
		reduce_table.add new ReduceAction298(152)
		reduce_table.add new ReduceAction163(153)
		reduce_table.add new ReduceAction300(153)
		reduce_table.add new ReduceAction163(154)
		reduce_table.add new ReduceAction302(154)
		reduce_table.add new ReduceAction303(154)
		reduce_table.add new ReduceAction304(154)
		reduce_table.add new ReduceAction305(154)
		reduce_table.add new ReduceAction306(154)
		reduce_table.add new ReduceAction307(154)
		reduce_table.add new ReduceAction308(154)
		reduce_table.add new ReduceAction309(154)
		reduce_table.add new ReduceAction163(155)
		reduce_table.add new ReduceAction311(155)
		reduce_table.add new ReduceAction163(156)
		reduce_table.add new ReduceAction313(156)
		reduce_table.add new ReduceAction163(157)
		reduce_table.add new ReduceAction315(157)
		reduce_table.add new ReduceAction163(158)
		reduce_table.add new ReduceAction317(158)
		reduce_table.add new ReduceAction318(158)
		reduce_table.add new ReduceAction163(159)
		reduce_table.add new ReduceAction320(159)
		reduce_table.add new ReduceAction321(159)
		reduce_table.add new ReduceAction163(160)
		reduce_table.add new ReduceAction323(160)
		reduce_table.add new ReduceAction324(160)
		reduce_table.add new ReduceAction325(160)
		reduce_table.add new ReduceAction163(161)
		reduce_table.add new ReduceAction327(161)
		reduce_table.add new ReduceAction163(162)
		reduce_table.add new ReduceAction329(162)
		reduce_table.add new ReduceAction330(162)
		reduce_table.add new ReduceAction331(162)
		reduce_table.add new ReduceAction332(162)
		reduce_table.add new ReduceAction163(163)
		reduce_table.add new ReduceAction334(163)
		reduce_table.add new ReduceAction335(163)
		reduce_table.add new ReduceAction336(163)
		reduce_table.add new ReduceAction337(163)
		reduce_table.add new ReduceAction163(164)
		reduce_table.add new ReduceAction339(164)
		reduce_table.add new ReduceAction340(164)
		reduce_table.add new ReduceAction188(164)
		reduce_table.add new ReduceAction342(164)
		reduce_table.add new ReduceAction189(164)
		reduce_table.add new ReduceAction344(164)
		reduce_table.add new ReduceAction190(164)
		reduce_table.add new ReduceAction346(164)
		reduce_table.add new ReduceAction191(164)
		reduce_table.add new ReduceAction348(164)
		reduce_table.add new ReduceAction192(164)
		reduce_table.add new ReduceAction350(164)
		reduce_table.add new ReduceAction193(164)
		reduce_table.add new ReduceAction352(164)
		reduce_table.add new ReduceAction194(164)
		reduce_table.add new ReduceAction354(164)
		reduce_table.add new ReduceAction195(164)
		reduce_table.add new ReduceAction356(164)
		reduce_table.add new ReduceAction196(164)
		reduce_table.add new ReduceAction358(164)
		reduce_table.add new ReduceAction197(164)
		reduce_table.add new ReduceAction360(164)
		reduce_table.add new ReduceAction198(164)
		reduce_table.add new ReduceAction362(164)
		reduce_table.add new ReduceAction363(164)
		reduce_table.add new ReduceAction364(164)
		reduce_table.add new ReduceAction365(164)
		reduce_table.add new ReduceAction366(164)
		reduce_table.add new ReduceAction367(164)
		reduce_table.add new ReduceAction368(164)
		reduce_table.add new ReduceAction369(164)
		reduce_table.add new ReduceAction370(164)
		reduce_table.add new ReduceAction371(164)
		reduce_table.add new ReduceAction372(164)
		reduce_table.add new ReduceAction373(164)
		reduce_table.add new ReduceAction374(164)
		reduce_table.add new ReduceAction163(165)
		reduce_table.add new ReduceAction376(165)
		reduce_table.add new ReduceAction377(165)
		reduce_table.add new ReduceAction378(166)
		reduce_table.add new ReduceAction379(166)
		reduce_table.add new ReduceAction380(166)
		reduce_table.add new ReduceAction381(166)
		reduce_table.add new ReduceAction382(166)
		reduce_table.add new ReduceAction383(166)
		reduce_table.add new ReduceAction384(166)
		reduce_table.add new ReduceAction385(166)
		reduce_table.add new ReduceAction163(166)
		reduce_table.add new ReduceAction410(167)
		reduce_table.add new ReduceAction411(167)
		reduce_table.add new ReduceAction412(168)
		reduce_table.add new ReduceAction22(168)
		reduce_table.add new ReduceAction414(169)
		reduce_table.add new ReduceAction414(170)
		reduce_table.add new ReduceAction395(171)
		reduce_table.add new ReduceAction396(171)
		reduce_table.add new ReduceAction436(172)
		reduce_table.add new ReduceAction163(172)
		reduce_table.add new ReduceAction163(172)
		reduce_table.add new ReduceAction439(172)
		reduce_table.add new ReduceAction440(172)
		reduce_table.add new ReduceAction146(173)
		reduce_table.add new ReduceAction147(173)
		reduce_table.add new ReduceAction146(174)
		reduce_table.add new ReduceAction149(174)
		reduce_table.add new ReduceAction150(175)
		reduce_table.add new ReduceAction151(175)
		reduce_table.add new ReduceAction163(176)
		reduce_table.add new ReduceAction293(176)
		reduce_table.add new ReduceAction163(177)
		reduce_table.add new ReduceAction295(177)
		reduce_table.add new ReduceAction296(177)
		reduce_table.add new ReduceAction297(177)
		reduce_table.add new ReduceAction298(177)
		reduce_table.add new ReduceAction163(178)
		reduce_table.add new ReduceAction300(178)
		reduce_table.add new ReduceAction163(179)
		reduce_table.add new ReduceAction302(179)
		reduce_table.add new ReduceAction303(179)
		reduce_table.add new ReduceAction304(179)
		reduce_table.add new ReduceAction305(179)
		reduce_table.add new ReduceAction306(179)
		reduce_table.add new ReduceAction307(179)
		reduce_table.add new ReduceAction308(179)
		reduce_table.add new ReduceAction309(179)
		reduce_table.add new ReduceAction163(180)
		reduce_table.add new ReduceAction311(180)
		reduce_table.add new ReduceAction163(181)
		reduce_table.add new ReduceAction313(181)
		reduce_table.add new ReduceAction163(182)
		reduce_table.add new ReduceAction315(182)
		reduce_table.add new ReduceAction163(183)
		reduce_table.add new ReduceAction317(183)
		reduce_table.add new ReduceAction318(183)
		reduce_table.add new ReduceAction163(184)
		reduce_table.add new ReduceAction320(184)
		reduce_table.add new ReduceAction321(184)
		reduce_table.add new ReduceAction163(185)
		reduce_table.add new ReduceAction323(185)
		reduce_table.add new ReduceAction324(185)
		reduce_table.add new ReduceAction325(185)
		reduce_table.add new ReduceAction163(186)
		reduce_table.add new ReduceAction327(186)
		reduce_table.add new ReduceAction163(187)
		reduce_table.add new ReduceAction329(187)
		reduce_table.add new ReduceAction330(187)
		reduce_table.add new ReduceAction331(187)
		reduce_table.add new ReduceAction332(187)
		reduce_table.add new ReduceAction163(188)
		reduce_table.add new ReduceAction334(188)
		reduce_table.add new ReduceAction335(188)
		reduce_table.add new ReduceAction872(188)
		reduce_table.add new ReduceAction163(189)
		reduce_table.add new ReduceAction874(189)
		reduce_table.add new ReduceAction875(189)
		reduce_table.add new ReduceAction876(189)
		reduce_table.add new ReduceAction877(189)
		reduce_table.add new ReduceAction878(189)
		reduce_table.add new ReduceAction879(189)
		reduce_table.add new ReduceAction880(189)
		reduce_table.add new ReduceAction881(189)
		reduce_table.add new ReduceAction882(189)
		reduce_table.add new ReduceAction196(189)
		reduce_table.add new ReduceAction358(189)
		reduce_table.add new ReduceAction885(189)
		reduce_table.add new ReduceAction886(189)
		reduce_table.add new ReduceAction364(189)
		reduce_table.add new ReduceAction365(189)
		reduce_table.add new ReduceAction366(189)
		reduce_table.add new ReduceAction367(189)
		reduce_table.add new ReduceAction368(189)
		reduce_table.add new ReduceAction369(189)
		reduce_table.add new ReduceAction370(189)
		reduce_table.add new ReduceAction371(189)
		reduce_table.add new ReduceAction372(189)
		reduce_table.add new ReduceAction373(189)
		reduce_table.add new ReduceAction374(189)
		reduce_table.add new ReduceAction163(190)
		reduce_table.add new ReduceAction376(190)
		reduce_table.add new ReduceAction377(190)
		reduce_table.add new ReduceAction378(191)
		reduce_table.add new ReduceAction379(191)
		reduce_table.add new ReduceAction380(191)
		reduce_table.add new ReduceAction381(191)
		reduce_table.add new ReduceAction382(191)
		reduce_table.add new ReduceAction383(191)
		reduce_table.add new ReduceAction384(191)
		reduce_table.add new ReduceAction385(191)
		reduce_table.add new ReduceAction163(191)
		reduce_table.add new ReduceAction910(192)
		reduce_table.add new ReduceAction911(192)
		reduce_table.add new ReduceAction160(193)
		reduce_table.add new ReduceAction161(193)
		reduce_table.add new ReduceAction162(193)
		reduce_table.add new ReduceAction163(193)
		reduce_table.add new ReduceAction163(194)
		reduce_table.add new ReduceAction163(194)
		reduce_table.add new ReduceAction173(194)
		reduce_table.add new ReduceAction174(194)
		reduce_table.add new ReduceAction175(194)
		reduce_table.add new ReduceAction176(194)
		reduce_table.add new ReduceAction177(194)
		reduce_table.add new ReduceAction178(194)
		reduce_table.add new ReduceAction179(194)
		reduce_table.add new ReduceAction180(194)
		reduce_table.add new ReduceAction163(194)
		reduce_table.add new ReduceAction163(194)
		reduce_table.add new ReduceAction163(194)
		reduce_table.add new ReduceAction163(194)
		reduce_table.add new ReduceAction163(194)
		reduce_table.add new ReduceAction163(194)
		reduce_table.add new ReduceAction163(194)
		reduce_table.add new ReduceAction188(194)
		reduce_table.add new ReduceAction189(194)
		reduce_table.add new ReduceAction190(194)
		reduce_table.add new ReduceAction191(194)
		reduce_table.add new ReduceAction192(194)
		reduce_table.add new ReduceAction193(194)
		reduce_table.add new ReduceAction194(194)
		reduce_table.add new ReduceAction195(194)
		reduce_table.add new ReduceAction196(194)
		reduce_table.add new ReduceAction197(194)
		reduce_table.add new ReduceAction198(194)
		reduce_table.add new ReduceAction199(194)
		reduce_table.add new ReduceAction200(194)
		reduce_table.add new ReduceAction199(194)
		reduce_table.add new ReduceAction202(194)
		reduce_table.add new ReduceAction203(194)
		reduce_table.add new ReduceAction202(194)
		reduce_table.add new ReduceAction205(194)
		reduce_table.add new ReduceAction261(195)
		reduce_table.add new ReduceAction262(195)
		reduce_table.add new ReduceAction263(195)
		reduce_table.add new ReduceAction264(196)
		reduce_table.add new ReduceAction273(197)
		reduce_table.add new ReduceAction274(197)
		reduce_table.add new ReduceAction275(198)
		reduce_table.add new ReduceAction276(198)
		reduce_table.add new ReduceAction277(199)
		reduce_table.add new ReduceAction278(199)
		reduce_table.add new ReduceAction282(200)
		reduce_table.add new ReduceAction283(200)
		reduce_table.add new ReduceAction287(201)
		reduce_table.add new ReduceAction288(201)
		reduce_table.add new ReduceAction163(202)
		reduce_table.add new ReduceAction163(202)
		reduce_table.add new ReduceAction173(202)
		reduce_table.add new ReduceAction174(202)
		reduce_table.add new ReduceAction175(202)
		reduce_table.add new ReduceAction176(202)
		reduce_table.add new ReduceAction177(202)
		reduce_table.add new ReduceAction178(202)
		reduce_table.add new ReduceAction179(202)
		reduce_table.add new ReduceAction180(202)
		reduce_table.add new ReduceAction163(202)
		reduce_table.add new ReduceAction163(202)
		reduce_table.add new ReduceAction163(202)
		reduce_table.add new ReduceAction163(202)
		reduce_table.add new ReduceAction163(202)
		reduce_table.add new ReduceAction163(202)
		reduce_table.add new ReduceAction163(202)
		reduce_table.add new ReduceAction188(202)
		reduce_table.add new ReduceAction189(202)
		reduce_table.add new ReduceAction190(202)
		reduce_table.add new ReduceAction191(202)
		reduce_table.add new ReduceAction192(202)
		reduce_table.add new ReduceAction193(202)
		reduce_table.add new ReduceAction194(202)
		reduce_table.add new ReduceAction195(202)
		reduce_table.add new ReduceAction196(202)
		reduce_table.add new ReduceAction197(202)
		reduce_table.add new ReduceAction198(202)
		reduce_table.add new ReduceAction199(202)
		reduce_table.add new ReduceAction200(202)
		reduce_table.add new ReduceAction199(202)
		reduce_table.add new ReduceAction202(202)
		reduce_table.add new ReduceAction203(202)
		reduce_table.add new ReduceAction202(202)
		reduce_table.add new ReduceAction205(202)
		reduce_table.add new ReduceAction160(203)
		reduce_table.add new ReduceAction161(203)
		reduce_table.add new ReduceAction162(203)
		reduce_table.add new ReduceAction160(204)
		reduce_table.add new ReduceAction161(204)
		reduce_table.add new ReduceAction162(204)
		reduce_table.add new ReduceAction163(205)
		reduce_table.add new ReduceAction163(205)
		reduce_table.add new ReduceAction173(205)
		reduce_table.add new ReduceAction174(205)
		reduce_table.add new ReduceAction175(205)
		reduce_table.add new ReduceAction176(205)
		reduce_table.add new ReduceAction177(205)
		reduce_table.add new ReduceAction178(205)
		reduce_table.add new ReduceAction179(205)
		reduce_table.add new ReduceAction180(205)
		reduce_table.add new ReduceAction163(205)
		reduce_table.add new ReduceAction163(205)
		reduce_table.add new ReduceAction163(205)
		reduce_table.add new ReduceAction163(205)
		reduce_table.add new ReduceAction163(205)
		reduce_table.add new ReduceAction163(205)
		reduce_table.add new ReduceAction205(205)
		reduce_table.add new ReduceAction163(206)
		reduce_table.add new ReduceAction163(206)
		reduce_table.add new ReduceAction173(206)
		reduce_table.add new ReduceAction174(206)
		reduce_table.add new ReduceAction175(206)
		reduce_table.add new ReduceAction176(206)
		reduce_table.add new ReduceAction177(206)
		reduce_table.add new ReduceAction178(206)
		reduce_table.add new ReduceAction179(206)
		reduce_table.add new ReduceAction180(206)
		reduce_table.add new ReduceAction163(206)
		reduce_table.add new ReduceAction163(206)
		reduce_table.add new ReduceAction163(206)
		reduce_table.add new ReduceAction163(206)
		reduce_table.add new ReduceAction163(206)
		reduce_table.add new ReduceAction163(206)
		reduce_table.add new ReduceAction205(206)
		reduce_table.add new ReduceAction163(207)
		reduce_table.add new ReduceAction163(207)
		reduce_table.add new ReduceAction173(207)
		reduce_table.add new ReduceAction174(207)
		reduce_table.add new ReduceAction175(207)
		reduce_table.add new ReduceAction176(207)
		reduce_table.add new ReduceAction177(207)
		reduce_table.add new ReduceAction178(207)
		reduce_table.add new ReduceAction179(207)
		reduce_table.add new ReduceAction180(207)
		reduce_table.add new ReduceAction163(207)
		reduce_table.add new ReduceAction163(207)
		reduce_table.add new ReduceAction163(207)
		reduce_table.add new ReduceAction163(207)
		reduce_table.add new ReduceAction163(207)
		reduce_table.add new ReduceAction163(207)
		reduce_table.add new ReduceAction205(207)
		reduce_table.add new ReduceAction163(208)
		reduce_table.add new ReduceAction163(208)
		reduce_table.add new ReduceAction173(208)
		reduce_table.add new ReduceAction174(208)
		reduce_table.add new ReduceAction175(208)
		reduce_table.add new ReduceAction176(208)
		reduce_table.add new ReduceAction177(208)
		reduce_table.add new ReduceAction178(208)
		reduce_table.add new ReduceAction179(208)
		reduce_table.add new ReduceAction180(208)
		reduce_table.add new ReduceAction163(208)
		reduce_table.add new ReduceAction163(208)
		reduce_table.add new ReduceAction163(208)
		reduce_table.add new ReduceAction163(208)
		reduce_table.add new ReduceAction163(208)
		reduce_table.add new ReduceAction163(208)
		reduce_table.add new ReduceAction205(208)
		reduce_table.add new ReduceAction442(209)
		reduce_table.add new ReduceAction444(209)
		reduce_table.add new ReduceAction482(210)
		reduce_table.add new ReduceAction483(210)
		reduce_table.add new ReduceAction23(210)
		reduce_table.add new ReduceAction1079(211)
		reduce_table.add new ReduceAction1080(211)
		reduce_table.add new ReduceAction1081(212)
		reduce_table.add new ReduceAction1082(212)
		reduce_table.add new ReduceAction1083(213)
		reduce_table.add new ReduceAction1084(213)
		reduce_table.add new ReduceAction37(214)
		reduce_table.add new ReduceAction1086(214)
		reduce_table.add new ReduceAction45(215)
		reduce_table.add new ReduceAction1088(215)
		reduce_table.add new ReduceAction416(216)
		reduce_table.add new ReduceAction1090(216)
		reduce_table.add new ReduceAction1091(217)
		reduce_table.add new ReduceAction1092(217)
		reduce_table.add new ReduceAction1093(218)
		reduce_table.add new ReduceAction1094(218)
		reduce_table.add new ReduceAction154(219)
		reduce_table.add new ReduceAction1096(219)
		reduce_table.add new ReduceAction395(220)
		reduce_table.add new ReduceAction1098(220)
		reduce_table.add new ReduceAction395(221)
		reduce_table.add new ReduceAction1098(221)
		reduce_table.add new ReduceAction395(222)
		reduce_table.add new ReduceAction1098(222)
		reduce_table.add new ReduceAction456(223)
		reduce_table.add new ReduceAction1104(223)
		reduce_table.add new ReduceAction416(224)
		reduce_table.add new ReduceAction1090(224)
		reduce_table.add new ReduceAction395(225)
		reduce_table.add new ReduceAction1098(225)
		reduce_table.add new ReduceAction395(226)
		reduce_table.add new ReduceAction1098(226)
		reduce_table.add new ReduceAction457(227)
		reduce_table.add new ReduceAction1112(227)
		reduce_table.add new ReduceAction1113(228)
		reduce_table.add new ReduceAction1114(228)
		reduce_table.add new ReduceAction479(229)
		reduce_table.add new ReduceAction498(229)
		return reduce_table
	end
end

private class ReduceAction0
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode4 = new Array[Object]
					var listnode6 = new Array[Object]
					var pclassdefnode5 = nodearraylist1
					assert pclassdefnode5 isa nullable AClassdef
					if pclassdefnode5 != null then
						listnode6.add(pclassdefnode5)
					end
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						null,
						listnode3,
						listnode4,
						listnode6
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction1
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode4 = new Array[Object]
					var listnode6 = new Array[Object]
					var pmoduledeclnode2 = nodearraylist1
					assert pmoduledeclnode2 isa nullable AModuledecl
					var pclassdefnode5 = nodearraylist2
					assert pclassdefnode5 isa nullable AClassdef
					if pclassdefnode5 != null then
						listnode6.add(pclassdefnode5)
					end
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						pmoduledeclnode2,
						listnode3,
						listnode4,
						listnode6
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction2
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var listnode5 = new Array[Object]
					var listnode7 = new Array[Object]
					var listnode3 = nodearraylist1
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var pclassdefnode6 = nodearraylist2
					assert pclassdefnode6 isa nullable AClassdef
					if pclassdefnode6 != null then
						listnode7.add(pclassdefnode6)
					end
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						null,
						listnode4,
						listnode5,
						listnode7
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction3
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var listnode5 = new Array[Object]
					var listnode7 = new Array[Object]
					var pmoduledeclnode2 = nodearraylist1
					assert pmoduledeclnode2 isa nullable AModuledecl
					var listnode3 = nodearraylist2
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var pclassdefnode6 = nodearraylist3
					assert pclassdefnode6 isa nullable AClassdef
					if pclassdefnode6 != null then
						listnode7.add(pclassdefnode6)
					end
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						pmoduledeclnode2,
						listnode4,
						listnode5,
						listnode7
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction4
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode5 = new Array[Object]
					var listnode7 = new Array[Object]
					var listnode4 = nodearraylist1
					assert listnode4 isa Array[Object]
					listnode5 = concat(listnode5, listnode4)
					var pclassdefnode6 = nodearraylist2
					assert pclassdefnode6 isa nullable AClassdef
					if pclassdefnode6 != null then
						listnode7.add(pclassdefnode6)
					end
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						null,
						listnode3,
						listnode5,
						listnode7
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction5
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode5 = new Array[Object]
					var listnode7 = new Array[Object]
					var pmoduledeclnode2 = nodearraylist1
					assert pmoduledeclnode2 isa nullable AModuledecl
					var listnode4 = nodearraylist2
					assert listnode4 isa Array[Object]
					listnode5 = concat(listnode5, listnode4)
					var pclassdefnode6 = nodearraylist3
					assert pclassdefnode6 isa nullable AClassdef
					if pclassdefnode6 != null then
						listnode7.add(pclassdefnode6)
					end
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						pmoduledeclnode2,
						listnode3,
						listnode5,
						listnode7
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction6
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var listnode6 = new Array[Object]
					var listnode8 = new Array[Object]
					var listnode3 = nodearraylist1
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var listnode5 = nodearraylist2
					assert listnode5 isa Array[Object]
					listnode6 = concat(listnode6, listnode5)
					var pclassdefnode7 = nodearraylist3
					assert pclassdefnode7 isa nullable AClassdef
					if pclassdefnode7 != null then
						listnode8.add(pclassdefnode7)
					end
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						null,
						listnode4,
						listnode6,
						listnode8
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction7
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var listnode6 = new Array[Object]
					var listnode8 = new Array[Object]
					var pmoduledeclnode2 = nodearraylist1
					assert pmoduledeclnode2 isa nullable AModuledecl
					var listnode3 = nodearraylist2
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var listnode5 = nodearraylist3
					assert listnode5 isa Array[Object]
					listnode6 = concat(listnode6, listnode5)
					var pclassdefnode7 = nodearraylist4
					assert pclassdefnode7 isa nullable AClassdef
					if pclassdefnode7 != null then
						listnode8.add(pclassdefnode7)
					end
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						pmoduledeclnode2,
						listnode4,
						listnode6,
						listnode8
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction8
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode4 = new Array[Object]
					var listnode7 = new Array[Object]
					var listnode5 = nodearraylist1
					assert listnode5 isa Array[Object]
					var pclassdefnode6 = nodearraylist2
					assert pclassdefnode6 isa nullable AClassdef
					listnode7 = concat(listnode7, listnode5)
					if pclassdefnode6 != null then
						listnode7.add(pclassdefnode6)
					end
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						null,
						listnode3,
						listnode4,
						listnode7
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction9
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode4 = new Array[Object]
					var listnode7 = new Array[Object]
					var pmoduledeclnode2 = nodearraylist1
					assert pmoduledeclnode2 isa nullable AModuledecl
					var listnode5 = nodearraylist2
					assert listnode5 isa Array[Object]
					var pclassdefnode6 = nodearraylist3
					assert pclassdefnode6 isa nullable AClassdef
					listnode7 = concat(listnode7, listnode5)
					if pclassdefnode6 != null then
						listnode7.add(pclassdefnode6)
					end
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						pmoduledeclnode2,
						listnode3,
						listnode4,
						listnode7
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction10
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var listnode5 = new Array[Object]
					var listnode8 = new Array[Object]
					var listnode3 = nodearraylist1
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var listnode6 = nodearraylist2
					assert listnode6 isa Array[Object]
					var pclassdefnode7 = nodearraylist3
					assert pclassdefnode7 isa nullable AClassdef
					listnode8 = concat(listnode8, listnode6)
					if pclassdefnode7 != null then
						listnode8.add(pclassdefnode7)
					end
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						null,
						listnode4,
						listnode5,
						listnode8
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction11
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var listnode5 = new Array[Object]
					var listnode8 = new Array[Object]
					var pmoduledeclnode2 = nodearraylist1
					assert pmoduledeclnode2 isa nullable AModuledecl
					var listnode3 = nodearraylist2
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var listnode6 = nodearraylist3
					assert listnode6 isa Array[Object]
					var pclassdefnode7 = nodearraylist4
					assert pclassdefnode7 isa nullable AClassdef
					listnode8 = concat(listnode8, listnode6)
					if pclassdefnode7 != null then
						listnode8.add(pclassdefnode7)
					end
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						pmoduledeclnode2,
						listnode4,
						listnode5,
						listnode8
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction12
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode5 = new Array[Object]
					var listnode8 = new Array[Object]
					var listnode4 = nodearraylist1
					assert listnode4 isa Array[Object]
					listnode5 = concat(listnode5, listnode4)
					var listnode6 = nodearraylist2
					assert listnode6 isa Array[Object]
					var pclassdefnode7 = nodearraylist3
					assert pclassdefnode7 isa nullable AClassdef
					listnode8 = concat(listnode8, listnode6)
					if pclassdefnode7 != null then
						listnode8.add(pclassdefnode7)
					end
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						null,
						listnode3,
						listnode5,
						listnode8
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction13
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode5 = new Array[Object]
					var listnode8 = new Array[Object]
					var pmoduledeclnode2 = nodearraylist1
					assert pmoduledeclnode2 isa nullable AModuledecl
					var listnode4 = nodearraylist2
					assert listnode4 isa Array[Object]
					listnode5 = concat(listnode5, listnode4)
					var listnode6 = nodearraylist3
					assert listnode6 isa Array[Object]
					var pclassdefnode7 = nodearraylist4
					assert pclassdefnode7 isa nullable AClassdef
					listnode8 = concat(listnode8, listnode6)
					if pclassdefnode7 != null then
						listnode8.add(pclassdefnode7)
					end
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						pmoduledeclnode2,
						listnode3,
						listnode5,
						listnode8
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction14
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var listnode6 = new Array[Object]
					var listnode9 = new Array[Object]
					var listnode3 = nodearraylist1
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var listnode5 = nodearraylist2
					assert listnode5 isa Array[Object]
					listnode6 = concat(listnode6, listnode5)
					var listnode7 = nodearraylist3
					assert listnode7 isa Array[Object]
					var pclassdefnode8 = nodearraylist4
					assert pclassdefnode8 isa nullable AClassdef
					listnode9 = concat(listnode9, listnode7)
					if pclassdefnode8 != null then
						listnode9.add(pclassdefnode8)
					end
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						null,
						listnode4,
						listnode6,
						listnode9
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction15
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var listnode6 = new Array[Object]
					var listnode9 = new Array[Object]
					var pmoduledeclnode2 = nodearraylist1
					assert pmoduledeclnode2 isa nullable AModuledecl
					var listnode3 = nodearraylist2
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var listnode5 = nodearraylist3
					assert listnode5 isa Array[Object]
					listnode6 = concat(listnode6, listnode5)
					var listnode7 = nodearraylist4
					assert listnode7 isa Array[Object]
					var pclassdefnode8 = nodearraylist5
					assert pclassdefnode8 isa nullable AClassdef
					listnode9 = concat(listnode9, listnode7)
					if pclassdefnode8 != null then
						listnode9.add(pclassdefnode8)
					end
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						pmoduledeclnode2,
						listnode4,
						listnode6,
						listnode9
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction16
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwmodulenode5 = nodearraylist4
					assert tkwmodulenode5 isa nullable TKwmodule
					var pmodulenamenode6 = nodearraylist6
					assert pmodulenamenode6 isa nullable AModuleName
					var pannotationsnode7 = nodearraylist7
					assert pannotationsnode7 isa nullable AAnnotations
					var pmoduledeclnode1: nullable AModuledecl = new AModuledecl.init_amoduledecl(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						tkwmodulenode5,
						pmodulenamenode6,
						pannotationsnode7
					)
					node_list = pmoduledeclnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction17
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pvisibilitynode2 = nodearraylist3
					assert pvisibilitynode2 isa nullable AVisibility
					var tkwimportnode3 = nodearraylist4
					assert tkwimportnode3 isa nullable TKwimport
					var pmodulenamenode4 = nodearraylist6
					assert pmodulenamenode4 isa nullable AModuleName
					var pannotationsnode5 = nodearraylist7
					assert pannotationsnode5 isa nullable AAnnotations
					var pimportnode1: nullable AStdImport = new AStdImport.init_astdimport(
						pvisibilitynode2,
						tkwimportnode3,
						pmodulenamenode4,
						pannotationsnode5
					)
					node_list = pimportnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction18
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pvisibilitynode2 = nodearraylist3
					assert pvisibilitynode2 isa nullable AVisibility
					var tkwimportnode3 = nodearraylist4
					assert tkwimportnode3 isa nullable TKwimport
					var tkwendnode4 = nodearraylist6
					assert tkwendnode4 isa nullable TKwend
					var pimportnode1: nullable ANoImport = new ANoImport.init_anoimport(
						pvisibilitynode2,
						tkwimportnode3,
						tkwendnode4
					)
					node_list = pimportnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction19
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var pclassdefnode1 = nodearraylist1
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction20
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var ppropdefnode2 = nodearraylist1
					assert ppropdefnode2 isa nullable APropdef
					if ppropdefnode2 != null then
						listnode3.add(ppropdefnode2)
					end
					var pclassdefnode1: nullable ATopClassdef = new ATopClassdef.init_atopclassdef(
						listnode3
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction21
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var ppropdefnode2 = nodearraylist1
					assert ppropdefnode2 isa nullable APropdef
					if ppropdefnode2 != null then
						listnode3.add(ppropdefnode2)
					end
					var pclassdefnode1: nullable AMainClassdef = new AMainClassdef.init_amainclassdef(
						listnode3
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction22
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					node_list = null
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction23
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					node_list = null
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction24
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode3 = nodearraylist2
					assert pexprnode3 isa nullable AExpr
					var ppropdefnode1: nullable AMainMethPropdef = new AMainMethPropdef.init_amainmethpropdef(
						null,
						pexprnode3
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction26
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode12 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var pqclassidnode6 = nodearraylist6
					assert pqclassidnode6 isa nullable AQclassid
					var listnode11 = nodearraylist7
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var tkwendnode13 = nodearraylist8
					assert tkwendnode13 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						pqclassidnode6,
						null,
						listnode8,
						null,
						null,
						listnode12,
						tkwendnode13
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction27
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode12 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var pqclassidnode6 = nodearraylist6
					assert pqclassidnode6 isa nullable AQclassid
					var pexterncodeblocknode10 = nodearraylist7
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var listnode11 = nodearraylist8
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var tkwendnode13 = nodearraylist9
					assert tkwendnode13 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						pqclassidnode6,
						null,
						listnode8,
						null,
						pexterncodeblocknode10,
						listnode12,
						tkwendnode13
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction28
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode9 = new Array[Object]
					var listnode13 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var pqclassidnode6 = nodearraylist6
					assert pqclassidnode6 isa nullable AQclassid
					var tobranode7 = nodearraylist7
					assert tobranode7 isa nullable TObra
					var listnode8 = nodearraylist9
					assert listnode8 isa Array[Object]
					listnode9 = concat(listnode9, listnode8)
					var tcbranode10 = nodearraylist10
					assert tcbranode10 isa nullable TCbra
					var listnode12 = nodearraylist11
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var tkwendnode14 = nodearraylist12
					assert tkwendnode14 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						pqclassidnode6,
						tobranode7,
						listnode9,
						tcbranode10,
						null,
						listnode13,
						tkwendnode14
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction29
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist13 = p.pop
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode9 = new Array[Object]
					var listnode13 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var pqclassidnode6 = nodearraylist6
					assert pqclassidnode6 isa nullable AQclassid
					var tobranode7 = nodearraylist7
					assert tobranode7 isa nullable TObra
					var listnode8 = nodearraylist9
					assert listnode8 isa Array[Object]
					listnode9 = concat(listnode9, listnode8)
					var tcbranode10 = nodearraylist10
					assert tcbranode10 isa nullable TCbra
					var pexterncodeblocknode11 = nodearraylist11
					assert pexterncodeblocknode11 isa nullable AExternCodeBlock
					var listnode12 = nodearraylist12
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var tkwendnode14 = nodearraylist13
					assert tkwendnode14 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						pqclassidnode6,
						tobranode7,
						listnode9,
						tcbranode10,
						pexterncodeblocknode11,
						listnode13,
						tkwendnode14
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction31
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tkwredefnode1 = nodearraylist1
					node_list = tkwredefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction32
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tkwclassnode2 = nodearraylist1
					assert tkwclassnode2 isa nullable TKwclass
					var pclasskindnode1: nullable AConcreteClasskind = new AConcreteClasskind.init_aconcreteclasskind(
						tkwclassnode2
					)
					node_list = pclasskindnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction33
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwabstractnode2 = nodearraylist1
					assert tkwabstractnode2 isa nullable TKwabstract
					var tkwclassnode3 = nodearraylist2
					assert tkwclassnode3 isa nullable TKwclass
					var pclasskindnode1: nullable AAbstractClasskind = new AAbstractClasskind.init_aabstractclasskind(
						tkwabstractnode2,
						tkwclassnode3
					)
					node_list = pclasskindnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction34
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tkwinterfacenode2 = nodearraylist1
					assert tkwinterfacenode2 isa nullable TKwinterface
					var pclasskindnode1: nullable AInterfaceClasskind = new AInterfaceClasskind.init_ainterfaceclasskind(
						tkwinterfacenode2
					)
					node_list = pclasskindnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction35
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tkwenumnode2 = nodearraylist1
					assert tkwenumnode2 isa nullable TKwenum
					var pclasskindnode1: nullable AEnumClasskind = new AEnumClasskind.init_aenumclasskind(
						tkwenumnode2
					)
					node_list = pclasskindnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction36
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwexternnode2 = nodearraylist1
					assert tkwexternnode2 isa nullable TKwextern
					var tkwclassnode3 = nodearraylist2
					assert tkwclassnode3 isa nullable TKwclass
					var pclasskindnode1: nullable AExternClasskind = new AExternClasskind.init_aexternclasskind(
						tkwexternnode2,
						tkwclassnode3
					)
					node_list = pclasskindnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction37
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var listnode2 = new Array[Object]
					var pformaldefnode1 = nodearraylist1
					if pformaldefnode1 != null then
						listnode2.add(pformaldefnode1)
					end
					node_list = listnode2
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction38
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var pformaldefnode1 = nodearraylist1
					var listnode2 = nodearraylist2
					assert listnode2 isa Array[Object]
					if pformaldefnode1 != null then
						listnode3.add(pformaldefnode1)
					end
					listnode3 = concat(listnode3, listnode2)
					node_list = listnode3
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction39
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var listnode1 = new Array[Object]
					node_list = listnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction40
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pformaldefnode1 = nodearraylist3
					node_list = pformaldefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction41
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tclassidnode2 = nodearraylist1
					assert tclassidnode2 isa nullable TClassid
					var ptypenode3 = nodearraylist2
					assert ptypenode3 isa nullable AType
					var pformaldefnode1: nullable AFormaldef = new AFormaldef.init_aformaldef(
						tclassidnode2,
						ptypenode3,
						null
					)
					node_list = pformaldefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction42
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tclassidnode2 = nodearraylist1
					assert tclassidnode2 isa nullable TClassid
					var ptypenode3 = nodearraylist3
					assert ptypenode3 isa nullable AType
					var pannotationsnode4 = nodearraylist2
					assert pannotationsnode4 isa nullable AAnnotations
					var pformaldefnode1: nullable AFormaldef = new AFormaldef.init_aformaldef(
						tclassidnode2,
						ptypenode3,
						pannotationsnode4
					)
					node_list = pformaldefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction43
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwsupernode5 = nodearraylist4
					assert tkwsupernode5 isa nullable TKwsuper
					var ptypenode6 = nodearraylist6
					assert ptypenode6 isa nullable AType
					var pannotationsnode7 = nodearraylist7
					assert pannotationsnode7 isa nullable AAnnotations
					var ppropdefnode1: nullable ASuperPropdef = new ASuperPropdef.init_asuperpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						tkwsupernode5,
						ptypenode6,
						pannotationsnode7
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction44
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode2 = new Array[Object]
					var listnode1 = nodearraylist1
					assert listnode1 isa Array[Object]
					listnode2 = concat(listnode2, listnode1)
					node_list = listnode2
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction45
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var listnode2 = new Array[Object]
					var ppropdefnode1 = nodearraylist1
					if ppropdefnode1 != null then
						listnode2.add(ppropdefnode1)
					end
					node_list = listnode2
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction46
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var listnode1 = new Array[Object]
					node_list = listnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction47
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var ppropdefnode1 = nodearraylist1
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction48
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwmethnode5 = nodearraylist4
					assert tkwmethnode5 isa nullable TKwmeth
					var pmethidnode8 = nodearraylist5
					assert pmethidnode8 isa nullable AMethid
					var psignaturenode9 = nodearraylist6
					assert psignaturenode9 isa nullable ASignature
					var tkwdonode13 = nodearraylist7
					assert tkwdonode13 isa nullable TKwdo
					var pexprnode14 = nodearraylist8
					assert pexprnode14 isa nullable AExpr
					var tkwendnode15 = nodearraylist9
					assert tkwendnode15 isa nullable TKwend
					var ppropdefnode1: nullable AMethPropdef = new AMethPropdef.init_amethpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						tkwmethnode5,
						null,
						null,
						pmethidnode8,
						psignaturenode9,
						null,
						null,
						null,
						tkwdonode13,
						pexprnode14,
						tkwendnode15
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction49
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwmethnode5 = nodearraylist4
					assert tkwmethnode5 isa nullable TKwmeth
					var pmethidnode8 = nodearraylist5
					assert pmethidnode8 isa nullable AMethid
					var psignaturenode9 = nodearraylist6
					assert psignaturenode9 isa nullable ASignature
					var pannotationsnode10 = nodearraylist7
					assert pannotationsnode10 isa nullable AAnnotations
					var tkwdonode13 = nodearraylist8
					assert tkwdonode13 isa nullable TKwdo
					var pexprnode14 = nodearraylist9
					assert pexprnode14 isa nullable AExpr
					var tkwendnode15 = nodearraylist10
					assert tkwendnode15 isa nullable TKwend
					var ppropdefnode1: nullable AMethPropdef = new AMethPropdef.init_amethpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						tkwmethnode5,
						null,
						null,
						pmethidnode8,
						psignaturenode9,
						pannotationsnode10,
						null,
						null,
						tkwdonode13,
						pexprnode14,
						tkwendnode15
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction50
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwmethnode5 = nodearraylist4
					assert tkwmethnode5 isa nullable TKwmeth
					var pmethidnode8 = nodearraylist5
					assert pmethidnode8 isa nullable AMethid
					var psignaturenode9 = nodearraylist6
					assert psignaturenode9 isa nullable ASignature
					var pannotationsnode10 = nodearraylist7
					assert pannotationsnode10 isa nullable AAnnotations
					var ppropdefnode1: nullable AMethPropdef = new AMethPropdef.init_amethpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						tkwmethnode5,
						null,
						null,
						pmethidnode8,
						psignaturenode9,
						pannotationsnode10,
						null,
						null,
						null,
						null,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction51
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwnewnode7 = nodearraylist4
					assert tkwnewnode7 isa nullable TKwnew
					var psignaturenode9 = nodearraylist5
					assert psignaturenode9 isa nullable ASignature
					var pannotationsnode10 = nodearraylist6
					assert pannotationsnode10 isa nullable AAnnotations
					var ppropdefnode1: nullable AMethPropdef = new AMethPropdef.init_amethpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						null,
						null,
						tkwnewnode7,
						null,
						psignaturenode9,
						pannotationsnode10,
						null,
						null,
						null,
						null,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction52
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwnewnode7 = nodearraylist4
					assert tkwnewnode7 isa nullable TKwnew
					var pmethidnode8 = nodearraylist5
					assert pmethidnode8 isa nullable AMethid
					var psignaturenode9 = nodearraylist6
					assert psignaturenode9 isa nullable ASignature
					var pannotationsnode10 = nodearraylist7
					assert pannotationsnode10 isa nullable AAnnotations
					var ppropdefnode1: nullable AMethPropdef = new AMethPropdef.init_amethpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						null,
						null,
						tkwnewnode7,
						pmethidnode8,
						psignaturenode9,
						pannotationsnode10,
						null,
						null,
						null,
						null,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction53
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwnewnode7 = nodearraylist4
					assert tkwnewnode7 isa nullable TKwnew
					var psignaturenode9 = nodearraylist5
					assert psignaturenode9 isa nullable ASignature
					var tkwdonode13 = nodearraylist6
					assert tkwdonode13 isa nullable TKwdo
					var pexprnode14 = nodearraylist7
					assert pexprnode14 isa nullable AExpr
					var tkwendnode15 = nodearraylist8
					assert tkwendnode15 isa nullable TKwend
					var ppropdefnode1: nullable AMethPropdef = new AMethPropdef.init_amethpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						null,
						null,
						tkwnewnode7,
						null,
						psignaturenode9,
						null,
						null,
						null,
						tkwdonode13,
						pexprnode14,
						tkwendnode15
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction54
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwnewnode7 = nodearraylist4
					assert tkwnewnode7 isa nullable TKwnew
					var pmethidnode8 = nodearraylist5
					assert pmethidnode8 isa nullable AMethid
					var psignaturenode9 = nodearraylist6
					assert psignaturenode9 isa nullable ASignature
					var tkwdonode13 = nodearraylist7
					assert tkwdonode13 isa nullable TKwdo
					var pexprnode14 = nodearraylist8
					assert pexprnode14 isa nullable AExpr
					var tkwendnode15 = nodearraylist9
					assert tkwendnode15 isa nullable TKwend
					var ppropdefnode1: nullable AMethPropdef = new AMethPropdef.init_amethpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						null,
						null,
						tkwnewnode7,
						pmethidnode8,
						psignaturenode9,
						null,
						null,
						null,
						tkwdonode13,
						pexprnode14,
						tkwendnode15
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction55
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwnewnode7 = nodearraylist4
					assert tkwnewnode7 isa nullable TKwnew
					var psignaturenode9 = nodearraylist5
					assert psignaturenode9 isa nullable ASignature
					var pannotationsnode10 = nodearraylist6
					assert pannotationsnode10 isa nullable AAnnotations
					var tkwdonode13 = nodearraylist7
					assert tkwdonode13 isa nullable TKwdo
					var pexprnode14 = nodearraylist8
					assert pexprnode14 isa nullable AExpr
					var tkwendnode15 = nodearraylist9
					assert tkwendnode15 isa nullable TKwend
					var ppropdefnode1: nullable AMethPropdef = new AMethPropdef.init_amethpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						null,
						null,
						tkwnewnode7,
						null,
						psignaturenode9,
						pannotationsnode10,
						null,
						null,
						tkwdonode13,
						pexprnode14,
						tkwendnode15
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction56
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwnewnode7 = nodearraylist4
					assert tkwnewnode7 isa nullable TKwnew
					var pmethidnode8 = nodearraylist5
					assert pmethidnode8 isa nullable AMethid
					var psignaturenode9 = nodearraylist6
					assert psignaturenode9 isa nullable ASignature
					var pannotationsnode10 = nodearraylist7
					assert pannotationsnode10 isa nullable AAnnotations
					var tkwdonode13 = nodearraylist8
					assert tkwdonode13 isa nullable TKwdo
					var pexprnode14 = nodearraylist9
					assert pexprnode14 isa nullable AExpr
					var tkwendnode15 = nodearraylist10
					assert tkwendnode15 isa nullable TKwend
					var ppropdefnode1: nullable AMethPropdef = new AMethPropdef.init_amethpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						null,
						null,
						tkwnewnode7,
						pmethidnode8,
						psignaturenode9,
						pannotationsnode10,
						null,
						null,
						tkwdonode13,
						pexprnode14,
						tkwendnode15
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction57
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwmethnode5 = nodearraylist4
					assert tkwmethnode5 isa nullable TKwmeth
					var pmethidnode8 = nodearraylist5
					assert pmethidnode8 isa nullable AMethid
					var psignaturenode9 = nodearraylist6
					assert psignaturenode9 isa nullable ASignature
					var pexterncallsnode11 = nodearraylist7
					assert pexterncallsnode11 isa nullable AExternCalls
					var pexterncodeblocknode12 = nodearraylist8
					assert pexterncodeblocknode12 isa nullable AExternCodeBlock
					var ppropdefnode1: nullable AMethPropdef = new AMethPropdef.init_amethpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						tkwmethnode5,
						null,
						null,
						pmethidnode8,
						psignaturenode9,
						null,
						pexterncallsnode11,
						pexterncodeblocknode12,
						null,
						null,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction58
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwmethnode5 = nodearraylist4
					assert tkwmethnode5 isa nullable TKwmeth
					var pmethidnode8 = nodearraylist5
					assert pmethidnode8 isa nullable AMethid
					var psignaturenode9 = nodearraylist6
					assert psignaturenode9 isa nullable ASignature
					var pannotationsnode10 = nodearraylist7
					assert pannotationsnode10 isa nullable AAnnotations
					var pexterncallsnode11 = nodearraylist8
					assert pexterncallsnode11 isa nullable AExternCalls
					var pexterncodeblocknode12 = nodearraylist9
					assert pexterncodeblocknode12 isa nullable AExternCodeBlock
					var ppropdefnode1: nullable AMethPropdef = new AMethPropdef.init_amethpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						tkwmethnode5,
						null,
						null,
						pmethidnode8,
						psignaturenode9,
						pannotationsnode10,
						pexterncallsnode11,
						pexterncodeblocknode12,
						null,
						null,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction59
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwvarnode5 = nodearraylist4
					assert tkwvarnode5 isa nullable TKwvar
					var tidnode6 = nodearraylist5
					assert tidnode6 isa nullable TId
					var ptypenode7 = nodearraylist6
					assert ptypenode7 isa nullable AType
					var pannotationsnode10 = nodearraylist7
					assert pannotationsnode10 isa nullable AAnnotations
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						tkwvarnode5,
						tidnode6,
						ptypenode7,
						null,
						null,
						pannotationsnode10,
						null,
						null,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction60
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwvarnode5 = nodearraylist4
					assert tkwvarnode5 isa nullable TKwvar
					var tidnode6 = nodearraylist5
					assert tidnode6 isa nullable TId
					var ptypenode7 = nodearraylist6
					assert ptypenode7 isa nullable AType
					var tassignnode8 = nodearraylist7
					assert tassignnode8 isa nullable TAssign
					var pexprnode9 = nodearraylist9
					assert pexprnode9 isa nullable AExpr
					var pannotationsnode10 = nodearraylist10
					assert pannotationsnode10 isa nullable AAnnotations
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						tkwvarnode5,
						tidnode6,
						ptypenode7,
						tassignnode8,
						pexprnode9,
						pannotationsnode10,
						null,
						null,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction61
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwvarnode5 = nodearraylist4
					assert tkwvarnode5 isa nullable TKwvar
					var tidnode6 = nodearraylist5
					assert tidnode6 isa nullable TId
					var ptypenode7 = nodearraylist6
					assert ptypenode7 isa nullable AType
					var tkwdonode11 = nodearraylist7
					assert tkwdonode11 isa nullable TKwdo
					var pexprnode12 = nodearraylist8
					assert pexprnode12 isa nullable AExpr
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						tkwvarnode5,
						tidnode6,
						ptypenode7,
						null,
						null,
						null,
						tkwdonode11,
						pexprnode12,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction62
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwvarnode5 = nodearraylist4
					assert tkwvarnode5 isa nullable TKwvar
					var tidnode6 = nodearraylist5
					assert tidnode6 isa nullable TId
					var ptypenode7 = nodearraylist6
					assert ptypenode7 isa nullable AType
					var pannotationsnode10 = nodearraylist7
					assert pannotationsnode10 isa nullable AAnnotations
					var tkwdonode11 = nodearraylist8
					assert tkwdonode11 isa nullable TKwdo
					var pexprnode12 = nodearraylist9
					assert pexprnode12 isa nullable AExpr
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						tkwvarnode5,
						tidnode6,
						ptypenode7,
						null,
						null,
						pannotationsnode10,
						tkwdonode11,
						pexprnode12,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction63
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwvarnode5 = nodearraylist4
					assert tkwvarnode5 isa nullable TKwvar
					var tidnode6 = nodearraylist5
					assert tidnode6 isa nullable TId
					var ptypenode7 = nodearraylist6
					assert ptypenode7 isa nullable AType
					var tkwdonode11 = nodearraylist7
					assert tkwdonode11 isa nullable TKwdo
					var pexprnode12 = nodearraylist8
					assert pexprnode12 isa nullable AExpr
					var tkwendnode13 = nodearraylist9
					assert tkwendnode13 isa nullable TKwend
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						tkwvarnode5,
						tidnode6,
						ptypenode7,
						null,
						null,
						null,
						tkwdonode11,
						pexprnode12,
						tkwendnode13
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction64
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwvarnode5 = nodearraylist4
					assert tkwvarnode5 isa nullable TKwvar
					var tidnode6 = nodearraylist5
					assert tidnode6 isa nullable TId
					var ptypenode7 = nodearraylist6
					assert ptypenode7 isa nullable AType
					var pannotationsnode10 = nodearraylist7
					assert pannotationsnode10 isa nullable AAnnotations
					var tkwdonode11 = nodearraylist8
					assert tkwdonode11 isa nullable TKwdo
					var pexprnode12 = nodearraylist9
					assert pexprnode12 isa nullable AExpr
					var tkwendnode13 = nodearraylist10
					assert tkwendnode13 isa nullable TKwend
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						tkwvarnode5,
						tidnode6,
						ptypenode7,
						null,
						null,
						pannotationsnode10,
						tkwdonode11,
						pexprnode12,
						tkwendnode13
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction65
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwinitnode6 = nodearraylist4
					assert tkwinitnode6 isa nullable TKwinit
					var psignaturenode9 = nodearraylist5
					assert psignaturenode9 isa nullable ASignature
					var tkwdonode13 = nodearraylist6
					assert tkwdonode13 isa nullable TKwdo
					var pexprnode14 = nodearraylist7
					assert pexprnode14 isa nullable AExpr
					var tkwendnode15 = nodearraylist8
					assert tkwendnode15 isa nullable TKwend
					var ppropdefnode1: nullable AMethPropdef = new AMethPropdef.init_amethpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						null,
						tkwinitnode6,
						null,
						null,
						psignaturenode9,
						null,
						null,
						null,
						tkwdonode13,
						pexprnode14,
						tkwendnode15
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction66
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwinitnode6 = nodearraylist4
					assert tkwinitnode6 isa nullable TKwinit
					var pmethidnode8 = nodearraylist5
					assert pmethidnode8 isa nullable AMethid
					var psignaturenode9 = nodearraylist6
					assert psignaturenode9 isa nullable ASignature
					var tkwdonode13 = nodearraylist7
					assert tkwdonode13 isa nullable TKwdo
					var pexprnode14 = nodearraylist8
					assert pexprnode14 isa nullable AExpr
					var tkwendnode15 = nodearraylist9
					assert tkwendnode15 isa nullable TKwend
					var ppropdefnode1: nullable AMethPropdef = new AMethPropdef.init_amethpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						null,
						tkwinitnode6,
						null,
						pmethidnode8,
						psignaturenode9,
						null,
						null,
						null,
						tkwdonode13,
						pexprnode14,
						tkwendnode15
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction67
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwinitnode6 = nodearraylist4
					assert tkwinitnode6 isa nullable TKwinit
					var psignaturenode9 = nodearraylist5
					assert psignaturenode9 isa nullable ASignature
					var pannotationsnode10 = nodearraylist6
					assert pannotationsnode10 isa nullable AAnnotations
					var tkwdonode13 = nodearraylist7
					assert tkwdonode13 isa nullable TKwdo
					var pexprnode14 = nodearraylist8
					assert pexprnode14 isa nullable AExpr
					var tkwendnode15 = nodearraylist9
					assert tkwendnode15 isa nullable TKwend
					var ppropdefnode1: nullable AMethPropdef = new AMethPropdef.init_amethpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						null,
						tkwinitnode6,
						null,
						null,
						psignaturenode9,
						pannotationsnode10,
						null,
						null,
						tkwdonode13,
						pexprnode14,
						tkwendnode15
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction68
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwinitnode6 = nodearraylist4
					assert tkwinitnode6 isa nullable TKwinit
					var pmethidnode8 = nodearraylist5
					assert pmethidnode8 isa nullable AMethid
					var psignaturenode9 = nodearraylist6
					assert psignaturenode9 isa nullable ASignature
					var pannotationsnode10 = nodearraylist7
					assert pannotationsnode10 isa nullable AAnnotations
					var tkwdonode13 = nodearraylist8
					assert tkwdonode13 isa nullable TKwdo
					var pexprnode14 = nodearraylist9
					assert pexprnode14 isa nullable AExpr
					var tkwendnode15 = nodearraylist10
					assert tkwendnode15 isa nullable TKwend
					var ppropdefnode1: nullable AMethPropdef = new AMethPropdef.init_amethpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						null,
						tkwinitnode6,
						null,
						pmethidnode8,
						psignaturenode9,
						pannotationsnode10,
						null,
						null,
						tkwdonode13,
						pexprnode14,
						tkwendnode15
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction69
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwtypenode5 = nodearraylist4
					assert tkwtypenode5 isa nullable TKwtype
					var pqclassidnode6 = nodearraylist5
					assert pqclassidnode6 isa nullable AQclassid
					var ptypenode7 = nodearraylist6
					assert ptypenode7 isa nullable AType
					var pannotationsnode8 = nodearraylist7
					assert pannotationsnode8 isa nullable AAnnotations
					var ppropdefnode1: nullable ATypePropdef = new ATypePropdef.init_atypepropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						tkwtypenode5,
						pqclassidnode6,
						ptypenode7,
						pannotationsnode8
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction70
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwnewnode7 = nodearraylist4
					assert tkwnewnode7 isa nullable TKwnew
					var psignaturenode9 = nodearraylist5
					assert psignaturenode9 isa nullable ASignature
					var pexterncallsnode11 = nodearraylist6
					assert pexterncallsnode11 isa nullable AExternCalls
					var pexterncodeblocknode12 = nodearraylist7
					assert pexterncodeblocknode12 isa nullable AExternCodeBlock
					var ppropdefnode1: nullable AMethPropdef = new AMethPropdef.init_amethpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						null,
						null,
						tkwnewnode7,
						null,
						psignaturenode9,
						null,
						pexterncallsnode11,
						pexterncodeblocknode12,
						null,
						null,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction71
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwnewnode7 = nodearraylist4
					assert tkwnewnode7 isa nullable TKwnew
					var pmethidnode8 = nodearraylist5
					assert pmethidnode8 isa nullable AMethid
					var psignaturenode9 = nodearraylist6
					assert psignaturenode9 isa nullable ASignature
					var pexterncallsnode11 = nodearraylist7
					assert pexterncallsnode11 isa nullable AExternCalls
					var pexterncodeblocknode12 = nodearraylist8
					assert pexterncodeblocknode12 isa nullable AExternCodeBlock
					var ppropdefnode1: nullable AMethPropdef = new AMethPropdef.init_amethpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						null,
						null,
						tkwnewnode7,
						pmethidnode8,
						psignaturenode9,
						null,
						pexterncallsnode11,
						pexterncodeblocknode12,
						null,
						null,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction72
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwnewnode7 = nodearraylist4
					assert tkwnewnode7 isa nullable TKwnew
					var psignaturenode9 = nodearraylist5
					assert psignaturenode9 isa nullable ASignature
					var pannotationsnode10 = nodearraylist6
					assert pannotationsnode10 isa nullable AAnnotations
					var pexterncallsnode11 = nodearraylist7
					assert pexterncallsnode11 isa nullable AExternCalls
					var pexterncodeblocknode12 = nodearraylist8
					assert pexterncodeblocknode12 isa nullable AExternCodeBlock
					var ppropdefnode1: nullable AMethPropdef = new AMethPropdef.init_amethpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						null,
						null,
						tkwnewnode7,
						null,
						psignaturenode9,
						pannotationsnode10,
						pexterncallsnode11,
						pexterncodeblocknode12,
						null,
						null,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction73
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwnewnode7 = nodearraylist4
					assert tkwnewnode7 isa nullable TKwnew
					var pmethidnode8 = nodearraylist5
					assert pmethidnode8 isa nullable AMethid
					var psignaturenode9 = nodearraylist6
					assert psignaturenode9 isa nullable ASignature
					var pannotationsnode10 = nodearraylist7
					assert pannotationsnode10 isa nullable AAnnotations
					var pexterncallsnode11 = nodearraylist8
					assert pexterncallsnode11 isa nullable AExternCalls
					var pexterncodeblocknode12 = nodearraylist9
					assert pexterncodeblocknode12 isa nullable AExternCodeBlock
					var ppropdefnode1: nullable AMethPropdef = new AMethPropdef.init_amethpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						null,
						null,
						tkwnewnode7,
						pmethidnode8,
						psignaturenode9,
						pannotationsnode10,
						pexterncallsnode11,
						pexterncodeblocknode12,
						null,
						null,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction74
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var ppropdefnode1 = nodearraylist1
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction76
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode6 = new Array[Object]
					var tkwisnode2 = nodearraylist1
					assert tkwisnode2 isa nullable TKwis
					var listnode5 = nodearraylist2
					assert listnode5 isa Array[Object]
					listnode6 = concat(listnode6, listnode5)
					var pannotationsnode1: nullable AAnnotations = new AAnnotations.init_aannotations(
						tkwisnode2,
						null,
						null,
						listnode6,
						null,
						null
					)
					node_list = pannotationsnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction77
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode6 = new Array[Object]
					var tkwisnode2 = nodearraylist1
					assert tkwisnode2 isa nullable TKwis
					var listnode5 = nodearraylist3
					assert listnode5 isa Array[Object]
					listnode6 = concat(listnode6, listnode5)
					var tkwendnode8 = nodearraylist4
					assert tkwendnode8 isa nullable TKwend
					var pannotationsnode1: nullable AAnnotations = new AAnnotations.init_aannotations(
						tkwisnode2,
						null,
						null,
						listnode6,
						null,
						tkwendnode8
					)
					node_list = pannotationsnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction80
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode6 = new Array[Object]
					var tkwisnode2 = nodearraylist1
					assert tkwisnode2 isa nullable TKwis
					var listnode5 = nodearraylist3
					assert listnode5 isa Array[Object]
					listnode6 = concat(listnode6, listnode5)
					var pannotationsnode1: nullable AAnnotations = new AAnnotations.init_aannotations(
						tkwisnode2,
						null,
						null,
						listnode6,
						null,
						null
					)
					node_list = pannotationsnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction81
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var pvisibilitynode1: nullable APublicVisibility = new APublicVisibility.init_apublicvisibility(
						null
					)
					node_list = pvisibilitynode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction82
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwpublicnode2 = nodearraylist1
					assert tkwpublicnode2 isa nullable TKwpublic
					var pvisibilitynode1: nullable APublicVisibility = new APublicVisibility.init_apublicvisibility(
						tkwpublicnode2
					)
					node_list = pvisibilitynode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction83
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwprivatenode2 = nodearraylist1
					assert tkwprivatenode2 isa nullable TKwprivate
					var pvisibilitynode1: nullable APrivateVisibility = new APrivateVisibility.init_aprivatevisibility(
						tkwprivatenode2
					)
					node_list = pvisibilitynode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction84
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwprotectednode2 = nodearraylist1
					assert tkwprotectednode2 isa nullable TKwprotected
					var pvisibilitynode1: nullable AProtectedVisibility = new AProtectedVisibility.init_aprotectedvisibility(
						tkwprotectednode2
					)
					node_list = pvisibilitynode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction85
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwintrudenode2 = nodearraylist1
					assert tkwintrudenode2 isa nullable TKwintrude
					var pvisibilitynode1: nullable AIntrudeVisibility = new AIntrudeVisibility.init_aintrudevisibility(
						tkwintrudenode2
					)
					node_list = pvisibilitynode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction86
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tplusnode2 = nodearraylist1
					assert tplusnode2 isa nullable TPlus
					var pmethidnode1: nullable APlusMethid = new APlusMethid.init_aplusmethid(
						tplusnode2
					)
					node_list = pmethidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction87
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tminusnode2 = nodearraylist1
					assert tminusnode2 isa nullable TMinus
					var pmethidnode1: nullable AMinusMethid = new AMinusMethid.init_aminusmethid(
						tminusnode2
					)
					node_list = pmethidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction88
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tstarnode2 = nodearraylist1
					assert tstarnode2 isa nullable TStar
					var pmethidnode1: nullable AStarMethid = new AStarMethid.init_astarmethid(
						tstarnode2
					)
					node_list = pmethidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction89
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tstarstarnode2 = nodearraylist1
					assert tstarstarnode2 isa nullable TStarstar
					var pmethidnode1: nullable AStarstarMethid = new AStarstarMethid.init_astarstarmethid(
						tstarstarnode2
					)
					node_list = pmethidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction90
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tslashnode2 = nodearraylist1
					assert tslashnode2 isa nullable TSlash
					var pmethidnode1: nullable ASlashMethid = new ASlashMethid.init_aslashmethid(
						tslashnode2
					)
					node_list = pmethidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction91
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tpercentnode2 = nodearraylist1
					assert tpercentnode2 isa nullable TPercent
					var pmethidnode1: nullable APercentMethid = new APercentMethid.init_apercentmethid(
						tpercentnode2
					)
					node_list = pmethidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction92
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tpipenode2 = nodearraylist1
					assert tpipenode2 isa nullable TPipe
					var pmethidnode1: nullable APipeMethid = new APipeMethid.init_apipemethid(
						tpipenode2
					)
					node_list = pmethidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction93
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tcaretnode2 = nodearraylist1
					assert tcaretnode2 isa nullable TCaret
					var pmethidnode1: nullable ACaretMethid = new ACaretMethid.init_acaretmethid(
						tcaretnode2
					)
					node_list = pmethidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction94
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tampnode2 = nodearraylist1
					assert tampnode2 isa nullable TAmp
					var pmethidnode1: nullable AAmpMethid = new AAmpMethid.init_aampmethid(
						tampnode2
					)
					node_list = pmethidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction95
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var ttildenode2 = nodearraylist1
					assert ttildenode2 isa nullable TTilde
					var pmethidnode1: nullable ATildeMethid = new ATildeMethid.init_atildemethid(
						ttildenode2
					)
					node_list = pmethidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction96
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var teqnode2 = nodearraylist1
					assert teqnode2 isa nullable TEq
					var pmethidnode1: nullable AEqMethid = new AEqMethid.init_aeqmethid(
						teqnode2
					)
					node_list = pmethidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction97
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tnenode2 = nodearraylist1
					assert tnenode2 isa nullable TNe
					var pmethidnode1: nullable ANeMethid = new ANeMethid.init_anemethid(
						tnenode2
					)
					node_list = pmethidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction98
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tlenode2 = nodearraylist1
					assert tlenode2 isa nullable TLe
					var pmethidnode1: nullable ALeMethid = new ALeMethid.init_alemethid(
						tlenode2
					)
					node_list = pmethidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction99
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tgenode2 = nodearraylist1
					assert tgenode2 isa nullable TGe
					var pmethidnode1: nullable AGeMethid = new AGeMethid.init_agemethid(
						tgenode2
					)
					node_list = pmethidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction100
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tltnode2 = nodearraylist1
					assert tltnode2 isa nullable TLt
					var pmethidnode1: nullable ALtMethid = new ALtMethid.init_altmethid(
						tltnode2
					)
					node_list = pmethidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction101
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tgtnode2 = nodearraylist1
					assert tgtnode2 isa nullable TGt
					var pmethidnode1: nullable AGtMethid = new AGtMethid.init_agtmethid(
						tgtnode2
					)
					node_list = pmethidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction102
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tllnode2 = nodearraylist1
					assert tllnode2 isa nullable TLl
					var pmethidnode1: nullable ALlMethid = new ALlMethid.init_allmethid(
						tllnode2
					)
					node_list = pmethidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction103
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tggnode2 = nodearraylist1
					assert tggnode2 isa nullable TGg
					var pmethidnode1: nullable AGgMethid = new AGgMethid.init_aggmethid(
						tggnode2
					)
					node_list = pmethidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction104
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tobranode2 = nodearraylist1
					assert tobranode2 isa nullable TObra
					var tcbranode3 = nodearraylist2
					assert tcbranode3 isa nullable TCbra
					var pmethidnode1: nullable ABraMethid = new ABraMethid.init_abramethid(
						tobranode2,
						tcbranode3
					)
					node_list = pmethidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction105
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tstarshipnode2 = nodearraylist1
					assert tstarshipnode2 isa nullable TStarship
					var pmethidnode1: nullable AStarshipMethid = new AStarshipMethid.init_astarshipmethid(
						tstarshipnode2
					)
					node_list = pmethidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction106
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tidnode2 = nodearraylist1
					assert tidnode2 isa nullable TId
					var tassignnode3 = nodearraylist2
					assert tassignnode3 isa nullable TAssign
					var pmethidnode1: nullable AAssignMethid = new AAssignMethid.init_aassignmethid(
						tidnode2,
						tassignnode3
					)
					node_list = pmethidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction107
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tobranode2 = nodearraylist1
					assert tobranode2 isa nullable TObra
					var tcbranode3 = nodearraylist2
					assert tcbranode3 isa nullable TCbra
					var tassignnode4 = nodearraylist3
					assert tassignnode4 isa nullable TAssign
					var pmethidnode1: nullable ABraassignMethid = new ABraassignMethid.init_abraassignmethid(
						tobranode2,
						tcbranode3,
						tassignnode4
					)
					node_list = pmethidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction108
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tidnode2 = nodearraylist1
					assert tidnode2 isa nullable TId
					var pmethidnode1: nullable AIdMethid = new AIdMethid.init_aidmethid(
						tidnode2
					)
					node_list = pmethidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction109
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var toparnode2 = nodearraylist1
					assert toparnode2 isa nullable TOpar
					var listnode3 = nodearraylist3
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var tcparnode5 = nodearraylist4
					assert tcparnode5 isa nullable TCpar
					var ptypenode6 = nodearraylist5
					assert ptypenode6 isa nullable AType
					var psignaturenode1: nullable ASignature = new ASignature.init_asignature(
						toparnode2,
						listnode4,
						tcparnode5,
						ptypenode6
					)
					node_list = psignaturenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction110
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var toparnode2 = nodearraylist1
					assert toparnode2 isa nullable TOpar
					var listnode3 = nodearraylist3
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var tcparnode5 = nodearraylist4
					assert tcparnode5 isa nullable TCpar
					var psignaturenode1: nullable ASignature = new ASignature.init_asignature(
						toparnode2,
						listnode4,
						tcparnode5,
						null
					)
					node_list = psignaturenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction111
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var ptypenode5 = nodearraylist1
					assert ptypenode5 isa nullable AType
					var psignaturenode1: nullable ASignature = new ASignature.init_asignature(
						null,
						listnode3,
						null,
						ptypenode5
					)
					node_list = psignaturenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction112
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var psignaturenode1: nullable ASignature = new ASignature.init_asignature(
						null,
						listnode3,
						null,
						null
					)
					node_list = psignaturenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction113
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode2 = new Array[Object]
					var pparamnode1 = nodearraylist1
					if pparamnode1 != null then
						listnode2.add(pparamnode1)
					end
					node_list = listnode2
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction114
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var pparamnode1 = nodearraylist1
					var listnode2 = nodearraylist2
					assert listnode2 isa Array[Object]
					if pparamnode1 != null then
						listnode3.add(pparamnode1)
					end
					listnode3 = concat(listnode3, listnode2)
					node_list = listnode3
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction116
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pparamnode1 = nodearraylist3
					node_list = pparamnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction117
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tidnode2 = nodearraylist1
					assert tidnode2 isa nullable TId
					var pannotationsnode5 = nodearraylist2
					assert pannotationsnode5 isa nullable AAnnotations
					var pparamnode1: nullable AParam = new AParam.init_aparam(
						tidnode2,
						null,
						null,
						pannotationsnode5
					)
					node_list = pparamnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction118
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tidnode2 = nodearraylist1
					assert tidnode2 isa nullable TId
					var ptypenode3 = nodearraylist2
					assert ptypenode3 isa nullable AType
					var pparamnode1: nullable AParam = new AParam.init_aparam(
						tidnode2,
						ptypenode3,
						null,
						null
					)
					node_list = pparamnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction119
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tidnode2 = nodearraylist1
					assert tidnode2 isa nullable TId
					var ptypenode3 = nodearraylist3
					assert ptypenode3 isa nullable AType
					var pannotationsnode5 = nodearraylist2
					assert pannotationsnode5 isa nullable AAnnotations
					var pparamnode1: nullable AParam = new AParam.init_aparam(
						tidnode2,
						ptypenode3,
						null,
						pannotationsnode5
					)
					node_list = pparamnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction120
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tidnode2 = nodearraylist1
					assert tidnode2 isa nullable TId
					var ptypenode3 = nodearraylist2
					assert ptypenode3 isa nullable AType
					var tdotdotdotnode4 = nodearraylist3
					assert tdotdotdotnode4 isa nullable TDotdotdot
					var pparamnode1: nullable AParam = new AParam.init_aparam(
						tidnode2,
						ptypenode3,
						tdotdotdotnode4,
						null
					)
					node_list = pparamnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction121
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tidnode2 = nodearraylist1
					assert tidnode2 isa nullable TId
					var ptypenode3 = nodearraylist3
					assert ptypenode3 isa nullable AType
					var tdotdotdotnode4 = nodearraylist4
					assert tdotdotdotnode4 isa nullable TDotdotdot
					var pannotationsnode5 = nodearraylist2
					assert pannotationsnode5 isa nullable AAnnotations
					var pparamnode1: nullable AParam = new AParam.init_aparam(
						tidnode2,
						ptypenode3,
						tdotdotdotnode4,
						pannotationsnode5
					)
					node_list = pparamnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction122
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var tkwimportnode2 = nodearraylist1
					assert tkwimportnode2 isa nullable TKwimport
					var pexterncallnode3 = nodearraylist3
					assert pexterncallnode3 isa nullable AExternCall
					if pexterncallnode3 != null then
						listnode4.add(pexterncallnode3)
					end
					var pexterncallsnode1: nullable AExternCalls = new AExternCalls.init_aexterncalls(
						tkwimportnode2,
						listnode4
					)
					node_list = pexterncallsnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction123
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode5 = new Array[Object]
					var tkwimportnode2 = nodearraylist1
					assert tkwimportnode2 isa nullable TKwimport
					var pexterncallnode3 = nodearraylist3
					assert pexterncallnode3 isa nullable AExternCall
					var listnode4 = nodearraylist4
					assert listnode4 isa Array[Object]
					if pexterncallnode3 != null then
						listnode5.add(pexterncallnode3)
					end
					listnode5 = concat(listnode5, listnode4)
					var pexterncallsnode1: nullable AExternCalls = new AExternCalls.init_aexterncalls(
						tkwimportnode2,
						listnode5
					)
					node_list = pexterncallsnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction125
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexterncallnode1 = nodearraylist3
					node_list = pexterncallnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction126
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var pexterncallnode1 = nodearraylist1
					node_list = pexterncallnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction128
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tkwsupernode2 = nodearraylist1
					assert tkwsupernode2 isa nullable TKwsuper
					var pexterncallnode1: nullable ASuperExternCall = new ASuperExternCall.init_asuperexterncall(
						tkwsupernode2
					)
					node_list = pexterncallnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction129
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var pmethidnode2 = nodearraylist1
					assert pmethidnode2 isa nullable AMethid
					var pexterncallnode1: nullable ALocalPropExternCall = new ALocalPropExternCall.init_alocalpropexterncall(
						pmethidnode2
					)
					node_list = pexterncallnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction130
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var ptypenode2 = nodearraylist1
					assert ptypenode2 isa nullable AType
					var tdotnode3 = nodearraylist2
					assert tdotnode3 isa nullable TDot
					var pmethidnode4 = nodearraylist3
					assert pmethidnode4 isa nullable AMethid
					var pexterncallnode1: nullable AFullPropExternCall = new AFullPropExternCall.init_afullpropexterncall(
						ptypenode2,
						tdotnode3,
						pmethidnode4
					)
					node_list = pexterncallnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction131
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var ptypenode2 = nodearraylist1
					assert ptypenode2 isa nullable AType
					var pexterncallnode1: nullable AInitPropExternCall = new AInitPropExternCall.init_ainitpropexterncall(
						ptypenode2
					)
					node_list = pexterncallnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction132
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var ptypenode2 = nodearraylist1
					assert ptypenode2 isa nullable AType
					var tdotnode3 = nodearraylist2
					assert tdotnode3 isa nullable TDot
					var tkwasnode4 = nodearraylist3
					assert tkwasnode4 isa nullable TKwas
					var ptypenode5 = nodearraylist7
					assert ptypenode5 isa nullable AType
					var pexterncallnode1: nullable ACastAsExternCall = new ACastAsExternCall.init_acastasexterncall(
						ptypenode2,
						tdotnode3,
						tkwasnode4,
						ptypenode5
					)
					node_list = pexterncallnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction133
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var ptypenode2 = nodearraylist1
					assert ptypenode2 isa nullable AType
					var tdotnode3 = nodearraylist2
					assert tdotnode3 isa nullable TDot
					var tkwasnode4 = nodearraylist3
					assert tkwasnode4 isa nullable TKwas
					var ptypenode5 = nodearraylist5
					assert ptypenode5 isa nullable AType
					var pexterncallnode1: nullable ACastAsExternCall = new ACastAsExternCall.init_acastasexterncall(
						ptypenode2,
						tdotnode3,
						tkwasnode4,
						ptypenode5
					)
					node_list = pexterncallnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction134
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var ptypenode2 = nodearraylist1
					assert ptypenode2 isa nullable AType
					var tkwasnode3 = nodearraylist3
					assert tkwasnode3 isa nullable TKwas
					var tkwnullablenode4 = nodearraylist7
					assert tkwnullablenode4 isa nullable TKwnullable
					var pexterncallnode1: nullable AAsNullableExternCall = new AAsNullableExternCall.init_aasnullableexterncall(
						ptypenode2,
						tkwasnode3,
						tkwnullablenode4
					)
					node_list = pexterncallnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction135
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var ptypenode2 = nodearraylist1
					assert ptypenode2 isa nullable AType
					var tkwasnode3 = nodearraylist3
					assert tkwasnode3 isa nullable TKwas
					var tkwnullablenode4 = nodearraylist5
					assert tkwnullablenode4 isa nullable TKwnullable
					var pexterncallnode1: nullable AAsNullableExternCall = new AAsNullableExternCall.init_aasnullableexterncall(
						ptypenode2,
						tkwasnode3,
						tkwnullablenode4
					)
					node_list = pexterncallnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction136
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var ptypenode2 = nodearraylist1
					assert ptypenode2 isa nullable AType
					var tkwasnode3 = nodearraylist3
					assert tkwasnode3 isa nullable TKwas
					var tkwnotnode4 = nodearraylist7
					assert tkwnotnode4 isa nullable TKwnot
					var tkwnullablenode5 = nodearraylist9
					assert tkwnullablenode5 isa nullable TKwnullable
					var pexterncallnode1: nullable AAsNotNullableExternCall = new AAsNotNullableExternCall.init_aasnotnullableexterncall(
						ptypenode2,
						tkwasnode3,
						tkwnotnode4,
						tkwnullablenode5
					)
					node_list = pexterncallnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction137
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var ptypenode2 = nodearraylist1
					assert ptypenode2 isa nullable AType
					var tkwasnode3 = nodearraylist3
					assert tkwasnode3 isa nullable TKwas
					var tkwnotnode4 = nodearraylist5
					assert tkwnotnode4 isa nullable TKwnot
					var tkwnullablenode5 = nodearraylist7
					assert tkwnullablenode5 isa nullable TKwnullable
					var pexterncallnode1: nullable AAsNotNullableExternCall = new AAsNotNullableExternCall.init_aasnotnullableexterncall(
						ptypenode2,
						tkwasnode3,
						tkwnotnode4,
						tkwnullablenode5
					)
					node_list = pexterncallnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction139
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tstringnode1 = nodearraylist1
					node_list = tstringnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction140
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwinnode2 = nodearraylist1
					assert tkwinnode2 isa nullable TKwin
					var tstringnode3 = nodearraylist3
					assert tstringnode3 isa nullable TString
					var pinlanguagenode1: nullable AInLanguage = new AInLanguage.init_ainlanguage(
						tkwinnode2,
						tstringnode3
					)
					node_list = pinlanguagenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction141
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var texterncodesegmentnode3 = nodearraylist1
					assert texterncodesegmentnode3 isa nullable TExternCodeSegment
					var pexterncodeblocknode1: nullable AExternCodeBlock = new AExternCodeBlock.init_aexterncodeblock(
						null,
						texterncodesegmentnode3
					)
					node_list = pexterncodeblocknode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction142
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pinlanguagenode2 = nodearraylist1
					assert pinlanguagenode2 isa nullable AInLanguage
					var texterncodesegmentnode3 = nodearraylist2
					assert texterncodesegmentnode3 isa nullable TExternCodeSegment
					var pexterncodeblocknode1: nullable AExternCodeBlock = new AExternCodeBlock.init_aexterncodeblock(
						pinlanguagenode2,
						texterncodesegmentnode3
					)
					node_list = pexterncodeblocknode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction143
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var pexterncodeblocknode1 = nodearraylist1
					node_list = pexterncodeblocknode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction145
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexterncodeblocknode1 = nodearraylist2
					node_list = pexterncodeblocknode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction146
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var ptypenode1 = nodearraylist1
					node_list = ptypenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction147
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var ptypenode1 = nodearraylist1
					node_list = ptypenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction149
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var ptypenode2 = nodearraylist1
					assert ptypenode2 isa nullable AType
					var tkwandnode3 = nodearraylist2
					assert tkwandnode3 isa nullable TKwand
					var ptypenode4 = nodearraylist4
					assert ptypenode4 isa nullable AType
					var ptypenode1: nullable AIntersectionType = new AIntersectionType.init_aintersectiontype(
						ptypenode2,
						tkwandnode3,
						ptypenode4
					)
					node_list = ptypenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction150
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode5 = new Array[Object]
					var pqclassidnode3 = nodearraylist1
					assert pqclassidnode3 isa nullable AQclassid
					var pannotationsnode7 = nodearraylist2
					assert pannotationsnode7 isa nullable AAnnotations
					var ptypenode1: nullable AAtomType = new AAtomType.init_aatomtype(
						null,
						pqclassidnode3,
						null,
						listnode5,
						null,
						pannotationsnode7
					)
					node_list = ptypenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction151
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode5 = new Array[Object]
					var tkwnullablenode2 = nodearraylist1
					assert tkwnullablenode2 isa nullable TKwnullable
					var pqclassidnode3 = nodearraylist2
					assert pqclassidnode3 isa nullable AQclassid
					var pannotationsnode7 = nodearraylist3
					assert pannotationsnode7 isa nullable AAnnotations
					var ptypenode1: nullable AAtomType = new AAtomType.init_aatomtype(
						tkwnullablenode2,
						pqclassidnode3,
						null,
						listnode5,
						null,
						pannotationsnode7
					)
					node_list = ptypenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction152
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode6 = new Array[Object]
					var pqclassidnode3 = nodearraylist1
					assert pqclassidnode3 isa nullable AQclassid
					var tobranode4 = nodearraylist2
					assert tobranode4 isa nullable TObra
					var listnode5 = nodearraylist4
					assert listnode5 isa Array[Object]
					listnode6 = concat(listnode6, listnode5)
					var tcbranode7 = nodearraylist6
					assert tcbranode7 isa nullable TCbra
					var pannotationsnode8 = nodearraylist7
					assert pannotationsnode8 isa nullable AAnnotations
					var ptypenode1: nullable AAtomType = new AAtomType.init_aatomtype(
						null,
						pqclassidnode3,
						tobranode4,
						listnode6,
						tcbranode7,
						pannotationsnode8
					)
					node_list = ptypenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction153
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode6 = new Array[Object]
					var tkwnullablenode2 = nodearraylist1
					assert tkwnullablenode2 isa nullable TKwnullable
					var pqclassidnode3 = nodearraylist2
					assert pqclassidnode3 isa nullable AQclassid
					var tobranode4 = nodearraylist3
					assert tobranode4 isa nullable TObra
					var listnode5 = nodearraylist5
					assert listnode5 isa Array[Object]
					listnode6 = concat(listnode6, listnode5)
					var tcbranode7 = nodearraylist7
					assert tcbranode7 isa nullable TCbra
					var pannotationsnode8 = nodearraylist8
					assert pannotationsnode8 isa nullable AAnnotations
					var ptypenode1: nullable AAtomType = new AAtomType.init_aatomtype(
						tkwnullablenode2,
						pqclassidnode3,
						tobranode4,
						listnode6,
						tcbranode7,
						pannotationsnode8
					)
					node_list = ptypenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction154
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var listnode2 = new Array[Object]
					var ptypenode1 = nodearraylist1
					if ptypenode1 != null then
						listnode2.add(ptypenode1)
					end
					node_list = listnode2
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction155
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var ptypenode1 = nodearraylist1
					var listnode2 = nodearraylist2
					assert listnode2 isa Array[Object]
					if ptypenode1 != null then
						listnode3.add(ptypenode1)
					end
					listnode3 = concat(listnode3, listnode2)
					node_list = listnode3
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction156
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var ptypenode1 = nodearraylist3
					node_list = ptypenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction160
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode1 = nodearraylist2
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction161
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode2 = new Array[Object]
					var tkwendnode3 = nodearraylist2
					assert tkwendnode3 isa nullable TKwend
					var pexprnode1: nullable ABlockExpr = new ABlockExpr.init_ablockexpr(
						listnode2,
						tkwendnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction162
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var listnode2 = new Array[Object]
					var tkwendnode3 = nodearraylist1
					assert tkwendnode3 isa nullable TKwend
					var pexprnode1: nullable ABlockExpr = new ABlockExpr.init_ablockexpr(
						listnode2,
						tkwendnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction163
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var pexprnode1 = nodearraylist1
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction164
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					if pexprnode2 != null then
						listnode3.add(pexprnode2)
					end
					var pexprnode1: nullable ABlockExpr = new ABlockExpr.init_ablockexpr(
						listnode3,
						null
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction165
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var listnode3 = nodearraylist2
					assert listnode3 isa Array[Object]
					if pexprnode2 != null then
						listnode4.add(pexprnode2)
					end
					listnode4 = concat(listnode4, listnode3)
					var pexprnode1: nullable ABlockExpr = new ABlockExpr.init_ablockexpr(
						listnode4,
						null
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction166
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					if pexprnode2 != null then
						listnode3.add(pexprnode2)
					end
					var pexprnode1: nullable ABlockExpr = new ABlockExpr.init_ablockexpr(
						listnode3,
						null
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction167
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var listnode3 = nodearraylist2
					assert listnode3 isa Array[Object]
					if pexprnode2 != null then
						listnode4.add(pexprnode2)
					end
					listnode4 = concat(listnode4, listnode3)
					var pexprnode1: nullable ABlockExpr = new ABlockExpr.init_ablockexpr(
						listnode4,
						null
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction168
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					if pexprnode2 != null then
						listnode3.add(pexprnode2)
					end
					var tkwendnode4 = nodearraylist3
					assert tkwendnode4 isa nullable TKwend
					var pexprnode1: nullable ABlockExpr = new ABlockExpr.init_ablockexpr(
						listnode3,
						tkwendnode4
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction169
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var listnode3 = nodearraylist2
					assert listnode3 isa Array[Object]
					if pexprnode2 != null then
						listnode4.add(pexprnode2)
					end
					listnode4 = concat(listnode4, listnode3)
					var tkwendnode5 = nodearraylist4
					assert tkwendnode5 isa nullable TKwend
					var pexprnode1: nullable ABlockExpr = new ABlockExpr.init_ablockexpr(
						listnode4,
						tkwendnode5
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction173
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tkwreturnnode2 = nodearraylist1
					assert tkwreturnnode2 isa nullable TKwreturn
					var pexprnode1: nullable AReturnExpr = new AReturnExpr.init_areturnexpr(
						tkwreturnnode2,
						null
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction174
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwreturnnode2 = nodearraylist1
					assert tkwreturnnode2 isa nullable TKwreturn
					var pexprnode3 = nodearraylist2
					assert pexprnode3 isa nullable AExpr
					var pexprnode1: nullable AReturnExpr = new AReturnExpr.init_areturnexpr(
						tkwreturnnode2,
						pexprnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction175
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwyieldnode2 = nodearraylist1
					assert tkwyieldnode2 isa nullable TKwyield
					var pexprnode3 = nodearraylist2
					assert pexprnode3 isa nullable AExpr
					var pexprnode1: nullable AYieldExpr = new AYieldExpr.init_ayieldexpr(
						tkwyieldnode2,
						pexprnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction176
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tkwbreaknode2 = nodearraylist1
					assert tkwbreaknode2 isa nullable TKwbreak
					var pexprnode1: nullable ABreakExpr = new ABreakExpr.init_abreakexpr(
						tkwbreaknode2,
						null
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction177
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwbreaknode2 = nodearraylist1
					assert tkwbreaknode2 isa nullable TKwbreak
					var plabelnode3 = nodearraylist2
					assert plabelnode3 isa nullable ALabel
					var pexprnode1: nullable ABreakExpr = new ABreakExpr.init_abreakexpr(
						tkwbreaknode2,
						plabelnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction178
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tkwabortnode2 = nodearraylist1
					assert tkwabortnode2 isa nullable TKwabort
					var pexprnode1: nullable AAbortExpr = new AAbortExpr.init_aabortexpr(
						tkwabortnode2
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction179
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tkwcontinuenode2 = nodearraylist1
					assert tkwcontinuenode2 isa nullable TKwcontinue
					var pexprnode1: nullable AContinueExpr = new AContinueExpr.init_acontinueexpr(
						tkwcontinuenode2,
						null
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction180
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwcontinuenode2 = nodearraylist1
					assert tkwcontinuenode2 isa nullable TKwcontinue
					var plabelnode3 = nodearraylist2
					assert plabelnode3 isa nullable ALabel
					var pexprnode1: nullable AContinueExpr = new AContinueExpr.init_acontinueexpr(
						tkwcontinuenode2,
						plabelnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction188
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tidnode5 = nodearraylist4
					assert tidnode5 isa nullable TId
					var pqidnode3: nullable AQid = new AQid.init_aqid(
						null,
						tidnode5
					)
					var pexprsnode6 = nodearraylist5
					assert pexprsnode6 isa nullable AExprs
					var pexprnode1: nullable ACallExpr = new ACallExpr.init_acallexpr(
						pexprnode2,
						pqidnode3,
						pexprsnode6
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction189
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var listnode5 = new Array[Object]
					var tclassidnode6 = nodearraylist4
					assert tclassidnode6 isa nullable TClassid
					var pqualifiednode4: nullable AQualified = new AQualified.init_aqualified(
						listnode5,
						tclassidnode6
					)
					var tidnode7 = nodearraylist5
					assert tidnode7 isa nullable TId
					var pqidnode3: nullable AQid = new AQid.init_aqid(
						pqualifiednode4,
						tidnode7
					)
					var pexprsnode8 = nodearraylist6
					assert pexprsnode8 isa nullable AExprs
					var pexprnode1: nullable ACallExpr = new ACallExpr.init_acallexpr(
						pexprnode2,
						pqidnode3,
						pexprsnode8
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction190
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var listnode6 = new Array[Object]
					var listnode5 = nodearraylist4
					assert listnode5 isa Array[Object]
					listnode6 = concat(listnode6, listnode5)
					var tclassidnode7 = nodearraylist5
					assert tclassidnode7 isa nullable TClassid
					var pqualifiednode4: nullable AQualified = new AQualified.init_aqualified(
						listnode6,
						tclassidnode7
					)
					var tidnode8 = nodearraylist6
					assert tidnode8 isa nullable TId
					var pqidnode3: nullable AQid = new AQid.init_aqid(
						pqualifiednode4,
						tidnode8
					)
					var pexprsnode9 = nodearraylist7
					assert pexprsnode9 isa nullable AExprs
					var pexprnode1: nullable ACallExpr = new ACallExpr.init_acallexpr(
						pexprnode2,
						pqidnode3,
						pexprsnode9
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction191
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var listnode6 = new Array[Object]
					var listnode5 = nodearraylist4
					assert listnode5 isa Array[Object]
					listnode6 = concat(listnode6, listnode5)
					var pqualifiednode4: nullable AQualified = new AQualified.init_aqualified(
						listnode6,
						null
					)
					var tidnode8 = nodearraylist5
					assert tidnode8 isa nullable TId
					var pqidnode3: nullable AQid = new AQid.init_aqid(
						pqualifiednode4,
						tidnode8
					)
					var pexprsnode9 = nodearraylist6
					assert pexprsnode9 isa nullable AExprs
					var pexprnode1: nullable ACallExpr = new ACallExpr.init_acallexpr(
						pexprnode2,
						pqidnode3,
						pexprsnode9
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction192
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2: nullable AImplicitSelfExpr = new AImplicitSelfExpr.init_aimplicitselfexpr
					var tidnode5 = nodearraylist1
					assert tidnode5 isa nullable TId
					var pqidnode3: nullable AQid = new AQid.init_aqid(
						null,
						tidnode5
					)
					var pexprsnode6 = nodearraylist2
					assert pexprsnode6 isa nullable AExprs
					var pexprnode1: nullable ACallExpr = new ACallExpr.init_acallexpr(
						pexprnode2,
						pqidnode3,
						pexprsnode6
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction193
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2: nullable AImplicitSelfExpr = new AImplicitSelfExpr.init_aimplicitselfexpr
					var listnode5 = new Array[Object]
					var tclassidnode6 = nodearraylist1
					assert tclassidnode6 isa nullable TClassid
					var pqualifiednode4: nullable AQualified = new AQualified.init_aqualified(
						listnode5,
						tclassidnode6
					)
					var tidnode7 = nodearraylist2
					assert tidnode7 isa nullable TId
					var pqidnode3: nullable AQid = new AQid.init_aqid(
						pqualifiednode4,
						tidnode7
					)
					var pexprsnode8 = nodearraylist3
					assert pexprsnode8 isa nullable AExprs
					var pexprnode1: nullable ACallExpr = new ACallExpr.init_acallexpr(
						pexprnode2,
						pqidnode3,
						pexprsnode8
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction194
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2: nullable AImplicitSelfExpr = new AImplicitSelfExpr.init_aimplicitselfexpr
					var listnode6 = new Array[Object]
					var listnode5 = nodearraylist1
					assert listnode5 isa Array[Object]
					listnode6 = concat(listnode6, listnode5)
					var tclassidnode7 = nodearraylist2
					assert tclassidnode7 isa nullable TClassid
					var pqualifiednode4: nullable AQualified = new AQualified.init_aqualified(
						listnode6,
						tclassidnode7
					)
					var tidnode8 = nodearraylist3
					assert tidnode8 isa nullable TId
					var pqidnode3: nullable AQid = new AQid.init_aqid(
						pqualifiednode4,
						tidnode8
					)
					var pexprsnode9 = nodearraylist4
					assert pexprsnode9 isa nullable AExprs
					var pexprnode1: nullable ACallExpr = new ACallExpr.init_acallexpr(
						pexprnode2,
						pqidnode3,
						pexprsnode9
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction195
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2: nullable AImplicitSelfExpr = new AImplicitSelfExpr.init_aimplicitselfexpr
					var listnode6 = new Array[Object]
					var listnode5 = nodearraylist1
					assert listnode5 isa Array[Object]
					listnode6 = concat(listnode6, listnode5)
					var pqualifiednode4: nullable AQualified = new AQualified.init_aqualified(
						listnode6,
						null
					)
					var tidnode8 = nodearraylist2
					assert tidnode8 isa nullable TId
					var pqidnode3: nullable AQid = new AQid.init_aqid(
						pqualifiednode4,
						tidnode8
					)
					var pexprsnode9 = nodearraylist3
					assert pexprsnode9 isa nullable AExprs
					var pexprnode1: nullable ACallExpr = new ACallExpr.init_acallexpr(
						pexprnode2,
						pqidnode3,
						pexprsnode9
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction196
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pqualifiednode2 = nodearraylist1
					assert pqualifiednode2 isa nullable AQualified
					var tkwsupernode3 = nodearraylist2
					assert tkwsupernode3 isa nullable TKwsuper
					var pexprsnode4 = nodearraylist3
					assert pexprsnode4 isa nullable AExprs
					var pexprnode1: nullable ASuperExpr = new ASuperExpr.init_asuperexpr(
						pqualifiednode2,
						tkwsupernode3,
						pexprsnode4
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction197
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tkwinitnode3 = nodearraylist4
					assert tkwinitnode3 isa nullable TKwinit
					var pexprsnode4 = nodearraylist5
					assert pexprsnode4 isa nullable AExprs
					var pexprnode1: nullable AInitExpr = new AInitExpr.init_ainitexpr(
						pexprnode2,
						tkwinitnode3,
						pexprsnode4
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction198
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2: nullable AImplicitSelfExpr = new AImplicitSelfExpr.init_aimplicitselfexpr
					var tkwinitnode3 = nodearraylist1
					assert tkwinitnode3 isa nullable TKwinit
					var pexprsnode4 = nodearraylist2
					assert pexprsnode4 isa nullable AExprs
					var pexprnode1: nullable AInitExpr = new AInitExpr.init_ainitexpr(
						pexprnode2,
						tkwinitnode3,
						pexprsnode4
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction199
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tkwinitnode3 = nodearraylist5
					assert tkwinitnode3 isa nullable TKwinit
					var pexprsnode4 = nodearraylist6
					assert pexprsnode4 isa nullable AExprs
					var pexprnode1: nullable AInitExpr = new AInitExpr.init_ainitexpr(
						pexprnode2,
						tkwinitnode3,
						pexprsnode4
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction200
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tkwinitnode3 = nodearraylist6
					assert tkwinitnode3 isa nullable TKwinit
					var pexprsnode4 = nodearraylist7
					assert pexprsnode4 isa nullable AExprs
					var pexprnode1: nullable AInitExpr = new AInitExpr.init_ainitexpr(
						pexprnode2,
						tkwinitnode3,
						pexprsnode4
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction202
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2: nullable AImplicitSelfExpr = new AImplicitSelfExpr.init_aimplicitselfexpr
					var tkwinitnode3 = nodearraylist2
					assert tkwinitnode3 isa nullable TKwinit
					var pexprsnode4 = nodearraylist3
					assert pexprsnode4 isa nullable AExprs
					var pexprnode1: nullable AInitExpr = new AInitExpr.init_ainitexpr(
						pexprnode2,
						tkwinitnode3,
						pexprsnode4
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction203
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2: nullable AImplicitSelfExpr = new AImplicitSelfExpr.init_aimplicitselfexpr
					var tkwinitnode3 = nodearraylist3
					assert tkwinitnode3 isa nullable TKwinit
					var pexprsnode4 = nodearraylist4
					assert pexprsnode4 isa nullable AExprs
					var pexprnode1: nullable AInitExpr = new AInitExpr.init_ainitexpr(
						pexprnode2,
						tkwinitnode3,
						pexprsnode4
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction205
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwdebugnode2 = nodearraylist1
					assert tkwdebugnode2 isa nullable TKwdebug
					var tkwtypenode3 = nodearraylist2
					assert tkwtypenode3 isa nullable TKwtype
					var pexprnode4 = nodearraylist5
					assert pexprnode4 isa nullable AExpr
					var ptypenode5 = nodearraylist3
					assert ptypenode5 isa nullable AType
					var pexprnode1: nullable ADebugTypeExpr = new ADebugTypeExpr.init_adebugtypeexpr(
						tkwdebugnode2,
						tkwtypenode3,
						pexprnode4,
						ptypenode5
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction206
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tkwlabelnode2 = nodearraylist1
					assert tkwlabelnode2 isa nullable TKwlabel
					var plabelnode1: nullable ALabel = new ALabel.init_alabel(
						tkwlabelnode2,
						null
					)
					node_list = plabelnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction207
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwlabelnode2 = nodearraylist1
					assert tkwlabelnode2 isa nullable TKwlabel
					var tidnode3 = nodearraylist2
					assert tidnode3 isa nullable TId
					var plabelnode1: nullable ALabel = new ALabel.init_alabel(
						tkwlabelnode2,
						tidnode3
					)
					node_list = plabelnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction208
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwvarnode2 = nodearraylist1
					assert tkwvarnode2 isa nullable TKwvar
					var tidnode3 = nodearraylist2
					assert tidnode3 isa nullable TId
					var ptypenode4 = nodearraylist3
					assert ptypenode4 isa nullable AType
					var pexprnode1: nullable AVardeclExpr = new AVardeclExpr.init_avardeclexpr(
						tkwvarnode2,
						tidnode3,
						ptypenode4,
						null,
						null,
						null
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction209
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwvarnode2 = nodearraylist1
					assert tkwvarnode2 isa nullable TKwvar
					var tidnode3 = nodearraylist2
					assert tidnode3 isa nullable TId
					var ptypenode4 = nodearraylist4
					assert ptypenode4 isa nullable AType
					var pannotationsnode7 = nodearraylist3
					assert pannotationsnode7 isa nullable AAnnotations
					var pexprnode1: nullable AVardeclExpr = new AVardeclExpr.init_avardeclexpr(
						tkwvarnode2,
						tidnode3,
						ptypenode4,
						null,
						null,
						pannotationsnode7
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction210
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwvarnode2 = nodearraylist1
					assert tkwvarnode2 isa nullable TKwvar
					var tidnode3 = nodearraylist2
					assert tidnode3 isa nullable TId
					var ptypenode4 = nodearraylist3
					assert ptypenode4 isa nullable AType
					var tassignnode5 = nodearraylist4
					assert tassignnode5 isa nullable TAssign
					var pexprnode6 = nodearraylist6
					assert pexprnode6 isa nullable AExpr
					var pexprnode1: nullable AVardeclExpr = new AVardeclExpr.init_avardeclexpr(
						tkwvarnode2,
						tidnode3,
						ptypenode4,
						tassignnode5,
						pexprnode6,
						null
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction211
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwvarnode2 = nodearraylist1
					assert tkwvarnode2 isa nullable TKwvar
					var tidnode3 = nodearraylist2
					assert tidnode3 isa nullable TId
					var ptypenode4 = nodearraylist4
					assert ptypenode4 isa nullable AType
					var tassignnode5 = nodearraylist5
					assert tassignnode5 isa nullable TAssign
					var pexprnode6 = nodearraylist7
					assert pexprnode6 isa nullable AExpr
					var pannotationsnode7 = nodearraylist3
					assert pannotationsnode7 isa nullable AAnnotations
					var pexprnode1: nullable AVardeclExpr = new AVardeclExpr.init_avardeclexpr(
						tkwvarnode2,
						tidnode3,
						ptypenode4,
						tassignnode5,
						pexprnode6,
						pannotationsnode7
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction212
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tattridnode3 = nodearraylist5
					assert tattridnode3 isa nullable TAttrid
					var tassignnode4 = nodearraylist6
					assert tassignnode4 isa nullable TAssign
					var pexprnode5 = nodearraylist7
					assert pexprnode5 isa nullable AExpr
					var pexprnode1: nullable AAttrAssignExpr = new AAttrAssignExpr.init_aattrassignexpr(
						pexprnode2,
						tattridnode3,
						tassignnode4,
						pexprnode5
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction213
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2: nullable AImplicitSelfExpr = new AImplicitSelfExpr.init_aimplicitselfexpr
					var tattridnode3 = nodearraylist2
					assert tattridnode3 isa nullable TAttrid
					var tassignnode4 = nodearraylist3
					assert tassignnode4 isa nullable TAssign
					var pexprnode5 = nodearraylist4
					assert pexprnode5 isa nullable AExpr
					var pexprnode1: nullable AAttrAssignExpr = new AAttrAssignExpr.init_aattrassignexpr(
						pexprnode2,
						tattridnode3,
						tassignnode4,
						pexprnode5
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction214
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tidnode5 = nodearraylist4
					assert tidnode5 isa nullable TId
					var pqidnode3: nullable AQid = new AQid.init_aqid(
						null,
						tidnode5
					)
					var pexprsnode6 = nodearraylist5
					assert pexprsnode6 isa nullable AExprs
					var tassignnode7 = nodearraylist6
					assert tassignnode7 isa nullable TAssign
					var pexprnode8 = nodearraylist7
					assert pexprnode8 isa nullable AExpr
					var pexprnode1: nullable ACallAssignExpr = new ACallAssignExpr.init_acallassignexpr(
						pexprnode2,
						pqidnode3,
						pexprsnode6,
						tassignnode7,
						pexprnode8
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction215
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tidnode5 = nodearraylist4
					assert tidnode5 isa nullable TId
					var pqidnode3: nullable AQid = new AQid.init_aqid(
						null,
						tidnode5
					)
					var listnode7 = new Array[Object]
					var pexprsnode6: nullable AListExprs = new AListExprs.init_alistexprs(
						listnode7
					)
					var tassignnode8 = nodearraylist5
					assert tassignnode8 isa nullable TAssign
					var pexprnode9 = nodearraylist6
					assert pexprnode9 isa nullable AExpr
					var pexprnode1: nullable ACallAssignExpr = new ACallAssignExpr.init_acallassignexpr(
						pexprnode2,
						pqidnode3,
						pexprsnode6,
						tassignnode8,
						pexprnode9
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction216
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var listnode5 = new Array[Object]
					var tclassidnode6 = nodearraylist4
					assert tclassidnode6 isa nullable TClassid
					var pqualifiednode4: nullable AQualified = new AQualified.init_aqualified(
						listnode5,
						tclassidnode6
					)
					var tidnode7 = nodearraylist5
					assert tidnode7 isa nullable TId
					var pqidnode3: nullable AQid = new AQid.init_aqid(
						pqualifiednode4,
						tidnode7
					)
					var pexprsnode8 = nodearraylist6
					assert pexprsnode8 isa nullable AExprs
					var tassignnode9 = nodearraylist7
					assert tassignnode9 isa nullable TAssign
					var pexprnode10 = nodearraylist8
					assert pexprnode10 isa nullable AExpr
					var pexprnode1: nullable ACallAssignExpr = new ACallAssignExpr.init_acallassignexpr(
						pexprnode2,
						pqidnode3,
						pexprsnode8,
						tassignnode9,
						pexprnode10
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction217
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var listnode5 = new Array[Object]
					var tclassidnode6 = nodearraylist4
					assert tclassidnode6 isa nullable TClassid
					var pqualifiednode4: nullable AQualified = new AQualified.init_aqualified(
						listnode5,
						tclassidnode6
					)
					var tidnode7 = nodearraylist5
					assert tidnode7 isa nullable TId
					var pqidnode3: nullable AQid = new AQid.init_aqid(
						pqualifiednode4,
						tidnode7
					)
					var listnode9 = new Array[Object]
					var pexprsnode8: nullable AListExprs = new AListExprs.init_alistexprs(
						listnode9
					)
					var tassignnode10 = nodearraylist6
					assert tassignnode10 isa nullable TAssign
					var pexprnode11 = nodearraylist7
					assert pexprnode11 isa nullable AExpr
					var pexprnode1: nullable ACallAssignExpr = new ACallAssignExpr.init_acallassignexpr(
						pexprnode2,
						pqidnode3,
						pexprsnode8,
						tassignnode10,
						pexprnode11
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction218
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var listnode6 = new Array[Object]
					var listnode5 = nodearraylist4
					assert listnode5 isa Array[Object]
					listnode6 = concat(listnode6, listnode5)
					var tclassidnode7 = nodearraylist5
					assert tclassidnode7 isa nullable TClassid
					var pqualifiednode4: nullable AQualified = new AQualified.init_aqualified(
						listnode6,
						tclassidnode7
					)
					var tidnode8 = nodearraylist6
					assert tidnode8 isa nullable TId
					var pqidnode3: nullable AQid = new AQid.init_aqid(
						pqualifiednode4,
						tidnode8
					)
					var pexprsnode9 = nodearraylist7
					assert pexprsnode9 isa nullable AExprs
					var tassignnode10 = nodearraylist8
					assert tassignnode10 isa nullable TAssign
					var pexprnode11 = nodearraylist9
					assert pexprnode11 isa nullable AExpr
					var pexprnode1: nullable ACallAssignExpr = new ACallAssignExpr.init_acallassignexpr(
						pexprnode2,
						pqidnode3,
						pexprsnode9,
						tassignnode10,
						pexprnode11
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction219
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var listnode6 = new Array[Object]
					var listnode5 = nodearraylist4
					assert listnode5 isa Array[Object]
					listnode6 = concat(listnode6, listnode5)
					var tclassidnode7 = nodearraylist5
					assert tclassidnode7 isa nullable TClassid
					var pqualifiednode4: nullable AQualified = new AQualified.init_aqualified(
						listnode6,
						tclassidnode7
					)
					var tidnode8 = nodearraylist6
					assert tidnode8 isa nullable TId
					var pqidnode3: nullable AQid = new AQid.init_aqid(
						pqualifiednode4,
						tidnode8
					)
					var listnode10 = new Array[Object]
					var pexprsnode9: nullable AListExprs = new AListExprs.init_alistexprs(
						listnode10
					)
					var tassignnode11 = nodearraylist7
					assert tassignnode11 isa nullable TAssign
					var pexprnode12 = nodearraylist8
					assert pexprnode12 isa nullable AExpr
					var pexprnode1: nullable ACallAssignExpr = new ACallAssignExpr.init_acallassignexpr(
						pexprnode2,
						pqidnode3,
						pexprsnode9,
						tassignnode11,
						pexprnode12
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction220
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var listnode6 = new Array[Object]
					var listnode5 = nodearraylist4
					assert listnode5 isa Array[Object]
					listnode6 = concat(listnode6, listnode5)
					var pqualifiednode4: nullable AQualified = new AQualified.init_aqualified(
						listnode6,
						null
					)
					var tidnode8 = nodearraylist5
					assert tidnode8 isa nullable TId
					var pqidnode3: nullable AQid = new AQid.init_aqid(
						pqualifiednode4,
						tidnode8
					)
					var pexprsnode9 = nodearraylist6
					assert pexprsnode9 isa nullable AExprs
					var tassignnode10 = nodearraylist7
					assert tassignnode10 isa nullable TAssign
					var pexprnode11 = nodearraylist8
					assert pexprnode11 isa nullable AExpr
					var pexprnode1: nullable ACallAssignExpr = new ACallAssignExpr.init_acallassignexpr(
						pexprnode2,
						pqidnode3,
						pexprsnode9,
						tassignnode10,
						pexprnode11
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction221
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var listnode6 = new Array[Object]
					var listnode5 = nodearraylist4
					assert listnode5 isa Array[Object]
					listnode6 = concat(listnode6, listnode5)
					var pqualifiednode4: nullable AQualified = new AQualified.init_aqualified(
						listnode6,
						null
					)
					var tidnode8 = nodearraylist5
					assert tidnode8 isa nullable TId
					var pqidnode3: nullable AQid = new AQid.init_aqid(
						pqualifiednode4,
						tidnode8
					)
					var listnode10 = new Array[Object]
					var pexprsnode9: nullable AListExprs = new AListExprs.init_alistexprs(
						listnode10
					)
					var tassignnode11 = nodearraylist6
					assert tassignnode11 isa nullable TAssign
					var pexprnode12 = nodearraylist7
					assert pexprnode12 isa nullable AExpr
					var pexprnode1: nullable ACallAssignExpr = new ACallAssignExpr.init_acallassignexpr(
						pexprnode2,
						pqidnode3,
						pexprsnode9,
						tassignnode11,
						pexprnode12
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction222
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2: nullable AImplicitSelfExpr = new AImplicitSelfExpr.init_aimplicitselfexpr
					var tidnode5 = nodearraylist1
					assert tidnode5 isa nullable TId
					var pqidnode3: nullable AQid = new AQid.init_aqid(
						null,
						tidnode5
					)
					var pexprsnode6 = nodearraylist2
					assert pexprsnode6 isa nullable AExprs
					var tassignnode7 = nodearraylist3
					assert tassignnode7 isa nullable TAssign
					var pexprnode8 = nodearraylist4
					assert pexprnode8 isa nullable AExpr
					var pexprnode1: nullable ACallAssignExpr = new ACallAssignExpr.init_acallassignexpr(
						pexprnode2,
						pqidnode3,
						pexprsnode6,
						tassignnode7,
						pexprnode8
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction223
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2: nullable AImplicitSelfExpr = new AImplicitSelfExpr.init_aimplicitselfexpr
					var tidnode5 = nodearraylist1
					assert tidnode5 isa nullable TId
					var pqidnode3: nullable AQid = new AQid.init_aqid(
						null,
						tidnode5
					)
					var listnode7 = new Array[Object]
					var pexprsnode6: nullable AListExprs = new AListExprs.init_alistexprs(
						listnode7
					)
					var tassignnode8 = nodearraylist2
					assert tassignnode8 isa nullable TAssign
					var pexprnode9 = nodearraylist3
					assert pexprnode9 isa nullable AExpr
					var pexprnode1: nullable ACallAssignExpr = new ACallAssignExpr.init_acallassignexpr(
						pexprnode2,
						pqidnode3,
						pexprsnode6,
						tassignnode8,
						pexprnode9
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction224
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2: nullable AImplicitSelfExpr = new AImplicitSelfExpr.init_aimplicitselfexpr
					var listnode5 = new Array[Object]
					var tclassidnode6 = nodearraylist1
					assert tclassidnode6 isa nullable TClassid
					var pqualifiednode4: nullable AQualified = new AQualified.init_aqualified(
						listnode5,
						tclassidnode6
					)
					var tidnode7 = nodearraylist2
					assert tidnode7 isa nullable TId
					var pqidnode3: nullable AQid = new AQid.init_aqid(
						pqualifiednode4,
						tidnode7
					)
					var pexprsnode8 = nodearraylist3
					assert pexprsnode8 isa nullable AExprs
					var tassignnode9 = nodearraylist4
					assert tassignnode9 isa nullable TAssign
					var pexprnode10 = nodearraylist5
					assert pexprnode10 isa nullable AExpr
					var pexprnode1: nullable ACallAssignExpr = new ACallAssignExpr.init_acallassignexpr(
						pexprnode2,
						pqidnode3,
						pexprsnode8,
						tassignnode9,
						pexprnode10
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction225
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2: nullable AImplicitSelfExpr = new AImplicitSelfExpr.init_aimplicitselfexpr
					var listnode5 = new Array[Object]
					var tclassidnode6 = nodearraylist1
					assert tclassidnode6 isa nullable TClassid
					var pqualifiednode4: nullable AQualified = new AQualified.init_aqualified(
						listnode5,
						tclassidnode6
					)
					var tidnode7 = nodearraylist2
					assert tidnode7 isa nullable TId
					var pqidnode3: nullable AQid = new AQid.init_aqid(
						pqualifiednode4,
						tidnode7
					)
					var listnode9 = new Array[Object]
					var pexprsnode8: nullable AListExprs = new AListExprs.init_alistexprs(
						listnode9
					)
					var tassignnode10 = nodearraylist3
					assert tassignnode10 isa nullable TAssign
					var pexprnode11 = nodearraylist4
					assert pexprnode11 isa nullable AExpr
					var pexprnode1: nullable ACallAssignExpr = new ACallAssignExpr.init_acallassignexpr(
						pexprnode2,
						pqidnode3,
						pexprsnode8,
						tassignnode10,
						pexprnode11
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction226
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2: nullable AImplicitSelfExpr = new AImplicitSelfExpr.init_aimplicitselfexpr
					var listnode6 = new Array[Object]
					var listnode5 = nodearraylist1
					assert listnode5 isa Array[Object]
					listnode6 = concat(listnode6, listnode5)
					var tclassidnode7 = nodearraylist2
					assert tclassidnode7 isa nullable TClassid
					var pqualifiednode4: nullable AQualified = new AQualified.init_aqualified(
						listnode6,
						tclassidnode7
					)
					var tidnode8 = nodearraylist3
					assert tidnode8 isa nullable TId
					var pqidnode3: nullable AQid = new AQid.init_aqid(
						pqualifiednode4,
						tidnode8
					)
					var pexprsnode9 = nodearraylist4
					assert pexprsnode9 isa nullable AExprs
					var tassignnode10 = nodearraylist5
					assert tassignnode10 isa nullable TAssign
					var pexprnode11 = nodearraylist6
					assert pexprnode11 isa nullable AExpr
					var pexprnode1: nullable ACallAssignExpr = new ACallAssignExpr.init_acallassignexpr(
						pexprnode2,
						pqidnode3,
						pexprsnode9,
						tassignnode10,
						pexprnode11
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction227
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2: nullable AImplicitSelfExpr = new AImplicitSelfExpr.init_aimplicitselfexpr
					var listnode6 = new Array[Object]
					var listnode5 = nodearraylist1
					assert listnode5 isa Array[Object]
					listnode6 = concat(listnode6, listnode5)
					var tclassidnode7 = nodearraylist2
					assert tclassidnode7 isa nullable TClassid
					var pqualifiednode4: nullable AQualified = new AQualified.init_aqualified(
						listnode6,
						tclassidnode7
					)
					var tidnode8 = nodearraylist3
					assert tidnode8 isa nullable TId
					var pqidnode3: nullable AQid = new AQid.init_aqid(
						pqualifiednode4,
						tidnode8
					)
					var listnode10 = new Array[Object]
					var pexprsnode9: nullable AListExprs = new AListExprs.init_alistexprs(
						listnode10
					)
					var tassignnode11 = nodearraylist4
					assert tassignnode11 isa nullable TAssign
					var pexprnode12 = nodearraylist5
					assert pexprnode12 isa nullable AExpr
					var pexprnode1: nullable ACallAssignExpr = new ACallAssignExpr.init_acallassignexpr(
						pexprnode2,
						pqidnode3,
						pexprsnode9,
						tassignnode11,
						pexprnode12
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction228
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2: nullable AImplicitSelfExpr = new AImplicitSelfExpr.init_aimplicitselfexpr
					var listnode6 = new Array[Object]
					var listnode5 = nodearraylist1
					assert listnode5 isa Array[Object]
					listnode6 = concat(listnode6, listnode5)
					var pqualifiednode4: nullable AQualified = new AQualified.init_aqualified(
						listnode6,
						null
					)
					var tidnode8 = nodearraylist2
					assert tidnode8 isa nullable TId
					var pqidnode3: nullable AQid = new AQid.init_aqid(
						pqualifiednode4,
						tidnode8
					)
					var pexprsnode9 = nodearraylist3
					assert pexprsnode9 isa nullable AExprs
					var tassignnode10 = nodearraylist4
					assert tassignnode10 isa nullable TAssign
					var pexprnode11 = nodearraylist5
					assert pexprnode11 isa nullable AExpr
					var pexprnode1: nullable ACallAssignExpr = new ACallAssignExpr.init_acallassignexpr(
						pexprnode2,
						pqidnode3,
						pexprsnode9,
						tassignnode10,
						pexprnode11
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction229
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2: nullable AImplicitSelfExpr = new AImplicitSelfExpr.init_aimplicitselfexpr
					var listnode6 = new Array[Object]
					var listnode5 = nodearraylist1
					assert listnode5 isa Array[Object]
					listnode6 = concat(listnode6, listnode5)
					var pqualifiednode4: nullable AQualified = new AQualified.init_aqualified(
						listnode6,
						null
					)
					var tidnode8 = nodearraylist2
					assert tidnode8 isa nullable TId
					var pqidnode3: nullable AQid = new AQid.init_aqid(
						pqualifiednode4,
						tidnode8
					)
					var listnode10 = new Array[Object]
					var pexprsnode9: nullable AListExprs = new AListExprs.init_alistexprs(
						listnode10
					)
					var tassignnode11 = nodearraylist3
					assert tassignnode11 isa nullable TAssign
					var pexprnode12 = nodearraylist4
					assert pexprnode12 isa nullable AExpr
					var pexprnode1: nullable ACallAssignExpr = new ACallAssignExpr.init_acallassignexpr(
						pexprnode2,
						pqidnode3,
						pexprsnode9,
						tassignnode11,
						pexprnode12
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction230
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var pexprsnode3 = nodearraylist2
					assert pexprsnode3 isa nullable AExprs
					var tassignnode4 = nodearraylist3
					assert tassignnode4 isa nullable TAssign
					var pexprnode5 = nodearraylist4
					assert pexprnode5 isa nullable AExpr
					var pexprnode1: nullable ABraAssignExpr = new ABraAssignExpr.init_abraassignexpr(
						pexprnode2,
						pexprsnode3,
						tassignnode4,
						pexprnode5
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction231
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tattridnode3 = nodearraylist5
					assert tattridnode3 isa nullable TAttrid
					var passignopnode4 = nodearraylist6
					assert passignopnode4 isa nullable AAssignOp
					var pexprnode5 = nodearraylist7
					assert pexprnode5 isa nullable AExpr
					var pexprnode1: nullable AAttrReassignExpr = new AAttrReassignExpr.init_aattrreassignexpr(
						pexprnode2,
						tattridnode3,
						passignopnode4,
						pexprnode5
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction232
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2: nullable AImplicitSelfExpr = new AImplicitSelfExpr.init_aimplicitselfexpr
					var tattridnode3 = nodearraylist2
					assert tattridnode3 isa nullable TAttrid
					var passignopnode4 = nodearraylist3
					assert passignopnode4 isa nullable AAssignOp
					var pexprnode5 = nodearraylist4
					assert pexprnode5 isa nullable AExpr
					var pexprnode1: nullable AAttrReassignExpr = new AAttrReassignExpr.init_aattrreassignexpr(
						pexprnode2,
						tattridnode3,
						passignopnode4,
						pexprnode5
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction233
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tidnode5 = nodearraylist4
					assert tidnode5 isa nullable TId
					var pqidnode3: nullable AQid = new AQid.init_aqid(
						null,
						tidnode5
					)
					var pexprsnode6 = nodearraylist5
					assert pexprsnode6 isa nullable AExprs
					var passignopnode7 = nodearraylist6
					assert passignopnode7 isa nullable AAssignOp
					var pexprnode8 = nodearraylist7
					assert pexprnode8 isa nullable AExpr
					var pexprnode1: nullable ACallReassignExpr = new ACallReassignExpr.init_acallreassignexpr(
						pexprnode2,
						pqidnode3,
						pexprsnode6,
						passignopnode7,
						pexprnode8
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction234
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tidnode5 = nodearraylist4
					assert tidnode5 isa nullable TId
					var pqidnode3: nullable AQid = new AQid.init_aqid(
						null,
						tidnode5
					)
					var listnode7 = new Array[Object]
					var pexprsnode6: nullable AListExprs = new AListExprs.init_alistexprs(
						listnode7
					)
					var passignopnode8 = nodearraylist5
					assert passignopnode8 isa nullable AAssignOp
					var pexprnode9 = nodearraylist6
					assert pexprnode9 isa nullable AExpr
					var pexprnode1: nullable ACallReassignExpr = new ACallReassignExpr.init_acallreassignexpr(
						pexprnode2,
						pqidnode3,
						pexprsnode6,
						passignopnode8,
						pexprnode9
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction235
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var listnode5 = new Array[Object]
					var tclassidnode6 = nodearraylist4
					assert tclassidnode6 isa nullable TClassid
					var pqualifiednode4: nullable AQualified = new AQualified.init_aqualified(
						listnode5,
						tclassidnode6
					)
					var tidnode7 = nodearraylist5
					assert tidnode7 isa nullable TId
					var pqidnode3: nullable AQid = new AQid.init_aqid(
						pqualifiednode4,
						tidnode7
					)
					var pexprsnode8 = nodearraylist6
					assert pexprsnode8 isa nullable AExprs
					var passignopnode9 = nodearraylist7
					assert passignopnode9 isa nullable AAssignOp
					var pexprnode10 = nodearraylist8
					assert pexprnode10 isa nullable AExpr
					var pexprnode1: nullable ACallReassignExpr = new ACallReassignExpr.init_acallreassignexpr(
						pexprnode2,
						pqidnode3,
						pexprsnode8,
						passignopnode9,
						pexprnode10
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction236
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var listnode5 = new Array[Object]
					var tclassidnode6 = nodearraylist4
					assert tclassidnode6 isa nullable TClassid
					var pqualifiednode4: nullable AQualified = new AQualified.init_aqualified(
						listnode5,
						tclassidnode6
					)
					var tidnode7 = nodearraylist5
					assert tidnode7 isa nullable TId
					var pqidnode3: nullable AQid = new AQid.init_aqid(
						pqualifiednode4,
						tidnode7
					)
					var listnode9 = new Array[Object]
					var pexprsnode8: nullable AListExprs = new AListExprs.init_alistexprs(
						listnode9
					)
					var passignopnode10 = nodearraylist6
					assert passignopnode10 isa nullable AAssignOp
					var pexprnode11 = nodearraylist7
					assert pexprnode11 isa nullable AExpr
					var pexprnode1: nullable ACallReassignExpr = new ACallReassignExpr.init_acallreassignexpr(
						pexprnode2,
						pqidnode3,
						pexprsnode8,
						passignopnode10,
						pexprnode11
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction237
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var listnode6 = new Array[Object]
					var listnode5 = nodearraylist4
					assert listnode5 isa Array[Object]
					listnode6 = concat(listnode6, listnode5)
					var tclassidnode7 = nodearraylist5
					assert tclassidnode7 isa nullable TClassid
					var pqualifiednode4: nullable AQualified = new AQualified.init_aqualified(
						listnode6,
						tclassidnode7
					)
					var tidnode8 = nodearraylist6
					assert tidnode8 isa nullable TId
					var pqidnode3: nullable AQid = new AQid.init_aqid(
						pqualifiednode4,
						tidnode8
					)
					var pexprsnode9 = nodearraylist7
					assert pexprsnode9 isa nullable AExprs
					var passignopnode10 = nodearraylist8
					assert passignopnode10 isa nullable AAssignOp
					var pexprnode11 = nodearraylist9
					assert pexprnode11 isa nullable AExpr
					var pexprnode1: nullable ACallReassignExpr = new ACallReassignExpr.init_acallreassignexpr(
						pexprnode2,
						pqidnode3,
						pexprsnode9,
						passignopnode10,
						pexprnode11
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction238
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var listnode6 = new Array[Object]
					var listnode5 = nodearraylist4
					assert listnode5 isa Array[Object]
					listnode6 = concat(listnode6, listnode5)
					var tclassidnode7 = nodearraylist5
					assert tclassidnode7 isa nullable TClassid
					var pqualifiednode4: nullable AQualified = new AQualified.init_aqualified(
						listnode6,
						tclassidnode7
					)
					var tidnode8 = nodearraylist6
					assert tidnode8 isa nullable TId
					var pqidnode3: nullable AQid = new AQid.init_aqid(
						pqualifiednode4,
						tidnode8
					)
					var listnode10 = new Array[Object]
					var pexprsnode9: nullable AListExprs = new AListExprs.init_alistexprs(
						listnode10
					)
					var passignopnode11 = nodearraylist7
					assert passignopnode11 isa nullable AAssignOp
					var pexprnode12 = nodearraylist8
					assert pexprnode12 isa nullable AExpr
					var pexprnode1: nullable ACallReassignExpr = new ACallReassignExpr.init_acallreassignexpr(
						pexprnode2,
						pqidnode3,
						pexprsnode9,
						passignopnode11,
						pexprnode12
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction239
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var listnode6 = new Array[Object]
					var listnode5 = nodearraylist4
					assert listnode5 isa Array[Object]
					listnode6 = concat(listnode6, listnode5)
					var pqualifiednode4: nullable AQualified = new AQualified.init_aqualified(
						listnode6,
						null
					)
					var tidnode8 = nodearraylist5
					assert tidnode8 isa nullable TId
					var pqidnode3: nullable AQid = new AQid.init_aqid(
						pqualifiednode4,
						tidnode8
					)
					var pexprsnode9 = nodearraylist6
					assert pexprsnode9 isa nullable AExprs
					var passignopnode10 = nodearraylist7
					assert passignopnode10 isa nullable AAssignOp
					var pexprnode11 = nodearraylist8
					assert pexprnode11 isa nullable AExpr
					var pexprnode1: nullable ACallReassignExpr = new ACallReassignExpr.init_acallreassignexpr(
						pexprnode2,
						pqidnode3,
						pexprsnode9,
						passignopnode10,
						pexprnode11
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction240
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var listnode6 = new Array[Object]
					var listnode5 = nodearraylist4
					assert listnode5 isa Array[Object]
					listnode6 = concat(listnode6, listnode5)
					var pqualifiednode4: nullable AQualified = new AQualified.init_aqualified(
						listnode6,
						null
					)
					var tidnode8 = nodearraylist5
					assert tidnode8 isa nullable TId
					var pqidnode3: nullable AQid = new AQid.init_aqid(
						pqualifiednode4,
						tidnode8
					)
					var listnode10 = new Array[Object]
					var pexprsnode9: nullable AListExprs = new AListExprs.init_alistexprs(
						listnode10
					)
					var passignopnode11 = nodearraylist6
					assert passignopnode11 isa nullable AAssignOp
					var pexprnode12 = nodearraylist7
					assert pexprnode12 isa nullable AExpr
					var pexprnode1: nullable ACallReassignExpr = new ACallReassignExpr.init_acallreassignexpr(
						pexprnode2,
						pqidnode3,
						pexprsnode9,
						passignopnode11,
						pexprnode12
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction241
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2: nullable AImplicitSelfExpr = new AImplicitSelfExpr.init_aimplicitselfexpr
					var tidnode5 = nodearraylist1
					assert tidnode5 isa nullable TId
					var pqidnode3: nullable AQid = new AQid.init_aqid(
						null,
						tidnode5
					)
					var pexprsnode6 = nodearraylist2
					assert pexprsnode6 isa nullable AExprs
					var passignopnode7 = nodearraylist3
					assert passignopnode7 isa nullable AAssignOp
					var pexprnode8 = nodearraylist4
					assert pexprnode8 isa nullable AExpr
					var pexprnode1: nullable ACallReassignExpr = new ACallReassignExpr.init_acallreassignexpr(
						pexprnode2,
						pqidnode3,
						pexprsnode6,
						passignopnode7,
						pexprnode8
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction242
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2: nullable AImplicitSelfExpr = new AImplicitSelfExpr.init_aimplicitselfexpr
					var tidnode5 = nodearraylist1
					assert tidnode5 isa nullable TId
					var pqidnode3: nullable AQid = new AQid.init_aqid(
						null,
						tidnode5
					)
					var listnode7 = new Array[Object]
					var pexprsnode6: nullable AListExprs = new AListExprs.init_alistexprs(
						listnode7
					)
					var passignopnode8 = nodearraylist2
					assert passignopnode8 isa nullable AAssignOp
					var pexprnode9 = nodearraylist3
					assert pexprnode9 isa nullable AExpr
					var pexprnode1: nullable ACallReassignExpr = new ACallReassignExpr.init_acallreassignexpr(
						pexprnode2,
						pqidnode3,
						pexprsnode6,
						passignopnode8,
						pexprnode9
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction243
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2: nullable AImplicitSelfExpr = new AImplicitSelfExpr.init_aimplicitselfexpr
					var listnode5 = new Array[Object]
					var tclassidnode6 = nodearraylist1
					assert tclassidnode6 isa nullable TClassid
					var pqualifiednode4: nullable AQualified = new AQualified.init_aqualified(
						listnode5,
						tclassidnode6
					)
					var tidnode7 = nodearraylist2
					assert tidnode7 isa nullable TId
					var pqidnode3: nullable AQid = new AQid.init_aqid(
						pqualifiednode4,
						tidnode7
					)
					var pexprsnode8 = nodearraylist3
					assert pexprsnode8 isa nullable AExprs
					var passignopnode9 = nodearraylist4
					assert passignopnode9 isa nullable AAssignOp
					var pexprnode10 = nodearraylist5
					assert pexprnode10 isa nullable AExpr
					var pexprnode1: nullable ACallReassignExpr = new ACallReassignExpr.init_acallreassignexpr(
						pexprnode2,
						pqidnode3,
						pexprsnode8,
						passignopnode9,
						pexprnode10
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction244
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2: nullable AImplicitSelfExpr = new AImplicitSelfExpr.init_aimplicitselfexpr
					var listnode5 = new Array[Object]
					var tclassidnode6 = nodearraylist1
					assert tclassidnode6 isa nullable TClassid
					var pqualifiednode4: nullable AQualified = new AQualified.init_aqualified(
						listnode5,
						tclassidnode6
					)
					var tidnode7 = nodearraylist2
					assert tidnode7 isa nullable TId
					var pqidnode3: nullable AQid = new AQid.init_aqid(
						pqualifiednode4,
						tidnode7
					)
					var listnode9 = new Array[Object]
					var pexprsnode8: nullable AListExprs = new AListExprs.init_alistexprs(
						listnode9
					)
					var passignopnode10 = nodearraylist3
					assert passignopnode10 isa nullable AAssignOp
					var pexprnode11 = nodearraylist4
					assert pexprnode11 isa nullable AExpr
					var pexprnode1: nullable ACallReassignExpr = new ACallReassignExpr.init_acallreassignexpr(
						pexprnode2,
						pqidnode3,
						pexprsnode8,
						passignopnode10,
						pexprnode11
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction245
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2: nullable AImplicitSelfExpr = new AImplicitSelfExpr.init_aimplicitselfexpr
					var listnode6 = new Array[Object]
					var listnode5 = nodearraylist1
					assert listnode5 isa Array[Object]
					listnode6 = concat(listnode6, listnode5)
					var tclassidnode7 = nodearraylist2
					assert tclassidnode7 isa nullable TClassid
					var pqualifiednode4: nullable AQualified = new AQualified.init_aqualified(
						listnode6,
						tclassidnode7
					)
					var tidnode8 = nodearraylist3
					assert tidnode8 isa nullable TId
					var pqidnode3: nullable AQid = new AQid.init_aqid(
						pqualifiednode4,
						tidnode8
					)
					var pexprsnode9 = nodearraylist4
					assert pexprsnode9 isa nullable AExprs
					var passignopnode10 = nodearraylist5
					assert passignopnode10 isa nullable AAssignOp
					var pexprnode11 = nodearraylist6
					assert pexprnode11 isa nullable AExpr
					var pexprnode1: nullable ACallReassignExpr = new ACallReassignExpr.init_acallreassignexpr(
						pexprnode2,
						pqidnode3,
						pexprsnode9,
						passignopnode10,
						pexprnode11
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction246
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2: nullable AImplicitSelfExpr = new AImplicitSelfExpr.init_aimplicitselfexpr
					var listnode6 = new Array[Object]
					var listnode5 = nodearraylist1
					assert listnode5 isa Array[Object]
					listnode6 = concat(listnode6, listnode5)
					var tclassidnode7 = nodearraylist2
					assert tclassidnode7 isa nullable TClassid
					var pqualifiednode4: nullable AQualified = new AQualified.init_aqualified(
						listnode6,
						tclassidnode7
					)
					var tidnode8 = nodearraylist3
					assert tidnode8 isa nullable TId
					var pqidnode3: nullable AQid = new AQid.init_aqid(
						pqualifiednode4,
						tidnode8
					)
					var listnode10 = new Array[Object]
					var pexprsnode9: nullable AListExprs = new AListExprs.init_alistexprs(
						listnode10
					)
					var passignopnode11 = nodearraylist4
					assert passignopnode11 isa nullable AAssignOp
					var pexprnode12 = nodearraylist5
					assert pexprnode12 isa nullable AExpr
					var pexprnode1: nullable ACallReassignExpr = new ACallReassignExpr.init_acallreassignexpr(
						pexprnode2,
						pqidnode3,
						pexprsnode9,
						passignopnode11,
						pexprnode12
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction247
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2: nullable AImplicitSelfExpr = new AImplicitSelfExpr.init_aimplicitselfexpr
					var listnode6 = new Array[Object]
					var listnode5 = nodearraylist1
					assert listnode5 isa Array[Object]
					listnode6 = concat(listnode6, listnode5)
					var pqualifiednode4: nullable AQualified = new AQualified.init_aqualified(
						listnode6,
						null
					)
					var tidnode8 = nodearraylist2
					assert tidnode8 isa nullable TId
					var pqidnode3: nullable AQid = new AQid.init_aqid(
						pqualifiednode4,
						tidnode8
					)
					var pexprsnode9 = nodearraylist3
					assert pexprsnode9 isa nullable AExprs
					var passignopnode10 = nodearraylist4
					assert passignopnode10 isa nullable AAssignOp
					var pexprnode11 = nodearraylist5
					assert pexprnode11 isa nullable AExpr
					var pexprnode1: nullable ACallReassignExpr = new ACallReassignExpr.init_acallreassignexpr(
						pexprnode2,
						pqidnode3,
						pexprsnode9,
						passignopnode10,
						pexprnode11
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction248
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2: nullable AImplicitSelfExpr = new AImplicitSelfExpr.init_aimplicitselfexpr
					var listnode6 = new Array[Object]
					var listnode5 = nodearraylist1
					assert listnode5 isa Array[Object]
					listnode6 = concat(listnode6, listnode5)
					var pqualifiednode4: nullable AQualified = new AQualified.init_aqualified(
						listnode6,
						null
					)
					var tidnode8 = nodearraylist2
					assert tidnode8 isa nullable TId
					var pqidnode3: nullable AQid = new AQid.init_aqid(
						pqualifiednode4,
						tidnode8
					)
					var listnode10 = new Array[Object]
					var pexprsnode9: nullable AListExprs = new AListExprs.init_alistexprs(
						listnode10
					)
					var passignopnode11 = nodearraylist3
					assert passignopnode11 isa nullable AAssignOp
					var pexprnode12 = nodearraylist4
					assert pexprnode12 isa nullable AExpr
					var pexprnode1: nullable ACallReassignExpr = new ACallReassignExpr.init_acallreassignexpr(
						pexprnode2,
						pqidnode3,
						pexprsnode9,
						passignopnode11,
						pexprnode12
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction249
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var pexprsnode3 = nodearraylist2
					assert pexprsnode3 isa nullable AExprs
					var passignopnode4 = nodearraylist3
					assert passignopnode4 isa nullable AAssignOp
					var pexprnode5 = nodearraylist4
					assert pexprnode5 isa nullable AExpr
					var pexprnode1: nullable ABraReassignExpr = new ABraReassignExpr.init_abrareassignexpr(
						pexprnode2,
						pexprsnode3,
						passignopnode4,
						pexprnode5
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction250
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tpluseqnode2 = nodearraylist1
					assert tpluseqnode2 isa nullable TPluseq
					var passignopnode1: nullable APlusAssignOp = new APlusAssignOp.init_aplusassignop(
						tpluseqnode2
					)
					node_list = passignopnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction251
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tminuseqnode2 = nodearraylist1
					assert tminuseqnode2 isa nullable TMinuseq
					var passignopnode1: nullable AMinusAssignOp = new AMinusAssignOp.init_aminusassignop(
						tminuseqnode2
					)
					node_list = passignopnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction252
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tstareqnode2 = nodearraylist1
					assert tstareqnode2 isa nullable TStareq
					var passignopnode1: nullable AStarAssignOp = new AStarAssignOp.init_astarassignop(
						tstareqnode2
					)
					node_list = passignopnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction253
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tslasheqnode2 = nodearraylist1
					assert tslasheqnode2 isa nullable TSlasheq
					var passignopnode1: nullable ASlashAssignOp = new ASlashAssignOp.init_aslashassignop(
						tslasheqnode2
					)
					node_list = passignopnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction254
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tpercenteqnode2 = nodearraylist1
					assert tpercenteqnode2 isa nullable TPercenteq
					var passignopnode1: nullable APercentAssignOp = new APercentAssignOp.init_apercentassignop(
						tpercenteqnode2
					)
					node_list = passignopnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction255
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tstarstareqnode2 = nodearraylist1
					assert tstarstareqnode2 isa nullable TStarstareq
					var passignopnode1: nullable AStarstarAssignOp = new AStarstarAssignOp.init_astarstarassignop(
						tstarstareqnode2
					)
					node_list = passignopnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction256
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tpipeeqnode2 = nodearraylist1
					assert tpipeeqnode2 isa nullable TPipeeq
					var passignopnode1: nullable APipeAssignOp = new APipeAssignOp.init_apipeassignop(
						tpipeeqnode2
					)
					node_list = passignopnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction257
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tcareteqnode2 = nodearraylist1
					assert tcareteqnode2 isa nullable TCareteq
					var passignopnode1: nullable ACaretAssignOp = new ACaretAssignOp.init_acaretassignop(
						tcareteqnode2
					)
					node_list = passignopnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction258
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tampeqnode2 = nodearraylist1
					assert tampeqnode2 isa nullable TAmpeq
					var passignopnode1: nullable AAmpAssignOp = new AAmpAssignOp.init_aampassignop(
						tampeqnode2
					)
					node_list = passignopnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction259
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tlleqnode2 = nodearraylist1
					assert tlleqnode2 isa nullable TLleq
					var passignopnode1: nullable ALlAssignOp = new ALlAssignOp.init_allassignop(
						tlleqnode2
					)
					node_list = passignopnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction260
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tggeqnode2 = nodearraylist1
					assert tggeqnode2 isa nullable TGgeq
					var passignopnode1: nullable AGgAssignOp = new AGgAssignOp.init_aggassignop(
						tggeqnode2
					)
					node_list = passignopnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction261
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwdonode2 = nodearraylist1
					assert tkwdonode2 isa nullable TKwdo
					var pexprnode3 = nodearraylist2
					assert pexprnode3 isa nullable AExpr
					var plabelnode6 = nodearraylist3
					assert plabelnode6 isa nullable ALabel
					var pexprnode1: nullable ADoExpr = new ADoExpr.init_adoexpr(
						tkwdonode2,
						pexprnode3,
						null,
						null,
						plabelnode6
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction262
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwdonode2 = nodearraylist1
					assert tkwdonode2 isa nullable TKwdo
					var pexprnode3 = nodearraylist2
					assert pexprnode3 isa nullable AExpr
					var pexprnode1: nullable ADoExpr = new ADoExpr.init_adoexpr(
						tkwdonode2,
						pexprnode3,
						null,
						null,
						null
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction263
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwdonode2 = nodearraylist1
					assert tkwdonode2 isa nullable TKwdo
					var pexprnode3 = nodearraylist3
					assert pexprnode3 isa nullable AExpr
					var tkwcatchnode4 = nodearraylist4
					assert tkwcatchnode4 isa nullable TKwcatch
					var pexprnode5 = nodearraylist5
					assert pexprnode5 isa nullable AExpr
					var pexprnode1: nullable ADoExpr = new ADoExpr.init_adoexpr(
						tkwdonode2,
						pexprnode3,
						tkwcatchnode4,
						pexprnode5,
						null
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction264
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwifnode2 = nodearraylist1
					assert tkwifnode2 isa nullable TKwif
					var pexprnode3 = nodearraylist3
					assert pexprnode3 isa nullable AExpr
					var tkwthennode4 = nodearraylist5
					assert tkwthennode4 isa nullable TKwthen
					var pexprnode5 = nodearraylist6
					assert pexprnode5 isa nullable AExpr
					var tkwelsenode6 = nodearraylist7
					assert tkwelsenode6 isa nullable TKwelse
					var pexprnode7 = nodearraylist8
					assert pexprnode7 isa nullable AExpr
					var pexprnode1: nullable AIfExpr = new AIfExpr.init_aifexpr(
						tkwifnode2,
						pexprnode3,
						tkwthennode4,
						pexprnode5,
						tkwelsenode6,
						pexprnode7
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction265
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwifnode2 = nodearraylist1
					assert tkwifnode2 isa nullable TKwif
					var pexprnode3 = nodearraylist3
					assert pexprnode3 isa nullable AExpr
					var tkwthennode4 = nodearraylist5
					assert tkwthennode4 isa nullable TKwthen
					var pexprnode5 = nodearraylist6
					assert pexprnode5 isa nullable AExpr
					var pexprnode1: nullable AIfExpr = new AIfExpr.init_aifexpr(
						tkwifnode2,
						pexprnode3,
						tkwthennode4,
						pexprnode5,
						null,
						null
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction266
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwifnode2 = nodearraylist1
					assert tkwifnode2 isa nullable TKwif
					var pexprnode3 = nodearraylist3
					assert pexprnode3 isa nullable AExpr
					var tkwthennode4 = nodearraylist5
					assert tkwthennode4 isa nullable TKwthen
					var pexprnode5 = nodearraylist7
					assert pexprnode5 isa nullable AExpr
					var tkwelsenode6 = nodearraylist8
					assert tkwelsenode6 isa nullable TKwelse
					var pexprnode7 = nodearraylist9
					assert pexprnode7 isa nullable AExpr
					var pexprnode1: nullable AIfExpr = new AIfExpr.init_aifexpr(
						tkwifnode2,
						pexprnode3,
						tkwthennode4,
						pexprnode5,
						tkwelsenode6,
						pexprnode7
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction267
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwifnode2 = nodearraylist1
					assert tkwifnode2 isa nullable TKwif
					var pexprnode3 = nodearraylist3
					assert pexprnode3 isa nullable AExpr
					var tkwthennode4 = nodearraylist5
					assert tkwthennode4 isa nullable TKwthen
					var tkwelsenode6 = nodearraylist6
					assert tkwelsenode6 isa nullable TKwelse
					var pexprnode7 = nodearraylist7
					assert pexprnode7 isa nullable AExpr
					var pexprnode1: nullable AIfExpr = new AIfExpr.init_aifexpr(
						tkwifnode2,
						pexprnode3,
						tkwthennode4,
						null,
						tkwelsenode6,
						pexprnode7
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction268
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwifnode2 = nodearraylist1
					assert tkwifnode2 isa nullable TKwif
					var pexprnode3 = nodearraylist3
					assert pexprnode3 isa nullable AExpr
					var tkwthennode4 = nodearraylist5
					assert tkwthennode4 isa nullable TKwthen
					var tkwelsenode6 = nodearraylist7
					assert tkwelsenode6 isa nullable TKwelse
					var pexprnode7 = nodearraylist8
					assert pexprnode7 isa nullable AExpr
					var pexprnode1: nullable AIfExpr = new AIfExpr.init_aifexpr(
						tkwifnode2,
						pexprnode3,
						tkwthennode4,
						null,
						tkwelsenode6,
						pexprnode7
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction269
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwifnode2 = nodearraylist1
					assert tkwifnode2 isa nullable TKwif
					var pexprnode3 = nodearraylist3
					assert pexprnode3 isa nullable AExpr
					var tkwthennode4 = nodearraylist5
					assert tkwthennode4 isa nullable TKwthen
					var pexprnode5 = nodearraylist7
					assert pexprnode5 isa nullable AExpr
					var pexprnode7 = nodearraylist8
					assert pexprnode7 isa nullable AExpr
					var pexprnode1: nullable AIfExpr = new AIfExpr.init_aifexpr(
						tkwifnode2,
						pexprnode3,
						tkwthennode4,
						pexprnode5,
						null,
						pexprnode7
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction270
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwifnode2 = nodearraylist1
					assert tkwifnode2 isa nullable TKwif
					var pexprnode3 = nodearraylist3
					assert pexprnode3 isa nullable AExpr
					var tkwthennode4 = nodearraylist5
					assert tkwthennode4 isa nullable TKwthen
					var pexprnode7 = nodearraylist6
					assert pexprnode7 isa nullable AExpr
					var pexprnode1: nullable AIfExpr = new AIfExpr.init_aifexpr(
						tkwifnode2,
						pexprnode3,
						tkwthennode4,
						null,
						null,
						pexprnode7
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction271
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwifnode2 = nodearraylist1
					assert tkwifnode2 isa nullable TKwif
					var pexprnode3 = nodearraylist3
					assert pexprnode3 isa nullable AExpr
					var tkwthennode4 = nodearraylist5
					assert tkwthennode4 isa nullable TKwthen
					var pexprnode7 = nodearraylist7
					assert pexprnode7 isa nullable AExpr
					var pexprnode1: nullable AIfExpr = new AIfExpr.init_aifexpr(
						tkwifnode2,
						pexprnode3,
						tkwthennode4,
						null,
						null,
						pexprnode7
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction273
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwloopnode2 = nodearraylist1
					assert tkwloopnode2 isa nullable TKwloop
					var pexprnode3 = nodearraylist2
					assert pexprnode3 isa nullable AExpr
					var plabelnode4 = nodearraylist3
					assert plabelnode4 isa nullable ALabel
					var pexprnode1: nullable ALoopExpr = new ALoopExpr.init_aloopexpr(
						tkwloopnode2,
						pexprnode3,
						plabelnode4
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction274
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwloopnode2 = nodearraylist1
					assert tkwloopnode2 isa nullable TKwloop
					var pexprnode3 = nodearraylist2
					assert pexprnode3 isa nullable AExpr
					var pexprnode1: nullable ALoopExpr = new ALoopExpr.init_aloopexpr(
						tkwloopnode2,
						pexprnode3,
						null
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction275
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwwhilenode2 = nodearraylist1
					assert tkwwhilenode2 isa nullable TKwwhile
					var pexprnode3 = nodearraylist3
					assert pexprnode3 isa nullable AExpr
					var tkwdonode4 = nodearraylist5
					assert tkwdonode4 isa nullable TKwdo
					var pexprnode5 = nodearraylist6
					assert pexprnode5 isa nullable AExpr
					var plabelnode6 = nodearraylist7
					assert plabelnode6 isa nullable ALabel
					var pexprnode1: nullable AWhileExpr = new AWhileExpr.init_awhileexpr(
						tkwwhilenode2,
						pexprnode3,
						tkwdonode4,
						pexprnode5,
						plabelnode6
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction276
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwwhilenode2 = nodearraylist1
					assert tkwwhilenode2 isa nullable TKwwhile
					var pexprnode3 = nodearraylist3
					assert pexprnode3 isa nullable AExpr
					var tkwdonode4 = nodearraylist5
					assert tkwdonode4 isa nullable TKwdo
					var pexprnode5 = nodearraylist6
					assert pexprnode5 isa nullable AExpr
					var pexprnode1: nullable AWhileExpr = new AWhileExpr.init_awhileexpr(
						tkwwhilenode2,
						pexprnode3,
						tkwdonode4,
						pexprnode5,
						null
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction277
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var tkwfornode2 = nodearraylist1
					assert tkwfornode2 isa nullable TKwfor
					var listnode3 = nodearraylist3
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var tkwdonode5 = nodearraylist5
					assert tkwdonode5 isa nullable TKwdo
					var pexprnode6 = nodearraylist6
					assert pexprnode6 isa nullable AExpr
					var plabelnode7 = nodearraylist7
					assert plabelnode7 isa nullable ALabel
					var pexprnode1: nullable AForExpr = new AForExpr.init_aforexpr(
						tkwfornode2,
						listnode4,
						tkwdonode5,
						pexprnode6,
						plabelnode7
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction278
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var tkwfornode2 = nodearraylist1
					assert tkwfornode2 isa nullable TKwfor
					var listnode3 = nodearraylist3
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var tkwdonode5 = nodearraylist5
					assert tkwdonode5 isa nullable TKwdo
					var pexprnode6 = nodearraylist6
					assert pexprnode6 isa nullable AExpr
					var pexprnode1: nullable AForExpr = new AForExpr.init_aforexpr(
						tkwfornode2,
						listnode4,
						tkwdonode5,
						pexprnode6,
						null
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction279
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var listnode2 = new Array[Object]
					var pforgroupnode1 = nodearraylist1
					if pforgroupnode1 != null then
						listnode2.add(pforgroupnode1)
					end
					node_list = listnode2
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction280
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode1 = nodearraylist1
					assert listnode1 isa Array[Object]
					var pforgroupnode2 = nodearraylist5
					listnode3 = concat(listnode3, listnode1)
					if pforgroupnode2 != null then
						listnode3.add(pforgroupnode2)
					end
					node_list = listnode3
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction281
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode2 = nodearraylist1
					assert listnode2 isa Array[Object]
					listnode3 = concat(listnode3, listnode2)
					var tkwinnode4 = nodearraylist3
					assert tkwinnode4 isa nullable TKwin
					var pexprnode5 = nodearraylist5
					assert pexprnode5 isa nullable AExpr
					var pforgroupnode1: nullable AForGroup = new AForGroup.init_aforgroup(
						listnode3,
						tkwinnode4,
						pexprnode5
					)
					node_list = pforgroupnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction282
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwwithnode2 = nodearraylist1
					assert tkwwithnode2 isa nullable TKwwith
					var pexprnode3 = nodearraylist3
					assert pexprnode3 isa nullable AExpr
					var tkwdonode4 = nodearraylist5
					assert tkwdonode4 isa nullable TKwdo
					var pexprnode5 = nodearraylist6
					assert pexprnode5 isa nullable AExpr
					var plabelnode6 = nodearraylist7
					assert plabelnode6 isa nullable ALabel
					var pexprnode1: nullable AWithExpr = new AWithExpr.init_awithexpr(
						tkwwithnode2,
						pexprnode3,
						tkwdonode4,
						pexprnode5,
						plabelnode6
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction283
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwwithnode2 = nodearraylist1
					assert tkwwithnode2 isa nullable TKwwith
					var pexprnode3 = nodearraylist3
					assert pexprnode3 isa nullable AExpr
					var tkwdonode4 = nodearraylist5
					assert tkwdonode4 isa nullable TKwdo
					var pexprnode5 = nodearraylist6
					assert pexprnode5 isa nullable AExpr
					var pexprnode1: nullable AWithExpr = new AWithExpr.init_awithexpr(
						tkwwithnode2,
						pexprnode3,
						tkwdonode4,
						pexprnode5,
						null
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction284
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tidnode3 = nodearraylist1
					assert tidnode3 isa nullable TId
					var ptypenode4 = nodearraylist2
					assert ptypenode4 isa nullable AType
					var tassignnode5 = nodearraylist3
					assert tassignnode5 isa nullable TAssign
					var pexprnode6 = nodearraylist5
					assert pexprnode6 isa nullable AExpr
					var pexprnode1: nullable AVardeclExpr = new AVardeclExpr.init_avardeclexpr(
						null,
						tidnode3,
						ptypenode4,
						tassignnode5,
						pexprnode6,
						null
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction285
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tidnode3 = nodearraylist1
					assert tidnode3 isa nullable TId
					var ptypenode4 = nodearraylist3
					assert ptypenode4 isa nullable AType
					var tassignnode5 = nodearraylist4
					assert tassignnode5 isa nullable TAssign
					var pexprnode6 = nodearraylist6
					assert pexprnode6 isa nullable AExpr
					var pannotationsnode7 = nodearraylist2
					assert pannotationsnode7 isa nullable AAnnotations
					var pexprnode1: nullable AVardeclExpr = new AVardeclExpr.init_avardeclexpr(
						null,
						tidnode3,
						ptypenode4,
						tassignnode5,
						pexprnode6,
						pannotationsnode7
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction287
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwassertnode2 = nodearraylist1
					assert tkwassertnode2 isa nullable TKwassert
					var pexprnode4 = nodearraylist2
					assert pexprnode4 isa nullable AExpr
					var tkwelsenode5 = nodearraylist3
					assert tkwelsenode5 isa nullable TKwelse
					var pexprnode6 = nodearraylist4
					assert pexprnode6 isa nullable AExpr
					var pexprnode1: nullable AAssertExpr = new AAssertExpr.init_aassertexpr(
						tkwassertnode2,
						null,
						pexprnode4,
						tkwelsenode5,
						pexprnode6
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction288
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwassertnode2 = nodearraylist1
					assert tkwassertnode2 isa nullable TKwassert
					var tidnode3 = nodearraylist2
					assert tidnode3 isa nullable TId
					var pexprnode4 = nodearraylist3
					assert pexprnode4 isa nullable AExpr
					var tkwelsenode5 = nodearraylist4
					assert tkwelsenode5 isa nullable TKwelse
					var pexprnode6 = nodearraylist5
					assert pexprnode6 isa nullable AExpr
					var pexprnode1: nullable AAssertExpr = new AAssertExpr.init_aassertexpr(
						tkwassertnode2,
						tidnode3,
						pexprnode4,
						tkwelsenode5,
						pexprnode6
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction289
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwassertnode2 = nodearraylist1
					assert tkwassertnode2 isa nullable TKwassert
					var pexprnode4 = nodearraylist2
					assert pexprnode4 isa nullable AExpr
					var pexprnode1: nullable AAssertExpr = new AAssertExpr.init_aassertexpr(
						tkwassertnode2,
						null,
						pexprnode4,
						null,
						null
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction290
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwassertnode2 = nodearraylist1
					assert tkwassertnode2 isa nullable TKwassert
					var tidnode3 = nodearraylist2
					assert tidnode3 isa nullable TId
					var pexprnode4 = nodearraylist3
					assert pexprnode4 isa nullable AExpr
					var pexprnode1: nullable AAssertExpr = new AAssertExpr.init_aassertexpr(
						tkwassertnode2,
						tidnode3,
						pexprnode4,
						null,
						null
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction291
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tidnode1 = nodearraylist1
					node_list = tidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction293
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwifnode2 = nodearraylist1
					assert tkwifnode2 isa nullable TKwif
					var pexprnode3 = nodearraylist3
					assert pexprnode3 isa nullable AExpr
					var tkwthennode4 = nodearraylist5
					assert tkwthennode4 isa nullable TKwthen
					var pexprnode5 = nodearraylist7
					assert pexprnode5 isa nullable AExpr
					var tkwelsenode6 = nodearraylist9
					assert tkwelsenode6 isa nullable TKwelse
					var pexprnode7 = nodearraylist11
					assert pexprnode7 isa nullable AExpr
					var pexprnode1: nullable AIfexprExpr = new AIfexprExpr.init_aifexprexpr(
						tkwifnode2,
						pexprnode3,
						tkwthennode4,
						pexprnode5,
						tkwelsenode6,
						pexprnode7
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction295
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tkwornode3 = nodearraylist2
					assert tkwornode3 isa nullable TKwor
					var pexprnode4 = nodearraylist4
					assert pexprnode4 isa nullable AExpr
					var pexprnode1: nullable AOrExpr = new AOrExpr.init_aorexpr(
						pexprnode2,
						tkwornode3,
						pexprnode4
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction296
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tkwandnode3 = nodearraylist2
					assert tkwandnode3 isa nullable TKwand
					var pexprnode4 = nodearraylist4
					assert pexprnode4 isa nullable AExpr
					var pexprnode1: nullable AAndExpr = new AAndExpr.init_aandexpr(
						pexprnode2,
						tkwandnode3,
						pexprnode4
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction297
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tkwornode3 = nodearraylist2
					assert tkwornode3 isa nullable TKwor
					var tkwelsenode4 = nodearraylist3
					assert tkwelsenode4 isa nullable TKwelse
					var pexprnode5 = nodearraylist5
					assert pexprnode5 isa nullable AExpr
					var pexprnode1: nullable AOrElseExpr = new AOrElseExpr.init_aorelseexpr(
						pexprnode2,
						tkwornode3,
						tkwelsenode4,
						pexprnode5
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction298
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tkwimpliesnode3 = nodearraylist2
					assert tkwimpliesnode3 isa nullable TKwimplies
					var pexprnode4 = nodearraylist4
					assert pexprnode4 isa nullable AExpr
					var pexprnode1: nullable AImpliesExpr = new AImpliesExpr.init_aimpliesexpr(
						pexprnode2,
						tkwimpliesnode3,
						pexprnode4
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction300
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwnotnode2 = nodearraylist1
					assert tkwnotnode2 isa nullable TKwnot
					var pexprnode3 = nodearraylist3
					assert pexprnode3 isa nullable AExpr
					var pexprnode1: nullable ANotExpr = new ANotExpr.init_anotexpr(
						tkwnotnode2,
						pexprnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction302
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var teqnode3 = nodearraylist2
					assert teqnode3 isa nullable TEq
					var pexprnode4 = nodearraylist4
					assert pexprnode4 isa nullable AExpr
					var pexprnode1: nullable AEqExpr = new AEqExpr.init_aeqexpr(
						pexprnode2,
						teqnode3,
						pexprnode4
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction303
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tnenode3 = nodearraylist2
					assert tnenode3 isa nullable TNe
					var pexprnode4 = nodearraylist4
					assert pexprnode4 isa nullable AExpr
					var pexprnode1: nullable ANeExpr = new ANeExpr.init_aneexpr(
						pexprnode2,
						tnenode3,
						pexprnode4
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction304
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tltnode3 = nodearraylist2
					assert tltnode3 isa nullable TLt
					var pexprnode4 = nodearraylist4
					assert pexprnode4 isa nullable AExpr
					var pexprnode1: nullable ALtExpr = new ALtExpr.init_altexpr(
						pexprnode2,
						tltnode3,
						pexprnode4
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction305
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tlenode3 = nodearraylist2
					assert tlenode3 isa nullable TLe
					var pexprnode4 = nodearraylist4
					assert pexprnode4 isa nullable AExpr
					var pexprnode1: nullable ALeExpr = new ALeExpr.init_aleexpr(
						pexprnode2,
						tlenode3,
						pexprnode4
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction306
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tgtnode3 = nodearraylist2
					assert tgtnode3 isa nullable TGt
					var pexprnode4 = nodearraylist4
					assert pexprnode4 isa nullable AExpr
					var pexprnode1: nullable AGtExpr = new AGtExpr.init_agtexpr(
						pexprnode2,
						tgtnode3,
						pexprnode4
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction307
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tgenode3 = nodearraylist2
					assert tgenode3 isa nullable TGe
					var pexprnode4 = nodearraylist4
					assert pexprnode4 isa nullable AExpr
					var pexprnode1: nullable AGeExpr = new AGeExpr.init_ageexpr(
						pexprnode2,
						tgenode3,
						pexprnode4
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction308
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tstarshipnode3 = nodearraylist2
					assert tstarshipnode3 isa nullable TStarship
					var pexprnode4 = nodearraylist4
					assert pexprnode4 isa nullable AExpr
					var pexprnode1: nullable AStarshipExpr = new AStarshipExpr.init_astarshipexpr(
						pexprnode2,
						tstarshipnode3,
						pexprnode4
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction309
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tkwisanode3 = nodearraylist2
					assert tkwisanode3 isa nullable TKwisa
					var ptypenode4 = nodearraylist4
					assert ptypenode4 isa nullable AType
					var pexprnode1: nullable AIsaExpr = new AIsaExpr.init_aisaexpr(
						pexprnode2,
						tkwisanode3,
						ptypenode4
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction311
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tpipenode3 = nodearraylist2
					assert tpipenode3 isa nullable TPipe
					var pexprnode4 = nodearraylist4
					assert pexprnode4 isa nullable AExpr
					var pexprnode1: nullable APipeExpr = new APipeExpr.init_apipeexpr(
						pexprnode2,
						tpipenode3,
						pexprnode4
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction313
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tcaretnode3 = nodearraylist2
					assert tcaretnode3 isa nullable TCaret
					var pexprnode4 = nodearraylist4
					assert pexprnode4 isa nullable AExpr
					var pexprnode1: nullable ACaretExpr = new ACaretExpr.init_acaretexpr(
						pexprnode2,
						tcaretnode3,
						pexprnode4
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction315
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tampnode3 = nodearraylist2
					assert tampnode3 isa nullable TAmp
					var pexprnode4 = nodearraylist4
					assert pexprnode4 isa nullable AExpr
					var pexprnode1: nullable AAmpExpr = new AAmpExpr.init_aampexpr(
						pexprnode2,
						tampnode3,
						pexprnode4
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction317
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tllnode3 = nodearraylist2
					assert tllnode3 isa nullable TLl
					var pexprnode4 = nodearraylist4
					assert pexprnode4 isa nullable AExpr
					var pexprnode1: nullable ALlExpr = new ALlExpr.init_allexpr(
						pexprnode2,
						tllnode3,
						pexprnode4
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction318
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tggnode3 = nodearraylist2
					assert tggnode3 isa nullable TGg
					var pexprnode4 = nodearraylist4
					assert pexprnode4 isa nullable AExpr
					var pexprnode1: nullable AGgExpr = new AGgExpr.init_aggexpr(
						pexprnode2,
						tggnode3,
						pexprnode4
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction320
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tplusnode3 = nodearraylist2
					assert tplusnode3 isa nullable TPlus
					var pexprnode4 = nodearraylist4
					assert pexprnode4 isa nullable AExpr
					var pexprnode1: nullable APlusExpr = new APlusExpr.init_aplusexpr(
						pexprnode2,
						tplusnode3,
						pexprnode4
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction321
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tminusnode3 = nodearraylist2
					assert tminusnode3 isa nullable TMinus
					var pexprnode4 = nodearraylist4
					assert pexprnode4 isa nullable AExpr
					var pexprnode1: nullable AMinusExpr = new AMinusExpr.init_aminusexpr(
						pexprnode2,
						tminusnode3,
						pexprnode4
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction323
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tstarnode3 = nodearraylist2
					assert tstarnode3 isa nullable TStar
					var pexprnode4 = nodearraylist4
					assert pexprnode4 isa nullable AExpr
					var pexprnode1: nullable AStarExpr = new AStarExpr.init_astarexpr(
						pexprnode2,
						tstarnode3,
						pexprnode4
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction324
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tslashnode3 = nodearraylist2
					assert tslashnode3 isa nullable TSlash
					var pexprnode4 = nodearraylist4
					assert pexprnode4 isa nullable AExpr
					var pexprnode1: nullable ASlashExpr = new ASlashExpr.init_aslashexpr(
						pexprnode2,
						tslashnode3,
						pexprnode4
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction325
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tpercentnode3 = nodearraylist2
					assert tpercentnode3 isa nullable TPercent
					var pexprnode4 = nodearraylist4
					assert pexprnode4 isa nullable AExpr
					var pexprnode1: nullable APercentExpr = new APercentExpr.init_apercentexpr(
						pexprnode2,
						tpercentnode3,
						pexprnode4
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction327
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tstarstarnode3 = nodearraylist2
					assert tstarstarnode3 isa nullable TStarstar
					var pexprnode4 = nodearraylist4
					assert pexprnode4 isa nullable AExpr
					var pexprnode1: nullable AStarstarExpr = new AStarstarExpr.init_astarstarexpr(
						pexprnode2,
						tstarstarnode3,
						pexprnode4
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction329
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tminusnode2 = nodearraylist1
					assert tminusnode2 isa nullable TMinus
					var pexprnode3 = nodearraylist2
					assert pexprnode3 isa nullable AExpr
					var pexprnode1: nullable AUminusExpr = new AUminusExpr.init_auminusexpr(
						tminusnode2,
						pexprnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction330
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tplusnode2 = nodearraylist1
					assert tplusnode2 isa nullable TPlus
					var pexprnode3 = nodearraylist2
					assert pexprnode3 isa nullable AExpr
					var pexprnode1: nullable AUplusExpr = new AUplusExpr.init_auplusexpr(
						tplusnode2,
						pexprnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction331
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var ttildenode2 = nodearraylist1
					assert ttildenode2 isa nullable TTilde
					var pexprnode3 = nodearraylist2
					assert pexprnode3 isa nullable AExpr
					var pexprnode1: nullable AUtildeExpr = new AUtildeExpr.init_autildeexpr(
						ttildenode2,
						pexprnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction332
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwoncenode2 = nodearraylist1
					assert tkwoncenode2 isa nullable TKwonce
					var pexprnode3 = nodearraylist3
					assert pexprnode3 isa nullable AExpr
					var pexprnode1: nullable AOnceExpr = new AOnceExpr.init_aonceexpr(
						tkwoncenode2,
						pexprnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction334
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwnewnode2 = nodearraylist1
					assert tkwnewnode2 isa nullable TKwnew
					var ptypenode3 = nodearraylist3
					assert ptypenode3 isa nullable AType
					var pexprsnode5 = nodearraylist4
					assert pexprsnode5 isa nullable AExprs
					var pexprnode1: nullable ANewExpr = new ANewExpr.init_anewexpr(
						tkwnewnode2,
						ptypenode3,
						null,
						pexprsnode5
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction335
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwnewnode2 = nodearraylist1
					assert tkwnewnode2 isa nullable TKwnew
					var ptypenode3 = nodearraylist3
					assert ptypenode3 isa nullable AType
					var listnode6 = new Array[Object]
					var pexprsnode5: nullable AListExprs = new AListExprs.init_alistexprs(
						listnode6
					)
					var pexprnode1: nullable ANewExpr = new ANewExpr.init_anewexpr(
						tkwnewnode2,
						ptypenode3,
						null,
						pexprsnode5
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction336
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwissetnode2 = nodearraylist1
					assert tkwissetnode2 isa nullable TKwisset
					var pexprnode3 = nodearraylist2
					assert pexprnode3 isa nullable AExpr
					var tattridnode4 = nodearraylist6
					assert tattridnode4 isa nullable TAttrid
					var pexprnode1: nullable AIssetAttrExpr = new AIssetAttrExpr.init_aissetattrexpr(
						tkwissetnode2,
						pexprnode3,
						tattridnode4
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction337
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwissetnode2 = nodearraylist1
					assert tkwissetnode2 isa nullable TKwisset
					var pexprnode3: nullable AImplicitSelfExpr = new AImplicitSelfExpr.init_aimplicitselfexpr
					var tattridnode4 = nodearraylist3
					assert tattridnode4 isa nullable TAttrid
					var pexprnode1: nullable AIssetAttrExpr = new AIssetAttrExpr.init_aissetattrexpr(
						tkwissetnode2,
						pexprnode3,
						tattridnode4
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction339
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tattridnode3 = nodearraylist5
					assert tattridnode3 isa nullable TAttrid
					var pexprnode1: nullable AAttrExpr = new AAttrExpr.init_aattrexpr(
						pexprnode2,
						tattridnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction340
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2: nullable AImplicitSelfExpr = new AImplicitSelfExpr.init_aimplicitselfexpr
					var tattridnode3 = nodearraylist2
					assert tattridnode3 isa nullable TAttrid
					var pexprnode1: nullable AAttrExpr = new AAttrExpr.init_aattrexpr(
						pexprnode2,
						tattridnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction342
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tidnode5 = nodearraylist4
					assert tidnode5 isa nullable TId
					var pqidnode3: nullable AQid = new AQid.init_aqid(
						null,
						tidnode5
					)
					var listnode7 = new Array[Object]
					var pexprsnode6: nullable AListExprs = new AListExprs.init_alistexprs(
						listnode7
					)
					var pexprnode1: nullable ACallExpr = new ACallExpr.init_acallexpr(
						pexprnode2,
						pqidnode3,
						pexprsnode6
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction344
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var listnode5 = new Array[Object]
					var tclassidnode6 = nodearraylist4
					assert tclassidnode6 isa nullable TClassid
					var pqualifiednode4: nullable AQualified = new AQualified.init_aqualified(
						listnode5,
						tclassidnode6
					)
					var tidnode7 = nodearraylist5
					assert tidnode7 isa nullable TId
					var pqidnode3: nullable AQid = new AQid.init_aqid(
						pqualifiednode4,
						tidnode7
					)
					var listnode9 = new Array[Object]
					var pexprsnode8: nullable AListExprs = new AListExprs.init_alistexprs(
						listnode9
					)
					var pexprnode1: nullable ACallExpr = new ACallExpr.init_acallexpr(
						pexprnode2,
						pqidnode3,
						pexprsnode8
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction346
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var listnode6 = new Array[Object]
					var listnode5 = nodearraylist4
					assert listnode5 isa Array[Object]
					listnode6 = concat(listnode6, listnode5)
					var tclassidnode7 = nodearraylist5
					assert tclassidnode7 isa nullable TClassid
					var pqualifiednode4: nullable AQualified = new AQualified.init_aqualified(
						listnode6,
						tclassidnode7
					)
					var tidnode8 = nodearraylist6
					assert tidnode8 isa nullable TId
					var pqidnode3: nullable AQid = new AQid.init_aqid(
						pqualifiednode4,
						tidnode8
					)
					var listnode10 = new Array[Object]
					var pexprsnode9: nullable AListExprs = new AListExprs.init_alistexprs(
						listnode10
					)
					var pexprnode1: nullable ACallExpr = new ACallExpr.init_acallexpr(
						pexprnode2,
						pqidnode3,
						pexprsnode9
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction348
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var listnode6 = new Array[Object]
					var listnode5 = nodearraylist4
					assert listnode5 isa Array[Object]
					listnode6 = concat(listnode6, listnode5)
					var pqualifiednode4: nullable AQualified = new AQualified.init_aqualified(
						listnode6,
						null
					)
					var tidnode8 = nodearraylist5
					assert tidnode8 isa nullable TId
					var pqidnode3: nullable AQid = new AQid.init_aqid(
						pqualifiednode4,
						tidnode8
					)
					var listnode10 = new Array[Object]
					var pexprsnode9: nullable AListExprs = new AListExprs.init_alistexprs(
						listnode10
					)
					var pexprnode1: nullable ACallExpr = new ACallExpr.init_acallexpr(
						pexprnode2,
						pqidnode3,
						pexprsnode9
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction350
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var pexprnode2: nullable AImplicitSelfExpr = new AImplicitSelfExpr.init_aimplicitselfexpr
					var tidnode5 = nodearraylist1
					assert tidnode5 isa nullable TId
					var pqidnode3: nullable AQid = new AQid.init_aqid(
						null,
						tidnode5
					)
					var listnode7 = new Array[Object]
					var pexprsnode6: nullable AListExprs = new AListExprs.init_alistexprs(
						listnode7
					)
					var pexprnode1: nullable ACallExpr = new ACallExpr.init_acallexpr(
						pexprnode2,
						pqidnode3,
						pexprsnode6
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction352
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2: nullable AImplicitSelfExpr = new AImplicitSelfExpr.init_aimplicitselfexpr
					var listnode5 = new Array[Object]
					var tclassidnode6 = nodearraylist1
					assert tclassidnode6 isa nullable TClassid
					var pqualifiednode4: nullable AQualified = new AQualified.init_aqualified(
						listnode5,
						tclassidnode6
					)
					var tidnode7 = nodearraylist2
					assert tidnode7 isa nullable TId
					var pqidnode3: nullable AQid = new AQid.init_aqid(
						pqualifiednode4,
						tidnode7
					)
					var listnode9 = new Array[Object]
					var pexprsnode8: nullable AListExprs = new AListExprs.init_alistexprs(
						listnode9
					)
					var pexprnode1: nullable ACallExpr = new ACallExpr.init_acallexpr(
						pexprnode2,
						pqidnode3,
						pexprsnode8
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction354
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2: nullable AImplicitSelfExpr = new AImplicitSelfExpr.init_aimplicitselfexpr
					var listnode6 = new Array[Object]
					var listnode5 = nodearraylist1
					assert listnode5 isa Array[Object]
					listnode6 = concat(listnode6, listnode5)
					var tclassidnode7 = nodearraylist2
					assert tclassidnode7 isa nullable TClassid
					var pqualifiednode4: nullable AQualified = new AQualified.init_aqualified(
						listnode6,
						tclassidnode7
					)
					var tidnode8 = nodearraylist3
					assert tidnode8 isa nullable TId
					var pqidnode3: nullable AQid = new AQid.init_aqid(
						pqualifiednode4,
						tidnode8
					)
					var listnode10 = new Array[Object]
					var pexprsnode9: nullable AListExprs = new AListExprs.init_alistexprs(
						listnode10
					)
					var pexprnode1: nullable ACallExpr = new ACallExpr.init_acallexpr(
						pexprnode2,
						pqidnode3,
						pexprsnode9
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction356
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2: nullable AImplicitSelfExpr = new AImplicitSelfExpr.init_aimplicitselfexpr
					var listnode6 = new Array[Object]
					var listnode5 = nodearraylist1
					assert listnode5 isa Array[Object]
					listnode6 = concat(listnode6, listnode5)
					var pqualifiednode4: nullable AQualified = new AQualified.init_aqualified(
						listnode6,
						null
					)
					var tidnode8 = nodearraylist2
					assert tidnode8 isa nullable TId
					var pqidnode3: nullable AQid = new AQid.init_aqid(
						pqualifiednode4,
						tidnode8
					)
					var listnode10 = new Array[Object]
					var pexprsnode9: nullable AListExprs = new AListExprs.init_alistexprs(
						listnode10
					)
					var pexprnode1: nullable ACallExpr = new ACallExpr.init_acallexpr(
						pexprnode2,
						pqidnode3,
						pexprsnode9
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction358
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pqualifiednode2 = nodearraylist1
					assert pqualifiednode2 isa nullable AQualified
					var tkwsupernode3 = nodearraylist2
					assert tkwsupernode3 isa nullable TKwsuper
					var listnode5 = new Array[Object]
					var pexprsnode4: nullable AListExprs = new AListExprs.init_alistexprs(
						listnode5
					)
					var pexprnode1: nullable ASuperExpr = new ASuperExpr.init_asuperexpr(
						pqualifiednode2,
						tkwsupernode3,
						pexprsnode4
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction360
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tkwinitnode3 = nodearraylist4
					assert tkwinitnode3 isa nullable TKwinit
					var listnode5 = new Array[Object]
					var pexprsnode4: nullable AListExprs = new AListExprs.init_alistexprs(
						listnode5
					)
					var pexprnode1: nullable AInitExpr = new AInitExpr.init_ainitexpr(
						pexprnode2,
						tkwinitnode3,
						pexprsnode4
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction362
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var pexprnode2: nullable AImplicitSelfExpr = new AImplicitSelfExpr.init_aimplicitselfexpr
					var tkwinitnode3 = nodearraylist1
					assert tkwinitnode3 isa nullable TKwinit
					var listnode5 = new Array[Object]
					var pexprsnode4: nullable AListExprs = new AListExprs.init_alistexprs(
						listnode5
					)
					var pexprnode1: nullable AInitExpr = new AInitExpr.init_ainitexpr(
						pexprnode2,
						tkwinitnode3,
						pexprsnode4
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction363
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var pexprsnode3 = nodearraylist2
					assert pexprsnode3 isa nullable AExprs
					var pexprnode1: nullable ABraExpr = new ABraExpr.init_abraexpr(
						pexprnode2,
						pexprsnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction364
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwnewnode2 = nodearraylist1
					assert tkwnewnode2 isa nullable TKwnew
					var ptypenode3 = nodearraylist3
					assert ptypenode3 isa nullable AType
					var tidnode6 = nodearraylist6
					assert tidnode6 isa nullable TId
					var pqidnode4: nullable AQid = new AQid.init_aqid(
						null,
						tidnode6
					)
					var pexprsnode7 = nodearraylist7
					assert pexprsnode7 isa nullable AExprs
					var pexprnode1: nullable ANewExpr = new ANewExpr.init_anewexpr(
						tkwnewnode2,
						ptypenode3,
						pqidnode4,
						pexprsnode7
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction365
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwnewnode2 = nodearraylist1
					assert tkwnewnode2 isa nullable TKwnew
					var ptypenode3 = nodearraylist3
					assert ptypenode3 isa nullable AType
					var tidnode6 = nodearraylist6
					assert tidnode6 isa nullable TId
					var pqidnode4: nullable AQid = new AQid.init_aqid(
						null,
						tidnode6
					)
					var listnode8 = new Array[Object]
					var pexprsnode7: nullable AListExprs = new AListExprs.init_alistexprs(
						listnode8
					)
					var pexprnode1: nullable ANewExpr = new ANewExpr.init_anewexpr(
						tkwnewnode2,
						ptypenode3,
						pqidnode4,
						pexprsnode7
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction366
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwnewnode2 = nodearraylist1
					assert tkwnewnode2 isa nullable TKwnew
					var ptypenode3 = nodearraylist3
					assert ptypenode3 isa nullable AType
					var listnode6 = new Array[Object]
					var tclassidnode7 = nodearraylist6
					assert tclassidnode7 isa nullable TClassid
					var pqualifiednode5: nullable AQualified = new AQualified.init_aqualified(
						listnode6,
						tclassidnode7
					)
					var tidnode8 = nodearraylist7
					assert tidnode8 isa nullable TId
					var pqidnode4: nullable AQid = new AQid.init_aqid(
						pqualifiednode5,
						tidnode8
					)
					var pexprsnode9 = nodearraylist8
					assert pexprsnode9 isa nullable AExprs
					var pexprnode1: nullable ANewExpr = new ANewExpr.init_anewexpr(
						tkwnewnode2,
						ptypenode3,
						pqidnode4,
						pexprsnode9
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction367
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwnewnode2 = nodearraylist1
					assert tkwnewnode2 isa nullable TKwnew
					var ptypenode3 = nodearraylist3
					assert ptypenode3 isa nullable AType
					var listnode6 = new Array[Object]
					var tclassidnode7 = nodearraylist6
					assert tclassidnode7 isa nullable TClassid
					var pqualifiednode5: nullable AQualified = new AQualified.init_aqualified(
						listnode6,
						tclassidnode7
					)
					var tidnode8 = nodearraylist7
					assert tidnode8 isa nullable TId
					var pqidnode4: nullable AQid = new AQid.init_aqid(
						pqualifiednode5,
						tidnode8
					)
					var listnode10 = new Array[Object]
					var pexprsnode9: nullable AListExprs = new AListExprs.init_alistexprs(
						listnode10
					)
					var pexprnode1: nullable ANewExpr = new ANewExpr.init_anewexpr(
						tkwnewnode2,
						ptypenode3,
						pqidnode4,
						pexprsnode9
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction368
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwnewnode2 = nodearraylist1
					assert tkwnewnode2 isa nullable TKwnew
					var ptypenode3 = nodearraylist3
					assert ptypenode3 isa nullable AType
					var listnode7 = new Array[Object]
					var listnode6 = nodearraylist6
					assert listnode6 isa Array[Object]
					listnode7 = concat(listnode7, listnode6)
					var tclassidnode8 = nodearraylist7
					assert tclassidnode8 isa nullable TClassid
					var pqualifiednode5: nullable AQualified = new AQualified.init_aqualified(
						listnode7,
						tclassidnode8
					)
					var tidnode9 = nodearraylist8
					assert tidnode9 isa nullable TId
					var pqidnode4: nullable AQid = new AQid.init_aqid(
						pqualifiednode5,
						tidnode9
					)
					var pexprsnode10 = nodearraylist9
					assert pexprsnode10 isa nullable AExprs
					var pexprnode1: nullable ANewExpr = new ANewExpr.init_anewexpr(
						tkwnewnode2,
						ptypenode3,
						pqidnode4,
						pexprsnode10
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction369
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwnewnode2 = nodearraylist1
					assert tkwnewnode2 isa nullable TKwnew
					var ptypenode3 = nodearraylist3
					assert ptypenode3 isa nullable AType
					var listnode7 = new Array[Object]
					var listnode6 = nodearraylist6
					assert listnode6 isa Array[Object]
					listnode7 = concat(listnode7, listnode6)
					var tclassidnode8 = nodearraylist7
					assert tclassidnode8 isa nullable TClassid
					var pqualifiednode5: nullable AQualified = new AQualified.init_aqualified(
						listnode7,
						tclassidnode8
					)
					var tidnode9 = nodearraylist8
					assert tidnode9 isa nullable TId
					var pqidnode4: nullable AQid = new AQid.init_aqid(
						pqualifiednode5,
						tidnode9
					)
					var listnode11 = new Array[Object]
					var pexprsnode10: nullable AListExprs = new AListExprs.init_alistexprs(
						listnode11
					)
					var pexprnode1: nullable ANewExpr = new ANewExpr.init_anewexpr(
						tkwnewnode2,
						ptypenode3,
						pqidnode4,
						pexprsnode10
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction370
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwnewnode2 = nodearraylist1
					assert tkwnewnode2 isa nullable TKwnew
					var ptypenode3 = nodearraylist3
					assert ptypenode3 isa nullable AType
					var listnode7 = new Array[Object]
					var listnode6 = nodearraylist6
					assert listnode6 isa Array[Object]
					listnode7 = concat(listnode7, listnode6)
					var pqualifiednode5: nullable AQualified = new AQualified.init_aqualified(
						listnode7,
						null
					)
					var tidnode9 = nodearraylist7
					assert tidnode9 isa nullable TId
					var pqidnode4: nullable AQid = new AQid.init_aqid(
						pqualifiednode5,
						tidnode9
					)
					var pexprsnode10 = nodearraylist8
					assert pexprsnode10 isa nullable AExprs
					var pexprnode1: nullable ANewExpr = new ANewExpr.init_anewexpr(
						tkwnewnode2,
						ptypenode3,
						pqidnode4,
						pexprsnode10
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction371
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwnewnode2 = nodearraylist1
					assert tkwnewnode2 isa nullable TKwnew
					var ptypenode3 = nodearraylist3
					assert ptypenode3 isa nullable AType
					var listnode7 = new Array[Object]
					var listnode6 = nodearraylist6
					assert listnode6 isa Array[Object]
					listnode7 = concat(listnode7, listnode6)
					var pqualifiednode5: nullable AQualified = new AQualified.init_aqualified(
						listnode7,
						null
					)
					var tidnode9 = nodearraylist7
					assert tidnode9 isa nullable TId
					var pqidnode4: nullable AQid = new AQid.init_aqid(
						pqualifiednode5,
						tidnode9
					)
					var listnode11 = new Array[Object]
					var pexprsnode10: nullable AListExprs = new AListExprs.init_alistexprs(
						listnode11
					)
					var pexprnode1: nullable ANewExpr = new ANewExpr.init_anewexpr(
						tkwnewnode2,
						ptypenode3,
						pqidnode4,
						pexprsnode10
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction372
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tkwasnode3 = nodearraylist4
					assert tkwasnode3 isa nullable TKwas
					var toparnode4 = nodearraylist6
					assert toparnode4 isa nullable TOpar
					var ptypenode5 = nodearraylist8
					assert ptypenode5 isa nullable AType
					var tcparnode6 = nodearraylist10
					assert tcparnode6 isa nullable TCpar
					var pexprnode1: nullable AAsCastExpr = new AAsCastExpr.init_aascastexpr(
						pexprnode2,
						tkwasnode3,
						toparnode4,
						ptypenode5,
						tcparnode6
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction373
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tkwasnode3 = nodearraylist4
					assert tkwasnode3 isa nullable TKwas
					var toparnode4 = nodearraylist6
					assert toparnode4 isa nullable TOpar
					var tkwnotnode5 = nodearraylist8
					assert tkwnotnode5 isa nullable TKwnot
					var tkwnullnode6 = nodearraylist10
					assert tkwnullnode6 isa nullable TKwnull
					var tcparnode7 = nodearraylist12
					assert tcparnode7 isa nullable TCpar
					var pexprnode1: nullable AAsNotnullExpr = new AAsNotnullExpr.init_aasnotnullexpr(
						pexprnode2,
						tkwasnode3,
						toparnode4,
						tkwnotnode5,
						tkwnullnode6,
						tcparnode7
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction374
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tkwasnode3 = nodearraylist4
					assert tkwasnode3 isa nullable TKwas
					var tkwnotnode5 = nodearraylist6
					assert tkwnotnode5 isa nullable TKwnot
					var tkwnullnode6 = nodearraylist8
					assert tkwnullnode6 isa nullable TKwnull
					var pexprnode1: nullable AAsNotnullExpr = new AAsNotnullExpr.init_aasnotnullexpr(
						pexprnode2,
						tkwasnode3,
						null,
						tkwnotnode5,
						tkwnullnode6,
						null
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction376
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tdotdotdotnode3 = nodearraylist2
					assert tdotdotdotnode3 isa nullable TDotdotdot
					var pexprnode1: nullable AVarargExpr = new AVarargExpr.init_avarargexpr(
						pexprnode2,
						tdotdotdotnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction377
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tidnode2 = nodearraylist1
					assert tidnode2 isa nullable TId
					var tassignnode3 = nodearraylist2
					assert tassignnode3 isa nullable TAssign
					var pexprnode4 = nodearraylist3
					assert pexprnode4 isa nullable AExpr
					var pexprnode1: nullable ANamedargExpr = new ANamedargExpr.init_anamedargexpr(
						tidnode2,
						tassignnode3,
						pexprnode4
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction378
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwselfnode2 = nodearraylist1
					assert tkwselfnode2 isa nullable TKwself
					var pannotationsnode3 = nodearraylist2
					assert pannotationsnode3 isa nullable AAnnotations
					var pexprnode1: nullable ASelfExpr = new ASelfExpr.init_aselfexpr(
						tkwselfnode2,
						pannotationsnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction379
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwtruenode2 = nodearraylist1
					assert tkwtruenode2 isa nullable TKwtrue
					var pannotationsnode3 = nodearraylist2
					assert pannotationsnode3 isa nullable AAnnotations
					var pexprnode1: nullable ATrueExpr = new ATrueExpr.init_atrueexpr(
						tkwtruenode2,
						pannotationsnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction380
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwfalsenode2 = nodearraylist1
					assert tkwfalsenode2 isa nullable TKwfalse
					var pannotationsnode3 = nodearraylist2
					assert pannotationsnode3 isa nullable AAnnotations
					var pexprnode1: nullable AFalseExpr = new AFalseExpr.init_afalseexpr(
						tkwfalsenode2,
						pannotationsnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction381
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwnullnode2 = nodearraylist1
					assert tkwnullnode2 isa nullable TKwnull
					var pannotationsnode3 = nodearraylist2
					assert pannotationsnode3 isa nullable AAnnotations
					var pexprnode1: nullable ANullExpr = new ANullExpr.init_anullexpr(
						tkwnullnode2,
						pannotationsnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction382
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tintegernode2 = nodearraylist1
					assert tintegernode2 isa nullable TInteger
					var pannotationsnode3 = nodearraylist2
					assert pannotationsnode3 isa nullable AAnnotations
					var pexprnode1: nullable AIntegerExpr = new AIntegerExpr.init_aintegerexpr(
						tintegernode2,
						pannotationsnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction383
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tfloatnode2 = nodearraylist1
					assert tfloatnode2 isa nullable TFloat
					var pannotationsnode3 = nodearraylist2
					assert pannotationsnode3 isa nullable AAnnotations
					var pexprnode1: nullable AFloatExpr = new AFloatExpr.init_afloatexpr(
						tfloatnode2,
						pannotationsnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction384
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tcharnode2 = nodearraylist1
					assert tcharnode2 isa nullable TChar
					var pannotationsnode3 = nodearraylist2
					assert pannotationsnode3 isa nullable AAnnotations
					var pexprnode1: nullable ACharExpr = new ACharExpr.init_acharexpr(
						tcharnode2,
						pannotationsnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction385
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tstringnode2 = nodearraylist1
					assert tstringnode2 isa nullable TString
					var pannotationsnode3 = nodearraylist2
					assert pannotationsnode3 isa nullable AAnnotations
					var pexprnode1: nullable AStringExpr = new AStringExpr.init_astringexpr(
						tstringnode2,
						pannotationsnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction388
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tobranode2 = nodearraylist1
					assert tobranode2 isa nullable TObra
					var pexprnode3 = nodearraylist3
					assert pexprnode3 isa nullable AExpr
					var tdotdotnode4 = nodearraylist5
					assert tdotdotnode4 isa nullable TDotdot
					var pexprnode5 = nodearraylist7
					assert pexprnode5 isa nullable AExpr
					var tcbranode6 = nodearraylist9
					assert tcbranode6 isa nullable TCbra
					var pannotationsnode7 = nodearraylist10
					assert pannotationsnode7 isa nullable AAnnotations
					var pexprnode1: nullable ACrangeExpr = new ACrangeExpr.init_acrangeexpr(
						tobranode2,
						pexprnode3,
						tdotdotnode4,
						pexprnode5,
						tcbranode6,
						pannotationsnode7
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction389
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tobranode2 = nodearraylist1
					assert tobranode2 isa nullable TObra
					var pexprnode3 = nodearraylist3
					assert pexprnode3 isa nullable AExpr
					var tdotdotnode4 = nodearraylist5
					assert tdotdotnode4 isa nullable TDotdot
					var pexprnode5 = nodearraylist7
					assert pexprnode5 isa nullable AExpr
					var tobranode6 = nodearraylist9
					assert tobranode6 isa nullable TObra
					var pannotationsnode7 = nodearraylist10
					assert pannotationsnode7 isa nullable AAnnotations
					var pexprnode1: nullable AOrangeExpr = new AOrangeExpr.init_aorangeexpr(
						tobranode2,
						pexprnode3,
						tdotdotnode4,
						pexprnode5,
						tobranode6,
						pannotationsnode7
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction390
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var tobranode2 = nodearraylist1
					assert tobranode2 isa nullable TObra
					var listnode3 = nodearraylist3
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var ptypenode5 = nodearraylist4
					assert ptypenode5 isa nullable AType
					var tcbranode6 = nodearraylist5
					assert tcbranode6 isa nullable TCbra
					var pannotationsnode7 = nodearraylist6
					assert pannotationsnode7 isa nullable AAnnotations
					var pexprnode1: nullable AArrayExpr = new AArrayExpr.init_aarrayexpr(
						tobranode2,
						listnode4,
						ptypenode5,
						tcbranode6,
						pannotationsnode7
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction391
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var toparnode2 = nodearraylist1
					assert toparnode2 isa nullable TOpar
					var pexprnode3 = nodearraylist3
					assert pexprnode3 isa nullable AExpr
					var tcparnode4 = nodearraylist5
					assert tcparnode4 isa nullable TCpar
					var pannotationsnode5 = nodearraylist6
					assert pannotationsnode5 isa nullable AAnnotations
					var pexprnode1: nullable AParExpr = new AParExpr.init_aparexpr(
						toparnode2,
						pexprnode3,
						tcparnode4,
						pannotationsnode5
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction393
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var listnode3 = nodearraylist2
					assert listnode3 isa Array[Object]
					if pexprnode2 != null then
						listnode4.add(pexprnode2)
					end
					listnode4 = concat(listnode4, listnode3)
					var pexprnode1: nullable AManyExpr = new AManyExpr.init_amanyexpr(
						listnode4
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction394
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode1 = nodearraylist3
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction395
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var listnode2 = new Array[Object]
					var pexprnode1 = nodearraylist1
					if pexprnode1 != null then
						listnode2.add(pexprnode1)
					end
					node_list = listnode2
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction396
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var pexprnode1 = nodearraylist1
					var listnode2 = nodearraylist2
					assert listnode2 isa Array[Object]
					if pexprnode1 != null then
						listnode3.add(pexprnode1)
					end
					listnode3 = concat(listnode3, listnode2)
					node_list = listnode3
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction398
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode1 = nodearraylist1
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction400
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwifnode2 = nodearraylist1
					assert tkwifnode2 isa nullable TKwif
					var pexprnode3 = nodearraylist3
					assert pexprnode3 isa nullable AExpr
					var tkwthennode4 = nodearraylist5
					assert tkwthennode4 isa nullable TKwthen
					var pexprnode5 = nodearraylist7
					assert pexprnode5 isa nullable AExpr
					var pexprnode1: nullable AIfExpr = new AIfExpr.init_aifexpr(
						tkwifnode2,
						pexprnode3,
						tkwthennode4,
						pexprnode5,
						null,
						null
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction401
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var listnode2 = nodearraylist1
					assert listnode2 isa Array[Object]
					var pexprnode3 = nodearraylist2
					assert pexprnode3 isa nullable AExpr
					listnode4 = concat(listnode4, listnode2)
					if pexprnode3 != null then
						listnode4.add(pexprnode3)
					end
					var pannotationsnode5 = nodearraylist3
					assert pannotationsnode5 isa nullable AAnnotations
					var pexprnode1: nullable ASuperstringExpr = new ASuperstringExpr.init_asuperstringexpr(
						listnode4,
						pannotationsnode5
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction402
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode5 = new Array[Object]
					var listnode2 = nodearraylist1
					assert listnode2 isa Array[Object]
					var listnode3 = nodearraylist2
					assert listnode3 isa Array[Object]
					var pexprnode4 = nodearraylist3
					assert pexprnode4 isa nullable AExpr
					listnode5 = concat(listnode5, listnode2)
					listnode5 = concat(listnode5, listnode3)
					if pexprnode4 != null then
						listnode5.add(pexprnode4)
					end
					var pannotationsnode6 = nodearraylist4
					assert pannotationsnode6 isa nullable AAnnotations
					var pexprnode1: nullable ASuperstringExpr = new ASuperstringExpr.init_asuperstringexpr(
						listnode5,
						pannotationsnode6
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction403
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var pexprnode1 = nodearraylist1
					var pexprnode2 = nodearraylist3
					if pexprnode1 != null then
						listnode3.add(pexprnode1)
					end
					if pexprnode2 != null then
						listnode3.add(pexprnode2)
					end
					node_list = listnode3
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction404
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode2 = new Array[Object]
					var pexprnode1 = nodearraylist1
					if pexprnode1 != null then
						listnode2.add(pexprnode1)
					end
					node_list = listnode2
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction405
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tstartstringnode2 = nodearraylist1
					assert tstartstringnode2 isa nullable TStartString
					var pexprnode1: nullable AStartStringExpr = new AStartStringExpr.init_astartstringexpr(
						tstartstringnode2
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction408
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tmidstringnode2 = nodearraylist1
					assert tmidstringnode2 isa nullable TMidString
					var pexprnode1: nullable AMidStringExpr = new AMidStringExpr.init_amidstringexpr(
						tmidstringnode2
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction409
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tendstringnode2 = nodearraylist1
					assert tendstringnode2 isa nullable TEndString
					var pexprnode1: nullable AEndStringExpr = new AEndStringExpr.init_aendstringexpr(
						tendstringnode2
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction410
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode6 = new Array[Object]
					var tatnode3 = nodearraylist1
					assert tatnode3 isa nullable TAt
					var pannotationnode5 = nodearraylist2
					assert pannotationnode5 isa nullable AAnnotation
					if pannotationnode5 != null then
						listnode6.add(pannotationnode5)
					end
					var pannotationsnode1: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						tatnode3,
						null,
						listnode6,
						null,
						null
					)
					node_list = pannotationsnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction411
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode6 = new Array[Object]
					var tatnode3 = nodearraylist1
					assert tatnode3 isa nullable TAt
					var toparnode4 = nodearraylist2
					assert toparnode4 isa nullable TOpar
					var listnode5 = nodearraylist4
					assert listnode5 isa Array[Object]
					listnode6 = concat(listnode6, listnode5)
					var tcparnode7 = nodearraylist6
					assert tcparnode7 isa nullable TCpar
					var pannotationsnode1: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						tatnode3,
						toparnode4,
						listnode6,
						tcparnode7,
						null
					)
					node_list = pannotationsnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction412
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var pannotationsnode1 = nodearraylist1
					node_list = pannotationsnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction414
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var tkwredefnode3 = nodearraylist1
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var patidnode5 = nodearraylist3
					assert patidnode5 isa nullable AAtid
					var pannotationsnode9 = nodearraylist4
					assert pannotationsnode9 isa nullable AAnnotations
					var pannotationnode1: nullable AAnnotation = new AAnnotation.init_aannotation(
						null,
						tkwredefnode3,
						pvisibilitynode4,
						patidnode5,
						null,
						listnode7,
						null,
						pannotationsnode9
					)
					node_list = pannotationnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction415
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var tkwredefnode3 = nodearraylist1
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var patidnode5 = nodearraylist3
					assert patidnode5 isa nullable AAtid
					var toparnode6 = nodearraylist4
					assert toparnode6 isa nullable TOpar
					var listnode7 = nodearraylist6
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var tcparnode9 = nodearraylist8
					assert tcparnode9 isa nullable TCpar
					var pannotationsnode10 = nodearraylist9
					assert pannotationsnode10 isa nullable AAnnotations
					var pannotationnode1: nullable AAnnotation = new AAnnotation.init_aannotation(
						null,
						tkwredefnode3,
						pvisibilitynode4,
						patidnode5,
						toparnode6,
						listnode8,
						tcparnode9,
						pannotationsnode10
					)
					node_list = pannotationnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction416
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var listnode2 = new Array[Object]
					var pannotationnode1 = nodearraylist1
					if pannotationnode1 != null then
						listnode2.add(pannotationnode1)
					end
					node_list = listnode2
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction417
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var pannotationnode1 = nodearraylist1
					var listnode2 = nodearraylist2
					assert listnode2 isa Array[Object]
					if pannotationnode1 != null then
						listnode3.add(pannotationnode1)
					end
					listnode3 = concat(listnode3, listnode2)
					node_list = listnode3
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction420
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var tkwredefnode3 = nodearraylist1
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var patidnode5 = nodearraylist3
					assert patidnode5 isa nullable AAtid
					var pexprnode7 = nodearraylist4
					assert pexprnode7 isa nullable AExpr
					if pexprnode7 != null then
						listnode8.add(pexprnode7)
					end
					var pannotationnode1: nullable AAnnotation = new AAnnotation.init_aannotation(
						null,
						tkwredefnode3,
						pvisibilitynode4,
						patidnode5,
						null,
						listnode8,
						null,
						null
					)
					node_list = pannotationnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction422
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pannotationnode1 = nodearraylist3
					node_list = pannotationnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction423
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var patidnode5 = nodearraylist4
					assert patidnode5 isa nullable AAtid
					var pannotationnode1: nullable AAnnotation = new AAnnotation.init_aannotation(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						patidnode5,
						null,
						listnode7,
						null,
						null
					)
					node_list = pannotationnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction424
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var patidnode5 = nodearraylist4
					assert patidnode5 isa nullable AAtid
					var pannotationsnode9 = nodearraylist5
					assert pannotationsnode9 isa nullable AAnnotations
					var pannotationnode1: nullable AAnnotation = new AAnnotation.init_aannotation(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						patidnode5,
						null,
						listnode7,
						null,
						pannotationsnode9
					)
					node_list = pannotationnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction425
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var patidnode5 = nodearraylist4
					assert patidnode5 isa nullable AAtid
					var toparnode6 = nodearraylist5
					assert toparnode6 isa nullable TOpar
					var listnode7 = nodearraylist7
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var tcparnode9 = nodearraylist8
					assert tcparnode9 isa nullable TCpar
					var pannotationnode1: nullable AAnnotation = new AAnnotation.init_aannotation(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						patidnode5,
						toparnode6,
						listnode8,
						tcparnode9,
						null
					)
					node_list = pannotationnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction426
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var patidnode5 = nodearraylist4
					assert patidnode5 isa nullable AAtid
					var toparnode6 = nodearraylist5
					assert toparnode6 isa nullable TOpar
					var listnode7 = nodearraylist7
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var tcparnode9 = nodearraylist8
					assert tcparnode9 isa nullable TCpar
					var pannotationsnode10 = nodearraylist9
					assert pannotationsnode10 isa nullable AAnnotations
					var pannotationnode1: nullable AAnnotation = new AAnnotation.init_aannotation(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						patidnode5,
						toparnode6,
						listnode8,
						tcparnode9,
						pannotationsnode10
					)
					node_list = pannotationnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction427
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var patidnode5 = nodearraylist4
					assert patidnode5 isa nullable AAtid
					var listnode7 = nodearraylist5
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var pannotationnode1: nullable AAnnotation = new AAnnotation.init_aannotation(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						patidnode5,
						null,
						listnode8,
						null,
						null
					)
					node_list = pannotationnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction428
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var patidnode5 = nodearraylist2
					assert patidnode5 isa nullable AAtid
					var ppropdefnode1: nullable AAnnotPropdef = new AAnnotPropdef.init_aannotpropdef(
						pdocnode2,
						null,
						null,
						patidnode5,
						null,
						listnode7,
						null,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction429
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var patidnode5 = nodearraylist2
					assert patidnode5 isa nullable AAtid
					var pannotationsnode9 = nodearraylist3
					assert pannotationsnode9 isa nullable AAnnotations
					var ppropdefnode1: nullable AAnnotPropdef = new AAnnotPropdef.init_aannotpropdef(
						pdocnode2,
						null,
						null,
						patidnode5,
						null,
						listnode7,
						null,
						pannotationsnode9
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction430
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var patidnode5 = nodearraylist2
					assert patidnode5 isa nullable AAtid
					var toparnode6 = nodearraylist3
					assert toparnode6 isa nullable TOpar
					var listnode7 = nodearraylist5
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var tcparnode9 = nodearraylist6
					assert tcparnode9 isa nullable TCpar
					var ppropdefnode1: nullable AAnnotPropdef = new AAnnotPropdef.init_aannotpropdef(
						pdocnode2,
						null,
						null,
						patidnode5,
						toparnode6,
						listnode8,
						tcparnode9,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction431
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var patidnode5 = nodearraylist2
					assert patidnode5 isa nullable AAtid
					var toparnode6 = nodearraylist3
					assert toparnode6 isa nullable TOpar
					var listnode7 = nodearraylist5
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var tcparnode9 = nodearraylist6
					assert tcparnode9 isa nullable TCpar
					var pannotationsnode10 = nodearraylist7
					assert pannotationsnode10 isa nullable AAnnotations
					var ppropdefnode1: nullable AAnnotPropdef = new AAnnotPropdef.init_aannotpropdef(
						pdocnode2,
						null,
						null,
						patidnode5,
						toparnode6,
						listnode8,
						tcparnode9,
						pannotationsnode10
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction432
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var patidnode5 = nodearraylist2
					assert patidnode5 isa nullable AAtid
					var listnode7 = nodearraylist3
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var ppropdefnode1: nullable AAnnotPropdef = new AAnnotPropdef.init_aannotpropdef(
						pdocnode2,
						null,
						null,
						patidnode5,
						null,
						listnode8,
						null,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction436
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var ptypenode2 = nodearraylist1
					assert ptypenode2 isa nullable AType
					var pexprnode1: nullable ATypeExpr = new ATypeExpr.init_atypeexpr(
						ptypenode2
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction439
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var pmethidnode3 = nodearraylist4
					assert pmethidnode3 isa nullable AMethid
					var pexprnode1: nullable AMethidExpr = new AMethidExpr.init_amethidexpr(
						pexprnode2,
						pmethidnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction440
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var pexprnode2: nullable AImplicitSelfExpr = new AImplicitSelfExpr.init_aimplicitselfexpr
					var pmethidnode3 = nodearraylist1
					assert pmethidnode3 isa nullable AMethid
					var pexprnode1: nullable AMethidExpr = new AMethidExpr.init_amethidexpr(
						pexprnode2,
						pmethidnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction441
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var pannotationsnode2 = nodearraylist1
					assert pannotationsnode2 isa nullable AAnnotations
					var pexprnode1: nullable AAtExpr = new AAtExpr.init_aatexpr(
						pannotationsnode2
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction442
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tidnode2 = nodearraylist1
					assert tidnode2 isa nullable TId
					var patidnode1: nullable AIdAtid = new AIdAtid.init_aidatid(
						tidnode2
					)
					node_list = patidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction443
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tkwexternnode2 = nodearraylist1
					assert tkwexternnode2 isa nullable TKwextern
					var patidnode1: nullable AKwexternAtid = new AKwexternAtid.init_akwexternatid(
						tkwexternnode2
					)
					node_list = patidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction444
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tkwabstractnode2 = nodearraylist1
					assert tkwabstractnode2 isa nullable TKwabstract
					var patidnode1: nullable AKwabstractAtid = new AKwabstractAtid.init_akwabstractatid(
						tkwabstractnode2
					)
					node_list = patidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction445
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var toparnode2 = nodearraylist1
					assert toparnode2 isa nullable TOpar
					var listnode3 = nodearraylist3
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var tcparnode5 = nodearraylist4
					assert tcparnode5 isa nullable TCpar
					var pexprsnode1: nullable AParExprs = new AParExprs.init_aparexprs(
						toparnode2,
						listnode4,
						tcparnode5
					)
					node_list = pexprsnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction446
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var toparnode2 = nodearraylist1
					assert toparnode2 isa nullable TOpar
					var tcparnode4 = nodearraylist3
					assert tcparnode4 isa nullable TCpar
					var pexprsnode1: nullable AParExprs = new AParExprs.init_aparexprs(
						toparnode2,
						listnode3,
						tcparnode4
					)
					node_list = pexprsnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction448
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					if pexprnode2 != null then
						listnode3.add(pexprnode2)
					end
					var pexprsnode1: nullable AListExprs = new AListExprs.init_alistexprs(
						listnode3
					)
					node_list = pexprsnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction450
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var listnode2 = new Array[Object]
					var pexprsnode1: nullable AListExprs = new AListExprs.init_alistexprs(
						listnode2
					)
					node_list = pexprsnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction451
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var tobranode2 = nodearraylist1
					assert tobranode2 isa nullable TObra
					var listnode3 = nodearraylist3
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var tcbranode5 = nodearraylist4
					assert tcbranode5 isa nullable TCbra
					var pexprsnode1: nullable ABraExprs = new ABraExprs.init_abraexprs(
						tobranode2,
						listnode4,
						tcbranode5
					)
					node_list = pexprsnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction453
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var pexprnode1 = nodearraylist1
					var listnode2 = nodearraylist3
					assert listnode2 isa Array[Object]
					if pexprnode1 != null then
						listnode3.add(pexprnode1)
					end
					listnode3 = concat(listnode3, listnode2)
					node_list = listnode3
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction454
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode1 = nodearraylist3
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction455
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode2 = new Array[Object]
					var listnode1 = nodearraylist3
					assert listnode1 isa Array[Object]
					listnode2 = concat(listnode2, listnode1)
					node_list = listnode2
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction456
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var listnode2 = new Array[Object]
					var listnode1 = nodearraylist1
					assert listnode1 isa Array[Object]
					listnode2 = concat(listnode2, listnode1)
					node_list = listnode2
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction457
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var listnode2 = new Array[Object]
					var tidnode1 = nodearraylist1
					if tidnode1 != null then
						listnode2.add(tidnode1)
					end
					node_list = listnode2
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction458
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode1 = nodearraylist1
					assert listnode1 isa Array[Object]
					var tidnode2 = nodearraylist4
					listnode3 = concat(listnode3, listnode1)
					if tidnode2 != null then
						listnode3.add(tidnode2)
					end
					node_list = listnode3
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction459
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var tidnode4 = nodearraylist1
					assert tidnode4 isa nullable TId
					var pmodulenamenode1: nullable AModuleName = new AModuleName.init_amodulename(
						null,
						listnode3,
						tidnode4
					)
					node_list = pmodulenamenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction460
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var listnode3 = nodearraylist1
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var tidnode5 = nodearraylist2
					assert tidnode5 isa nullable TId
					var pmodulenamenode1: nullable AModuleName = new AModuleName.init_amodulename(
						null,
						listnode4,
						tidnode5
					)
					node_list = pmodulenamenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction461
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var tquadnode2 = nodearraylist1
					assert tquadnode2 isa nullable TQuad
					var tidnode4 = nodearraylist3
					assert tidnode4 isa nullable TId
					var pmodulenamenode1: nullable AModuleName = new AModuleName.init_amodulename(
						tquadnode2,
						listnode3,
						tidnode4
					)
					node_list = pmodulenamenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction462
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var tquadnode2 = nodearraylist1
					assert tquadnode2 isa nullable TQuad
					var listnode3 = nodearraylist3
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var tidnode5 = nodearraylist4
					assert tidnode5 isa nullable TId
					var pmodulenamenode1: nullable AModuleName = new AModuleName.init_amodulename(
						tquadnode2,
						listnode4,
						tidnode5
					)
					node_list = pmodulenamenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction463
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var listnode2 = new Array[Object]
					var tclassidnode3 = nodearraylist1
					assert tclassidnode3 isa nullable TClassid
					var pqualifiednode1: nullable AQualified = new AQualified.init_aqualified(
						listnode2,
						tclassidnode3
					)
					node_list = pqualifiednode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction464
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode2 = nodearraylist1
					assert listnode2 isa Array[Object]
					listnode3 = concat(listnode3, listnode2)
					var tclassidnode4 = nodearraylist2
					assert tclassidnode4 isa nullable TClassid
					var pqualifiednode1: nullable AQualified = new AQualified.init_aqualified(
						listnode3,
						tclassidnode4
					)
					node_list = pqualifiednode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction465
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode2 = nodearraylist1
					assert listnode2 isa Array[Object]
					listnode3 = concat(listnode3, listnode2)
					var pqualifiednode1: nullable AQualified = new AQualified.init_aqualified(
						listnode3,
						null
					)
					node_list = pqualifiednode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction467
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tclassidnode3 = nodearraylist1
					assert tclassidnode3 isa nullable TClassid
					var pqclassidnode1: nullable AQclassid = new AQclassid.init_aqclassid(
						null,
						tclassidnode3
					)
					node_list = pqclassidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction468
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var tclassidnode4 = nodearraylist1
					assert tclassidnode4 isa nullable TClassid
					var pqualifiednode2: nullable AQualified = new AQualified.init_aqualified(
						listnode3,
						tclassidnode4
					)
					var tclassidnode5 = nodearraylist2
					assert tclassidnode5 isa nullable TClassid
					var pqclassidnode1: nullable AQclassid = new AQclassid.init_aqclassid(
						pqualifiednode2,
						tclassidnode5
					)
					node_list = pqclassidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction469
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var listnode3 = nodearraylist1
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var tclassidnode5 = nodearraylist2
					assert tclassidnode5 isa nullable TClassid
					var pqualifiednode2: nullable AQualified = new AQualified.init_aqualified(
						listnode4,
						tclassidnode5
					)
					var tclassidnode6 = nodearraylist3
					assert tclassidnode6 isa nullable TClassid
					var pqclassidnode1: nullable AQclassid = new AQclassid.init_aqclassid(
						pqualifiednode2,
						tclassidnode6
					)
					node_list = pqclassidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction470
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var listnode3 = nodearraylist1
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var pqualifiednode2: nullable AQualified = new AQualified.init_aqualified(
						listnode4,
						null
					)
					var tclassidnode6 = nodearraylist2
					assert tclassidnode6 isa nullable TClassid
					var pqclassidnode1: nullable AQclassid = new AQclassid.init_aqclassid(
						pqualifiednode2,
						tclassidnode6
					)
					node_list = pqclassidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction471
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var pmethidnode1 = nodearraylist1
					node_list = pmethidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction472
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pmethidnode1 = nodearraylist2
					node_list = pmethidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction473
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pmethidnode1 = nodearraylist3
					node_list = pmethidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction475
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tidnode1 = nodearraylist1
					node_list = tidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction476
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tclassidnode1 = nodearraylist1
					node_list = tclassidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction478
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tkwendnode1 = nodearraylist1
					node_list = tkwendnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction479
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction482
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode2 = nodearraylist1
					assert listnode2 isa Array[Object]
					listnode3 = concat(listnode3, listnode2)
					var pdocnode1: nullable ADoc = new ADoc.init_adoc(
						listnode3
					)
					node_list = pdocnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction483
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode2 = nodearraylist2
					assert listnode2 isa Array[Object]
					listnode3 = concat(listnode3, listnode2)
					var pdocnode1: nullable ADoc = new ADoc.init_adoc(
						listnode3
					)
					node_list = pdocnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction486
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					node_list = null
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction488
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					node_list = null
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction489
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode1 = nodearraylist2
					node_list = pdocnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction490
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode1 = nodearraylist3
					node_list = pdocnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction492
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode1 = nodearraylist4
					node_list = pdocnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction494
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var pdocnode1 = nodearraylist1
					node_list = pdocnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction495
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction498
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction872
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwissetnode2 = nodearraylist1
					assert tkwissetnode2 isa nullable TKwisset
					var pexprnode3 = nodearraylist2
					assert pexprnode3 isa nullable AExpr
					var tattridnode4 = nodearraylist4
					assert tattridnode4 isa nullable TAttrid
					var pexprnode1: nullable AIssetAttrExpr = new AIssetAttrExpr.init_aissetattrexpr(
						tkwissetnode2,
						pexprnode3,
						tattridnode4
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction874
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tattridnode3 = nodearraylist3
					assert tattridnode3 isa nullable TAttrid
					var pexprnode1: nullable AAttrExpr = new AAttrExpr.init_aattrexpr(
						pexprnode2,
						tattridnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction875
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tidnode5 = nodearraylist2
					assert tidnode5 isa nullable TId
					var pqidnode3: nullable AQid = new AQid.init_aqid(
						null,
						tidnode5
					)
					var pexprsnode6 = nodearraylist3
					assert pexprsnode6 isa nullable AExprs
					var pexprnode1: nullable ACallExpr = new ACallExpr.init_acallexpr(
						pexprnode2,
						pqidnode3,
						pexprsnode6
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction876
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tidnode5 = nodearraylist2
					assert tidnode5 isa nullable TId
					var pqidnode3: nullable AQid = new AQid.init_aqid(
						null,
						tidnode5
					)
					var listnode7 = new Array[Object]
					var pexprsnode6: nullable AListExprs = new AListExprs.init_alistexprs(
						listnode7
					)
					var pexprnode1: nullable ACallExpr = new ACallExpr.init_acallexpr(
						pexprnode2,
						pqidnode3,
						pexprsnode6
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction877
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var listnode5 = new Array[Object]
					var tclassidnode6 = nodearraylist2
					assert tclassidnode6 isa nullable TClassid
					var pqualifiednode4: nullable AQualified = new AQualified.init_aqualified(
						listnode5,
						tclassidnode6
					)
					var tidnode7 = nodearraylist3
					assert tidnode7 isa nullable TId
					var pqidnode3: nullable AQid = new AQid.init_aqid(
						pqualifiednode4,
						tidnode7
					)
					var pexprsnode8 = nodearraylist4
					assert pexprsnode8 isa nullable AExprs
					var pexprnode1: nullable ACallExpr = new ACallExpr.init_acallexpr(
						pexprnode2,
						pqidnode3,
						pexprsnode8
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction878
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var listnode5 = new Array[Object]
					var tclassidnode6 = nodearraylist2
					assert tclassidnode6 isa nullable TClassid
					var pqualifiednode4: nullable AQualified = new AQualified.init_aqualified(
						listnode5,
						tclassidnode6
					)
					var tidnode7 = nodearraylist3
					assert tidnode7 isa nullable TId
					var pqidnode3: nullable AQid = new AQid.init_aqid(
						pqualifiednode4,
						tidnode7
					)
					var listnode9 = new Array[Object]
					var pexprsnode8: nullable AListExprs = new AListExprs.init_alistexprs(
						listnode9
					)
					var pexprnode1: nullable ACallExpr = new ACallExpr.init_acallexpr(
						pexprnode2,
						pqidnode3,
						pexprsnode8
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction879
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var listnode6 = new Array[Object]
					var listnode5 = nodearraylist2
					assert listnode5 isa Array[Object]
					listnode6 = concat(listnode6, listnode5)
					var tclassidnode7 = nodearraylist3
					assert tclassidnode7 isa nullable TClassid
					var pqualifiednode4: nullable AQualified = new AQualified.init_aqualified(
						listnode6,
						tclassidnode7
					)
					var tidnode8 = nodearraylist4
					assert tidnode8 isa nullable TId
					var pqidnode3: nullable AQid = new AQid.init_aqid(
						pqualifiednode4,
						tidnode8
					)
					var pexprsnode9 = nodearraylist5
					assert pexprsnode9 isa nullable AExprs
					var pexprnode1: nullable ACallExpr = new ACallExpr.init_acallexpr(
						pexprnode2,
						pqidnode3,
						pexprsnode9
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction880
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var listnode6 = new Array[Object]
					var listnode5 = nodearraylist2
					assert listnode5 isa Array[Object]
					listnode6 = concat(listnode6, listnode5)
					var tclassidnode7 = nodearraylist3
					assert tclassidnode7 isa nullable TClassid
					var pqualifiednode4: nullable AQualified = new AQualified.init_aqualified(
						listnode6,
						tclassidnode7
					)
					var tidnode8 = nodearraylist4
					assert tidnode8 isa nullable TId
					var pqidnode3: nullable AQid = new AQid.init_aqid(
						pqualifiednode4,
						tidnode8
					)
					var listnode10 = new Array[Object]
					var pexprsnode9: nullable AListExprs = new AListExprs.init_alistexprs(
						listnode10
					)
					var pexprnode1: nullable ACallExpr = new ACallExpr.init_acallexpr(
						pexprnode2,
						pqidnode3,
						pexprsnode9
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction881
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var listnode6 = new Array[Object]
					var listnode5 = nodearraylist2
					assert listnode5 isa Array[Object]
					listnode6 = concat(listnode6, listnode5)
					var pqualifiednode4: nullable AQualified = new AQualified.init_aqualified(
						listnode6,
						null
					)
					var tidnode8 = nodearraylist3
					assert tidnode8 isa nullable TId
					var pqidnode3: nullable AQid = new AQid.init_aqid(
						pqualifiednode4,
						tidnode8
					)
					var pexprsnode9 = nodearraylist4
					assert pexprsnode9 isa nullable AExprs
					var pexprnode1: nullable ACallExpr = new ACallExpr.init_acallexpr(
						pexprnode2,
						pqidnode3,
						pexprsnode9
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction882
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var listnode6 = new Array[Object]
					var listnode5 = nodearraylist2
					assert listnode5 isa Array[Object]
					listnode6 = concat(listnode6, listnode5)
					var pqualifiednode4: nullable AQualified = new AQualified.init_aqualified(
						listnode6,
						null
					)
					var tidnode8 = nodearraylist3
					assert tidnode8 isa nullable TId
					var pqidnode3: nullable AQid = new AQid.init_aqid(
						pqualifiednode4,
						tidnode8
					)
					var listnode10 = new Array[Object]
					var pexprsnode9: nullable AListExprs = new AListExprs.init_alistexprs(
						listnode10
					)
					var pexprnode1: nullable ACallExpr = new ACallExpr.init_acallexpr(
						pexprnode2,
						pqidnode3,
						pexprsnode9
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction885
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tkwinitnode3 = nodearraylist2
					assert tkwinitnode3 isa nullable TKwinit
					var pexprsnode4 = nodearraylist3
					assert pexprsnode4 isa nullable AExprs
					var pexprnode1: nullable AInitExpr = new AInitExpr.init_ainitexpr(
						pexprnode2,
						tkwinitnode3,
						pexprsnode4
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction886
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tkwinitnode3 = nodearraylist2
					assert tkwinitnode3 isa nullable TKwinit
					var listnode5 = new Array[Object]
					var pexprsnode4: nullable AListExprs = new AListExprs.init_alistexprs(
						listnode5
					)
					var pexprnode1: nullable AInitExpr = new AInitExpr.init_ainitexpr(
						pexprnode2,
						tkwinitnode3,
						pexprsnode4
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction910
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode1 = nodearraylist1
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction911
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var pexprnode1: nullable AImplicitSelfExpr = new AImplicitSelfExpr.init_aimplicitselfexpr
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction1079
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var listnode2 = new Array[Object]
					var pimportnode1 = nodearraylist1
					if pimportnode1 != null then
						listnode2.add(pimportnode1)
					end
					node_list = listnode2
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction1080
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode1 = nodearraylist1
					assert listnode1 isa Array[Object]
					var pimportnode2 = nodearraylist2
					listnode3 = concat(listnode3, listnode1)
					if pimportnode2 != null then
						listnode3.add(pimportnode2)
					end
					node_list = listnode3
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction1081
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var listnode2 = new Array[Object]
					var pexterncodeblocknode1 = nodearraylist1
					if pexterncodeblocknode1 != null then
						listnode2.add(pexterncodeblocknode1)
					end
					node_list = listnode2
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction1082
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode1 = nodearraylist1
					assert listnode1 isa Array[Object]
					var pexterncodeblocknode2 = nodearraylist2
					listnode3 = concat(listnode3, listnode1)
					if pexterncodeblocknode2 != null then
						listnode3.add(pexterncodeblocknode2)
					end
					node_list = listnode3
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction1083
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var listnode2 = new Array[Object]
					var pclassdefnode1 = nodearraylist1
					if pclassdefnode1 != null then
						listnode2.add(pclassdefnode1)
					end
					node_list = listnode2
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction1084
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode1 = nodearraylist1
					assert listnode1 isa Array[Object]
					var pclassdefnode2 = nodearraylist2
					listnode3 = concat(listnode3, listnode1)
					if pclassdefnode2 != null then
						listnode3.add(pclassdefnode2)
					end
					node_list = listnode3
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction1086
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode1 = nodearraylist1
					assert listnode1 isa Array[Object]
					var pformaldefnode2 = nodearraylist2
					listnode3 = concat(listnode3, listnode1)
					if pformaldefnode2 != null then
						listnode3.add(pformaldefnode2)
					end
					node_list = listnode3
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction1088
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode1 = nodearraylist1
					assert listnode1 isa Array[Object]
					var ppropdefnode2 = nodearraylist2
					listnode3 = concat(listnode3, listnode1)
					if ppropdefnode2 != null then
						listnode3.add(ppropdefnode2)
					end
					node_list = listnode3
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction1090
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode1 = nodearraylist1
					assert listnode1 isa Array[Object]
					var pannotationnode2 = nodearraylist2
					listnode3 = concat(listnode3, listnode1)
					if pannotationnode2 != null then
						listnode3.add(pannotationnode2)
					end
					node_list = listnode3
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction1091
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var listnode2 = new Array[Object]
					var pparamnode1 = nodearraylist1
					if pparamnode1 != null then
						listnode2.add(pparamnode1)
					end
					node_list = listnode2
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction1092
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode1 = nodearraylist1
					assert listnode1 isa Array[Object]
					var pparamnode2 = nodearraylist2
					listnode3 = concat(listnode3, listnode1)
					if pparamnode2 != null then
						listnode3.add(pparamnode2)
					end
					node_list = listnode3
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction1093
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var listnode2 = new Array[Object]
					var pexterncallnode1 = nodearraylist1
					if pexterncallnode1 != null then
						listnode2.add(pexterncallnode1)
					end
					node_list = listnode2
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction1094
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode1 = nodearraylist1
					assert listnode1 isa Array[Object]
					var pexterncallnode2 = nodearraylist2
					listnode3 = concat(listnode3, listnode1)
					if pexterncallnode2 != null then
						listnode3.add(pexterncallnode2)
					end
					node_list = listnode3
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction1096
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode1 = nodearraylist1
					assert listnode1 isa Array[Object]
					var ptypenode2 = nodearraylist2
					listnode3 = concat(listnode3, listnode1)
					if ptypenode2 != null then
						listnode3.add(ptypenode2)
					end
					node_list = listnode3
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction1098
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode1 = nodearraylist1
					assert listnode1 isa Array[Object]
					var pexprnode2 = nodearraylist2
					listnode3 = concat(listnode3, listnode1)
					if pexprnode2 != null then
						listnode3.add(pexprnode2)
					end
					node_list = listnode3
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction1104
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode1 = nodearraylist1
					assert listnode1 isa Array[Object]
					var listnode2 = nodearraylist2
					assert listnode2 isa Array[Object]
					listnode3 = concat(listnode3, listnode1)
					listnode3 = concat(listnode3, listnode2)
					node_list = listnode3
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction1112
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode1 = nodearraylist1
					assert listnode1 isa Array[Object]
					var tidnode2 = nodearraylist2
					listnode3 = concat(listnode3, listnode1)
					if tidnode2 != null then
						listnode3.add(tidnode2)
					end
					node_list = listnode3
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction1113
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var listnode2 = new Array[Object]
					var tcommentnode1 = nodearraylist1
					if tcommentnode1 != null then
						listnode2.add(tcommentnode1)
					end
					node_list = listnode2
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction1114
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode1 = nodearraylist1
					assert listnode1 isa Array[Object]
					var tcommentnode2 = nodearraylist2
					listnode3 = concat(listnode3, listnode1)
					if tcommentnode2 != null then
						listnode3.add(tcommentnode2)
					end
					node_list = listnode3
					p.push(p.go_to(_goto), node_list)
	end
end
